1- How to create form?
      private formBuilder: FormBuilder,
      form: FormGroup;
      this.form: FormGroup = this.formBuilder.group({
          Period: [
            '',
            [
              Validators.required,
              Validators.pattern(
                this.helperFunctions.getRegex(RegexKey.PositiveIntegerNumber)
              )
            ]
          ],
          RequestedLabor_: this.formBuilder.group({
            Nationality: ['', Validators.required],
            Profession: ['', Validators.required],
            LaborCount: [
              '',
              [
                Validators.required,
                Validators.pattern(
                  this.helperFunctions.getRegex(RegexKey.PositiveIntegerNumber)
                )
              ]
            ]
          }),
          RequestedLabor: this.formBuilder.array([], Validators.required)
        });

2- How to add control to form group ?
      this.form.addControl('Id', new FormControl('', Validators.required));

3- How to access control iinside inner form group?
      this.form.get('RequestedLabor_').get('LaborCount').value;

4- How to push item in dataItems in top ?
      this.dataItems.unshift(requestedLaborDetail);

5- How to add form group in form array?
      (form.get('RequestedLabor') as FormArray).push(
         return this.formBuilder.group({
            NationalityId: [
              form.get('RequestedLabor_').get('Nationality').value.Id,
              Validators.required ]
           });
      );

6- How to remove form group from form array?
      (form.get('RequestedLabor') as FormArray).value.findIndex(
         p => p.NationalityId === nationalityId && p.ProfessionId === professionId
     );

7- How to remove item from array?
      dataItems.splice(
            dataItems.findIndex(
              p =>
                p.NationalityId === nationalityId && p.ProfessionId === professionId
            ),
            1
          );

8- How to resolve date submit problem?
      private datePipe: DatePipe
      postedViewModel.ExpectedContractDate = this.datePipe.transform(
      postedViewModel.ExpectedContractDate
    );

9- How to colse an observable?
    private subscription: Subscription;
    this.subscription = new Subscription();
       this.subscription.add(
        this.globalService.languageOnChange().subscribe(() => {
          this.getData();
      })
    );

10- How to set value in control?
    this.form.controls['Id'].setValue('20');

11- How to disable control or form group in form ?
    this.form.controls.RequestedLabor_.disable();

12- How to navigate to another component?
    * there are three way to navigate to another component
      private route: ActivatedRoute
      private router: Router
    1- Required parameters
      {path:'movies/:id', component:MovieDetailsComponent}
      <a [routerLink]="['/movies',movie.id]"></a>
      this.router.navigate(['/movies',this.id]);
      result: http://localhost:4200/movies/5
      Read data: this.route.snapshot.paramMap.get('id');

    2- optional parameters
      {path:'movies', component:MovieDetailsComponent}
      <a [routerLink]="['/movies',{id:this.id}]"></a>
      this.router.navigate(['/movies',{id:this.id}]);
      result: http://localhost:4200/movies;id=5;
      Read data: this.route.snapshot.paramMap.get('id');

    3- query parameters
      {path:'movies', component:MovieDetailsComponent}
      <a [routerLink]="['/movies']" [queryParams]="{id: id}"></a>
      this.router.navigate(['/movies'],{queryParams:{id:id}});
      result: http://localhost:4200/movies?id=5;
      Read data: this.route.snapshot.queryParamMap.get('id');

13- How to set value to checkbox control?
    this.form.get('IsCashBox').setValue(true);

14- How to pass data from component to another one?
      1- Parent to Child: Sharing Data via Input
        in child:
          @Input() childMessage: string;
        in parent:
          <app-child [childMessage]="parentMessage"></app-child>
      2- using view child (child selector must be in parent)
         child wonâ€™t be available until after the view has been initialized
           @ViewChild(ChildComponent) child;
           this.message = this.child.message;
      3- Child to Parent: Sharing Data via Output() and EventEmitter
         in parent:
          <app-child (messageEvent)="receiveMessage($event)"></app-child>
          in child:
            @Output() messageEvent = new EventEmitter<string>();
            sendMessage() {
               this.messageEvent.emit(this.message)
            }
      4- Unrelated Components: Sharing Data with a Service
          we can use  RxJS BehaviorSubject  or regular RxJS Subject
          https://angularfirebase.com/lessons/sharing-data-between-angular-components-four-methods/

15- How to load data before rendering your view?
    resolver is the best solution !!
    for example if user is logged redirect to dashboard otherwise redirect to login page

16- List angular life cycle hook?
    Angular calls these hook methods in the following order:
      ngOnChanges: When an input/output binding value changes.
      ngOnInit: After the first ngOnChanges.
      ngDoCheck: Called during every change detection run, immediately after ngOnChanges() and ngOnInit(). Developer's custom change detection.
      ngAfterContentInit: After component content initialized.
      ngAfterContentChecked: After every check of component content.
      ngAfterViewInit: After a component's views are initialized.
      ngAfterViewChecked: After every check of a component's views.
      ngOnDestroy: Just before the directive is destroyed.

17- Concat two arrays
    [].concat(this.calculationFields, this.domainFields)




