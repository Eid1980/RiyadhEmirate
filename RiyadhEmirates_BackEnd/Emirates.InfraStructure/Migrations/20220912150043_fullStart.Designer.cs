// <auto-generated />
using System;
using Emirates.InfraStructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Emirates.InfraStructure.Migrations
{
    [DbContext(typeof(EmiratesContext))]
    [Migration("20220912150043_fullStart")]
    partial class fullStart
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.HasSequence("RequestNumberSequence", "Request")
                .StartsAt(100000L);

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Audience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.ToTable("Audiences", "Lookup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = new Guid("cdbc34fb-d2b3-40c3-9f1e-32abfe47299c"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "مواطنين",
                            NameEn = "Citizens"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = new Guid("5a99d784-2bdd-4151-9a07-1369c9e34e74"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "مقيمين",
                            NameEn = "Residents"
                        },
                        new
                        {
                            Id = 3,
                            ConcurrencyStamp = new Guid("a6a465be-92ef-430d-80aa-10189c113531"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "زائرين",
                            NameEn = "Visitors"
                        });
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.BuildingType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.ToTable("BuildingTypes", "Lookup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = new Guid("25fc499d-5ba3-4494-ad01-7483e4dc9f6f"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "شقة",
                            NameEn = "Apartment"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = new Guid("fb7125b7-b2c0-433f-8d66-4425c8e53e00"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "فيلا",
                            NameEn = "Villa"
                        },
                        new
                        {
                            Id = 3,
                            ConcurrencyStamp = new Guid("24a58d10-c6b2-4154-bd7e-97495078d1df"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "عمارة سكنية",
                            NameEn = "Residential Building"
                        },
                        new
                        {
                            Id = 4,
                            ConcurrencyStamp = new Guid("506fa7e7-128a-4e7e-89c0-ae50dd10103b"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "مبنى تجاري",
                            NameEn = "Commercial Building"
                        });
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.CaseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.ToTable("CaseTypes", "Lookup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = new Guid("184b61c5-bcc7-4ff5-87bd-ed36ab42fa83"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "قضية جنائية",
                            NameEn = "Criminal Case"
                        });
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.CommentStage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("CanShowComment")
                        .HasColumnType("bit");

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.ToTable("CommentStages", "Lookup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CanShowComment = false,
                            ConcurrencyStamp = new Guid("ed64fa11-2a55-44ac-a632-89197a953f54"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "جديد",
                            NameEn = "New"
                        },
                        new
                        {
                            Id = 2,
                            CanShowComment = false,
                            ConcurrencyStamp = new Guid("46c3fa0a-7065-4341-b765-f348bd823564"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "معتمد",
                            NameEn = "Approved"
                        },
                        new
                        {
                            Id = 3,
                            CanShowComment = false,
                            ConcurrencyStamp = new Guid("893ca6af-041e-4b55-ac76-26de97a6f530"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "مرفوض",
                            NameEn = "Rejected"
                        });
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.DefendantType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.ToTable("DefendantTypes", "Lookup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = new Guid("2e056eb7-6ede-4279-9eca-edba153445fb"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "فرد",
                            NameEn = "Individual"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = new Guid("33691fa4-4aa3-4154-86f6-d56d361ce65e"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "شركة",
                            NameEn = "Company"
                        },
                        new
                        {
                            Id = 3,
                            ConcurrencyStamp = new Guid("97ae6b50-212f-434f-8c1a-5476b9493565"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "جهة حكومية",
                            NameEn = "Governate"
                        });
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Governorate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.ToTable("Governorates", "Lookup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = new Guid("a522ebe5-2fb7-497e-b432-7517a292fa22"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "مدينة الرياض مقر الإمارة",
                            NameEn = "Emirate of Riyadh City"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = new Guid("950d7ce3-5108-41f3-bf7f-fb3a49d11c4f"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظةالدرعية",
                            NameEn = "Diriyah"
                        },
                        new
                        {
                            Id = 3,
                            ConcurrencyStamp = new Guid("45afd5bd-5f8b-4db9-86a9-4fe85e82630b"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظةالخرج",
                            NameEn = "Al-Kharj"
                        },
                        new
                        {
                            Id = 4,
                            ConcurrencyStamp = new Guid("c5d556cb-f697-4c1f-80c2-38e367f52eaa"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظةالدوادمي",
                            NameEn = "Dawadmi"
                        },
                        new
                        {
                            Id = 5,
                            ConcurrencyStamp = new Guid("9bfaf30e-16db-436d-b8b3-300871f7cd83"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظةالمجمعة",
                            NameEn = "Al Majma'ah"
                        },
                        new
                        {
                            Id = 6,
                            ConcurrencyStamp = new Guid("2d92f481-0dc8-460c-91d8-a0a9de4eb807"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظةالقويعية",
                            NameEn = "Al Quwaiiyah"
                        },
                        new
                        {
                            Id = 7,
                            ConcurrencyStamp = new Guid("93e81335-ef08-45dd-9b07-b10a82029487"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظة وادي الدواسر",
                            NameEn = "Wadi ad-Dawasir"
                        },
                        new
                        {
                            Id = 8,
                            ConcurrencyStamp = new Guid("abc6bdc0-fe13-438f-a2e5-abc45bbb28cc"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظةالأفلاج",
                            NameEn = "Al-Aflaj"
                        },
                        new
                        {
                            Id = 9,
                            ConcurrencyStamp = new Guid("976ec77a-344b-4752-aa1c-3e6707641fe5"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظةالزلفي",
                            NameEn = "Az Zulfi"
                        },
                        new
                        {
                            Id = 10,
                            ConcurrencyStamp = new Guid("2515d452-3803-474f-9e78-ba71a3977ca1"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظة شـقراء",
                            NameEn = "Shaqra"
                        },
                        new
                        {
                            Id = 11,
                            ConcurrencyStamp = new Guid("316fe43c-7710-45ec-911e-239ef5968b7a"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظة حوطةبني تميم",
                            NameEn = "Howtat Bani Tamim"
                        },
                        new
                        {
                            Id = 12,
                            ConcurrencyStamp = new Guid("bd55b161-821f-4200-ba17-9897757c556d"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظة عفيـف",
                            NameEn = "Afif"
                        },
                        new
                        {
                            Id = 13,
                            ConcurrencyStamp = new Guid("1b8efc9b-9ea0-4092-9b10-5391fc07d3d9"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظةالسليل",
                            NameEn = "As Sulayyil"
                        },
                        new
                        {
                            Id = 14,
                            ConcurrencyStamp = new Guid("48bb8e60-dadf-4179-a85c-4f8957b29d41"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظة ضـرمـا",
                            NameEn = "Dhurma"
                        },
                        new
                        {
                            Id = 15,
                            ConcurrencyStamp = new Guid("6c725454-67cb-4784-beb8-5e175561416f"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظةالمزاحمية",
                            NameEn = "Al-Muzahmiya"
                        },
                        new
                        {
                            Id = 16,
                            ConcurrencyStamp = new Guid("9e9a6950-081b-439a-8ee3-d930e00c4954"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظة رمـاح",
                            NameEn = "Rumah"
                        },
                        new
                        {
                            Id = 17,
                            ConcurrencyStamp = new Guid("5c3fa5d7-725f-4abe-94ac-f42030db9257"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظة ثـادق",
                            NameEn = "Thadiq"
                        },
                        new
                        {
                            Id = 18,
                            ConcurrencyStamp = new Guid("579d741e-cf85-4c55-9d99-ba39b6dc8083"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظة حـريملاء",
                            NameEn = "Huraymila"
                        },
                        new
                        {
                            Id = 19,
                            ConcurrencyStamp = new Guid("ade90244-6dca-428f-81dc-eb57cfabcc0b"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظةالحريق",
                            NameEn = "Al Hariq"
                        },
                        new
                        {
                            Id = 20,
                            ConcurrencyStamp = new Guid("439ef88b-3458-44f1-99be-87991a3d9f89"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظةالغـاط",
                            NameEn = "Al Ghat"
                        },
                        new
                        {
                            Id = 21,
                            ConcurrencyStamp = new Guid("0ab4c6c1-3909-436e-9d6f-be5c3aa60590"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظة مرات",
                            NameEn = "Marat"
                        },
                        new
                        {
                            Id = 22,
                            ConcurrencyStamp = new Guid("59d53072-7134-425b-909a-07f045e882ef"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظة الدلم",
                            NameEn = "Ad-Dilam"
                        },
                        new
                        {
                            Id = 23,
                            ConcurrencyStamp = new Guid("cadb4b8d-1e55-407b-9615-e7b05898620f"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظة الرين",
                            NameEn = "Rayn"
                        });
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.LatestNews", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsArabic")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NewsCategueryId")
                        .HasColumnType("int");

                    b.Property<string>("NewsOrigin")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<bool>("OpenComments")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.HasIndex("NewsCategueryId");

                    b.ToTable("LatestNews", "DataManagement");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.LatestNewsComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int>("CommentStageId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LatestNewsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommentStageId");

                    b.HasIndex("LastModifiedBy");

                    b.HasIndex("LatestNewsId");

                    b.ToTable("LatestNewsComments", "DataManagement");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.MainPagePoints", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ConcurrencyStamp")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("PageContentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PageContentId");

                    b.ToTable("MainPagePoints", "DataManagement");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.MaritalStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.ToTable("MaritalStatuses", "Lookup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = new Guid("75e233fb-219f-4fef-a815-8f61098a9fa8"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "أعزب",
                            NameEn = "Single"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = new Guid("c92c4223-2d51-417c-ae9d-e844dab132b6"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "متزوج",
                            NameEn = "Married"
                        },
                        new
                        {
                            Id = 3,
                            ConcurrencyStamp = new Guid("56f12914-6e83-430c-b479-98b158a69cb9"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "مطلق",
                            NameEn = "Divorced"
                        },
                        new
                        {
                            Id = 4,
                            ConcurrencyStamp = new Guid("a1431f09-3933-4e97-9109-64db0554012f"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "أرمل",
                            NameEn = "Widower"
                        });
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Nationality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("DialCode")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Iso2")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("LastModifiedBy");

                    b.ToTable("Nationalities", "Lookup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "101",
                            ConcurrencyStamp = new Guid("bcd21309-f23c-476b-a9e9-f7ad1b99524d"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "971",
                            IsActive = true,
                            Iso2 = "ae",
                            NameAr = "الامارات العربية",
                            NameEn = "Arab Emirates"
                        },
                        new
                        {
                            Id = 2,
                            Code = "102",
                            ConcurrencyStamp = new Guid("fc24e34f-3dbe-455b-92e3-ece64ccddad5"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "962",
                            IsActive = true,
                            Iso2 = "jo",
                            NameAr = "الاردن",
                            NameEn = "Jordan"
                        },
                        new
                        {
                            Id = 3,
                            Code = "103",
                            ConcurrencyStamp = new Guid("17e2dd6b-8644-4122-9d2e-32e4785cfb5a"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "973",
                            IsActive = true,
                            Iso2 = "bh",
                            NameAr = "البحرين",
                            NameEn = "Bahrain"
                        },
                        new
                        {
                            Id = 4,
                            Code = "104",
                            ConcurrencyStamp = new Guid("b8e5980e-da78-4d12-9ddb-836768f2338f"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "963",
                            IsActive = true,
                            Iso2 = "sy",
                            NameAr = "سوريا",
                            NameEn = "Syria"
                        },
                        new
                        {
                            Id = 5,
                            Code = "105",
                            ConcurrencyStamp = new Guid("5175bd14-66b5-434b-b592-4ae71e7a9538"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "964",
                            IsActive = true,
                            Iso2 = "iq",
                            NameAr = "العراق",
                            NameEn = "Iraq"
                        },
                        new
                        {
                            Id = 6,
                            Code = "106",
                            ConcurrencyStamp = new Guid("8c033bb9-18ad-4f28-954c-0aa10ac766cb"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "968",
                            IsActive = true,
                            Iso2 = "om",
                            NameAr = "عمان",
                            NameEn = "Oman"
                        },
                        new
                        {
                            Id = 7,
                            Code = "107",
                            ConcurrencyStamp = new Guid("574f97c4-2091-4b67-9852-e7eae5fa20ff"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "970",
                            IsActive = true,
                            Iso2 = "ps",
                            NameAr = "فلسطين",
                            NameEn = "Palestine"
                        },
                        new
                        {
                            Id = 8,
                            Code = "108",
                            ConcurrencyStamp = new Guid("296660cd-e1f5-47c1-a6a6-ca6a066ad08e"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "974",
                            IsActive = true,
                            Iso2 = "qa",
                            NameAr = "قطر",
                            NameEn = "Qatar"
                        },
                        new
                        {
                            Id = 9,
                            Code = "109",
                            ConcurrencyStamp = new Guid("03fea7d5-ad1e-40e2-9a5e-42c2d1c4b919"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "965",
                            IsActive = true,
                            Iso2 = "kw",
                            NameAr = "الكويت",
                            NameEn = "Kuwait"
                        },
                        new
                        {
                            Id = 10,
                            Code = "110",
                            ConcurrencyStamp = new Guid("c37f3fcd-a9fe-4c40-946a-69a0eb0249aa"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "961",
                            IsActive = true,
                            Iso2 = "lb",
                            NameAr = "لبنان",
                            NameEn = "Lebanon"
                        },
                        new
                        {
                            Id = 11,
                            Code = "111",
                            ConcurrencyStamp = new Guid("6f19794c-c544-4dcd-b88b-2a6514c259f9"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "967",
                            IsActive = true,
                            Iso2 = "ye",
                            NameAr = "اليمن",
                            NameEn = "Yemen"
                        },
                        new
                        {
                            Id = 12,
                            Code = "113",
                            ConcurrencyStamp = new Guid("33363d95-0096-47d5-83c5-707c35e3eb36"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "966",
                            IsActive = true,
                            Iso2 = "sa",
                            NameAr = "العربية السعودية",
                            NameEn = "Saudi Arabia"
                        },
                        new
                        {
                            Id = 13,
                            Code = "201",
                            ConcurrencyStamp = new Guid("a71ae592-326d-45e4-876a-b4b227fc989a"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "216",
                            IsActive = true,
                            Iso2 = "tn",
                            NameAr = "تونس",
                            NameEn = "Tunisia"
                        },
                        new
                        {
                            Id = 14,
                            Code = "202",
                            ConcurrencyStamp = new Guid("14edad0f-e353-4890-8bc0-a78067ad4b33"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "213",
                            IsActive = true,
                            Iso2 = "dz",
                            NameAr = "الجزائر",
                            NameEn = "Algeria"
                        },
                        new
                        {
                            Id = 15,
                            Code = "203",
                            ConcurrencyStamp = new Guid("11225b46-4ebc-4a3b-9ee7-4a873a8c283e"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "253",
                            IsActive = true,
                            Iso2 = "dj",
                            NameAr = "جيبوتى",
                            NameEn = "Djibouti"
                        },
                        new
                        {
                            Id = 16,
                            Code = "204",
                            ConcurrencyStamp = new Guid("a08873bc-88e3-4fd6-ad97-819ec5b94cf1"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "249",
                            IsActive = true,
                            Iso2 = "sd",
                            NameAr = "السودان",
                            NameEn = "Sudan"
                        },
                        new
                        {
                            Id = 17,
                            Code = "205",
                            ConcurrencyStamp = new Guid("3d2f8590-c616-4fea-b3a0-c10d55ce8176"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "252",
                            IsActive = true,
                            Iso2 = "so",
                            NameAr = "الصومال",
                            NameEn = "Somalia"
                        },
                        new
                        {
                            Id = 18,
                            Code = "206",
                            ConcurrencyStamp = new Guid("fbb57565-1ee7-49ad-9dd3-117a282453f4"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "218",
                            IsActive = true,
                            Iso2 = "ly",
                            NameAr = "ليبيا",
                            NameEn = "Libya"
                        },
                        new
                        {
                            Id = 19,
                            Code = "207",
                            ConcurrencyStamp = new Guid("f1c85cd9-b688-46ac-84f2-401543611fcb"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "20",
                            IsActive = true,
                            Iso2 = "eg",
                            NameAr = "مصر",
                            NameEn = "Egypt"
                        },
                        new
                        {
                            Id = 20,
                            Code = "208",
                            ConcurrencyStamp = new Guid("ed79c53b-c3b6-4204-9e55-262567d3af20"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "212",
                            IsActive = true,
                            Iso2 = "ma",
                            NameAr = "المغرب",
                            NameEn = "Morocco"
                        },
                        new
                        {
                            Id = 21,
                            Code = "209",
                            ConcurrencyStamp = new Guid("4d952913-04ab-4e34-ab63-cf2649cfcf6d"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "222",
                            IsActive = true,
                            Iso2 = "mr",
                            NameAr = "موريتانيا",
                            NameEn = "Mauritania"
                        },
                        new
                        {
                            Id = 22,
                            Code = "301",
                            ConcurrencyStamp = new Guid("ba83c3e0-c900-483d-8729-4dc1db47d74d"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "93",
                            IsActive = true,
                            Iso2 = "af",
                            NameAr = "افغانستان",
                            NameEn = "Afghanistan"
                        },
                        new
                        {
                            Id = 23,
                            Code = "302",
                            ConcurrencyStamp = new Guid("cb5af98f-f59d-4bda-98f2-290f1db75f7a"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "62",
                            IsActive = true,
                            Iso2 = "id",
                            NameAr = "اندونيسيا",
                            NameEn = "Indonesia"
                        },
                        new
                        {
                            Id = 24,
                            Code = "303",
                            ConcurrencyStamp = new Guid("89704b3f-3abc-4d8e-a5a6-b14d2003ce06"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "98",
                            IsActive = true,
                            Iso2 = "ir",
                            NameAr = "ايران",
                            NameEn = "Iran"
                        },
                        new
                        {
                            Id = 25,
                            Code = "304",
                            ConcurrencyStamp = new Guid("15a2e07b-658e-4deb-98b3-6564976ece8e"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "92",
                            IsActive = true,
                            Iso2 = "pk",
                            NameAr = "باكستان",
                            NameEn = "Pakistan"
                        },
                        new
                        {
                            Id = 26,
                            Code = "305",
                            ConcurrencyStamp = new Guid("3f223c43-a7aa-4c18-a835-267c2ddbe5c7"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "880",
                            IsActive = true,
                            Iso2 = "bd",
                            NameAr = "بنجلاديش",
                            NameEn = "Bangladesh"
                        },
                        new
                        {
                            Id = 27,
                            Code = "306",
                            ConcurrencyStamp = new Guid("a46693ca-08f2-48f1-86ad-5be7c7725a76"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "673",
                            IsActive = true,
                            Iso2 = "bn",
                            NameAr = "بروني",
                            NameEn = "Brunei"
                        },
                        new
                        {
                            Id = 28,
                            Code = "307",
                            ConcurrencyStamp = new Guid("452a7cb5-51b7-40b3-96b3-52b3725a270c"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "95",
                            IsActive = true,
                            Iso2 = "mm",
                            NameAr = "جمهورية ميانمار",
                            NameEn = "Myanmar"
                        },
                        new
                        {
                            Id = 29,
                            Code = "308",
                            ConcurrencyStamp = new Guid("f5e0c8ab-0f1f-48a4-be00-c6358cbc30f0"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "66",
                            IsActive = true,
                            Iso2 = "th",
                            NameAr = "تايلند",
                            NameEn = "Thailand"
                        },
                        new
                        {
                            Id = 30,
                            Code = "309",
                            ConcurrencyStamp = new Guid("06567ebe-e0bc-4b80-82df-1c8255e31d20"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "90",
                            IsActive = true,
                            Iso2 = "tr",
                            NameAr = "تركيا",
                            NameEn = "Turkey"
                        },
                        new
                        {
                            Id = 31,
                            Code = "310",
                            ConcurrencyStamp = new Guid("9d8fb892-9fd6-47e7-9ccb-3ece87de5fcb"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "960",
                            IsActive = true,
                            Iso2 = "mv",
                            NameAr = "جزر مالديف",
                            NameEn = "Maldives"
                        },
                        new
                        {
                            Id = 32,
                            Code = "311",
                            ConcurrencyStamp = new Guid("9f8b49f5-8f1e-4b2e-81ab-61ecfa036e02"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "7",
                            IsActive = true,
                            Iso2 = "ru",
                            NameAr = "روسيا الاتحادية",
                            NameEn = "Russia"
                        },
                        new
                        {
                            Id = 33,
                            Code = "312",
                            ConcurrencyStamp = new Guid("f1d1e055-f55c-4d83-b58c-28150258496a"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "65",
                            IsActive = true,
                            Iso2 = "sg",
                            NameAr = "سنغافورة",
                            NameEn = "Singapore"
                        },
                        new
                        {
                            Id = 34,
                            Code = "313",
                            ConcurrencyStamp = new Guid("dab01f54-3f21-4492-b55a-3209b01fcbae"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "94",
                            IsActive = true,
                            Iso2 = "lk",
                            NameAr = "سري لنكا",
                            NameEn = "Sri Lanka"
                        },
                        new
                        {
                            Id = 35,
                            Code = "315",
                            ConcurrencyStamp = new Guid("2e3565e8-a22e-4c90-ae40-f5f42ccb3d8c"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "63",
                            IsActive = true,
                            Iso2 = "ph",
                            NameAr = "الفلبين",
                            NameEn = "Philippines"
                        },
                        new
                        {
                            Id = 36,
                            Code = "316",
                            ConcurrencyStamp = new Guid("df55e2e7-1f92-41ed-8f01-cdb449517c35"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "84",
                            IsActive = true,
                            Iso2 = "vn",
                            NameAr = "فيتنام",
                            NameEn = "Vietnam"
                        },
                        new
                        {
                            Id = 37,
                            Code = "317",
                            ConcurrencyStamp = new Guid("2e96452d-21e5-4308-a462-c092dabc9bab"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "855",
                            IsActive = true,
                            Iso2 = "kh",
                            NameAr = "كمبوديا",
                            NameEn = "Cambodia"
                        },
                        new
                        {
                            Id = 38,
                            Code = "318",
                            ConcurrencyStamp = new Guid("e7b37053-b6d3-4849-9c12-b4561778b2be"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "82",
                            IsActive = true,
                            Iso2 = "kr",
                            NameAr = "كوريا الجنوبية",
                            NameEn = "South Korea"
                        },
                        new
                        {
                            Id = 39,
                            Code = "319",
                            ConcurrencyStamp = new Guid("5f3514ac-ed92-48cb-a387-ef78e2246f26"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "60",
                            IsActive = true,
                            Iso2 = "my",
                            NameAr = "ماليزيا",
                            NameEn = "Malaysia"
                        },
                        new
                        {
                            Id = 40,
                            Code = "320",
                            ConcurrencyStamp = new Guid("571a740b-d7f7-444d-8843-f741bb08db96"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "977",
                            IsActive = true,
                            Iso2 = "np",
                            NameAr = "نيبال",
                            NameEn = "Nepal"
                        },
                        new
                        {
                            Id = 41,
                            Code = "321",
                            ConcurrencyStamp = new Guid("714f9a11-cb9b-4307-b648-8bd31844929c"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "91",
                            IsActive = true,
                            Iso2 = "in",
                            NameAr = "الهند",
                            NameEn = "India"
                        },
                        new
                        {
                            Id = 42,
                            Code = "322",
                            ConcurrencyStamp = new Guid("c8c4fc5c-b370-4b87-8e3a-8efa729f83d0"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "852",
                            IsActive = true,
                            Iso2 = "hk",
                            NameAr = "هونج كونج",
                            NameEn = "Hong Kong"
                        },
                        new
                        {
                            Id = 43,
                            Code = "323",
                            ConcurrencyStamp = new Guid("dc6359f2-c0ae-4e8b-8dd7-587665ffd022"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "81",
                            IsActive = true,
                            Iso2 = "jp",
                            NameAr = "اليابان",
                            NameEn = "Japan"
                        },
                        new
                        {
                            Id = 44,
                            Code = "324",
                            ConcurrencyStamp = new Guid("d9e506b7-584a-48f0-89cd-7f4c4abd6e08"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "975",
                            IsActive = true,
                            Iso2 = "bt",
                            NameAr = "بهوتان",
                            NameEn = "Bhutan"
                        },
                        new
                        {
                            Id = 45,
                            Code = "325",
                            ConcurrencyStamp = new Guid("7abd2800-f8e4-4c37-8cf9-b7fce255cb07"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "86",
                            IsActive = true,
                            Iso2 = "cn",
                            NameAr = "الصين الشعبية",
                            NameEn = "China"
                        },
                        new
                        {
                            Id = 46,
                            Code = "326",
                            ConcurrencyStamp = new Guid("b2eb0e99-d92b-4e96-a442-e84ec8e79f6b"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "357",
                            IsActive = true,
                            Iso2 = "cy",
                            NameAr = "قبرص",
                            NameEn = "Cyprus"
                        },
                        new
                        {
                            Id = 47,
                            Code = "328",
                            ConcurrencyStamp = new Guid("96e47d82-c8b9-45f3-a484-4779151e1b49"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "850",
                            IsActive = true,
                            Iso2 = "kp",
                            NameAr = "كوريا الشمالية",
                            NameEn = "North Korea"
                        },
                        new
                        {
                            Id = 48,
                            Code = "329",
                            ConcurrencyStamp = new Guid("39af33f6-3bae-42da-b402-10586326e364"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "856",
                            IsActive = true,
                            Iso2 = "la",
                            NameAr = "لاوس",
                            NameEn = "Laos"
                        },
                        new
                        {
                            Id = 49,
                            Code = "330",
                            ConcurrencyStamp = new Guid("75964ca0-83d3-46bf-9e76-5a6756451b9d"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "976",
                            IsActive = true,
                            Iso2 = "mn",
                            NameAr = "منغوليا",
                            NameEn = "Mongolia"
                        },
                        new
                        {
                            Id = 50,
                            Code = "331",
                            ConcurrencyStamp = new Guid("4ba44b4c-80cb-4b5a-b4aa-c3e6be4d6018"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "853",
                            IsActive = true,
                            Iso2 = "mo",
                            NameAr = "ماكاو",
                            NameEn = "Macao"
                        },
                        new
                        {
                            Id = 51,
                            Code = "332",
                            ConcurrencyStamp = new Guid("80b77e93-3d04-4346-ae17-15f895ed6f2f"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            NameAr = "تركستان",
                            NameEn = "Turkistan"
                        },
                        new
                        {
                            Id = 52,
                            Code = "335",
                            ConcurrencyStamp = new Guid("cf75e624-063e-48fd-afd1-0b99d07d28df"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            NameAr = "القبائل النازحة",
                            NameEn = "Tribes Emigrated"
                        },
                        new
                        {
                            Id = 53,
                            Code = "336",
                            ConcurrencyStamp = new Guid("d66b2f7a-fc0a-4650-ad39-851d5f06e039"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "7",
                            IsActive = true,
                            Iso2 = "kz",
                            NameAr = "كازاخستان",
                            NameEn = "Kazakhstan"
                        },
                        new
                        {
                            Id = 54,
                            Code = "337",
                            ConcurrencyStamp = new Guid("79cce18c-5e2f-433e-bd16-d12eebd2e0e6"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "998",
                            IsActive = true,
                            Iso2 = "uz",
                            NameAr = "ازبكستان",
                            NameEn = "Uzbekistan"
                        },
                        new
                        {
                            Id = 55,
                            Code = "338",
                            ConcurrencyStamp = new Guid("42ac8400-735f-4974-aecf-e0ed363b4f82"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "993",
                            IsActive = true,
                            Iso2 = "tm",
                            NameAr = "تركمانستان",
                            NameEn = "Turkmenistan"
                        },
                        new
                        {
                            Id = 56,
                            Code = "339",
                            ConcurrencyStamp = new Guid("7d978d4d-5e81-448c-a800-a5cf0913118c"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "992",
                            IsActive = true,
                            Iso2 = "tj",
                            NameAr = "طاجكستان",
                            NameEn = "Tajikistan"
                        },
                        new
                        {
                            Id = 57,
                            Code = "340",
                            ConcurrencyStamp = new Guid("a119eba0-29ce-4ff8-a772-55cc5e65156b"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "996",
                            IsActive = false,
                            Iso2 = "kg",
                            NameAr = "قرغيزستان",
                            NameEn = "kyrgyzstan"
                        },
                        new
                        {
                            Id = 58,
                            Code = "343",
                            ConcurrencyStamp = new Guid("1c1a3333-48e8-429a-8f60-eace3b17fa84"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "994",
                            IsActive = true,
                            Iso2 = "az",
                            NameAr = "اذربيجان",
                            NameEn = "Azerbaijan"
                        },
                        new
                        {
                            Id = 59,
                            Code = "344",
                            ConcurrencyStamp = new Guid("0ff31197-21da-4d38-9e20-f9fdb711fe1e"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            NameAr = "الشاشان",
                            NameEn = "Chechnya"
                        },
                        new
                        {
                            Id = 60,
                            Code = "345",
                            ConcurrencyStamp = new Guid("548da98c-6af5-4fba-b504-ffe1abf87517"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "872",
                            IsActive = false,
                            Iso2 = "da",
                            NameAr = "داغستان",
                            NameEn = "Dagestan"
                        },
                        new
                        {
                            Id = 61,
                            Code = "346",
                            ConcurrencyStamp = new Guid("750a9096-ba43-4a79-bfc3-cdd88e37d819"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            NameAr = "انقوش",
                            NameEn = "Anquosh"
                        },
                        new
                        {
                            Id = 62,
                            Code = "347",
                            ConcurrencyStamp = new Guid("97c85c82-8495-4a74-a78d-bb08f71a9f79"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "7",
                            IsActive = false,
                            Iso2 = "ta",
                            NameAr = "تتارستان",
                            NameEn = "Tatarstan"
                        },
                        new
                        {
                            Id = 63,
                            Code = "349",
                            ConcurrencyStamp = new Guid("88e4a1d3-13be-46bf-a40c-2adfa8eef9f4"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "670",
                            IsActive = false,
                            Iso2 = "tp",
                            NameAr = "تيمور الشرقية",
                            NameEn = "East Timor"
                        },
                        new
                        {
                            Id = 64,
                            Code = "401",
                            ConcurrencyStamp = new Guid("c2d4d96c-7afc-4ba3-aa4d-813a359970c7"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "251",
                            IsActive = true,
                            Iso2 = "et",
                            NameAr = "اثيوبيا",
                            NameEn = "Ethiopia"
                        },
                        new
                        {
                            Id = 65,
                            Code = "402",
                            ConcurrencyStamp = new Guid("f19d96ce-9c9d-4f25-ae85-cc32a27901de"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "256",
                            IsActive = true,
                            Iso2 = "ug",
                            NameAr = "اوغندة",
                            NameEn = "Uganda"
                        },
                        new
                        {
                            Id = 66,
                            Code = "403",
                            ConcurrencyStamp = new Guid("63b3087e-06a8-4625-a84a-52f10a40e95f"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "267",
                            IsActive = true,
                            Iso2 = "bw",
                            NameAr = "بوتسوانا",
                            NameEn = "Botswana"
                        },
                        new
                        {
                            Id = 67,
                            Code = "404",
                            ConcurrencyStamp = new Guid("adca5a15-eac6-4f6f-afbf-0ed17982b8b5"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "257",
                            IsActive = true,
                            Iso2 = "bi",
                            NameAr = "بورندي",
                            NameEn = "Burundi"
                        },
                        new
                        {
                            Id = 68,
                            Code = "405",
                            ConcurrencyStamp = new Guid("7381cb1c-736e-4576-b3dc-d4ddb08085fe"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "235",
                            IsActive = true,
                            Iso2 = "td",
                            NameAr = "تشاد",
                            NameEn = "Chad"
                        },
                        new
                        {
                            Id = 69,
                            Code = "406",
                            ConcurrencyStamp = new Guid("ef65c025-bf0a-40c2-a4a9-fbb239808813"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "255",
                            IsActive = true,
                            Iso2 = "tz",
                            NameAr = "تنزانيا",
                            NameEn = "Tanzania"
                        },
                        new
                        {
                            Id = 70,
                            Code = "407",
                            ConcurrencyStamp = new Guid("4d625efb-85f4-4938-9cb9-77349b411ce8"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "228",
                            IsActive = true,
                            Iso2 = "tg",
                            NameAr = "توجو",
                            NameEn = "Togo"
                        },
                        new
                        {
                            Id = 71,
                            Code = "408",
                            ConcurrencyStamp = new Guid("b0c677ef-fc5d-499d-ae78-8d288d4a657f"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "241",
                            IsActive = true,
                            Iso2 = "ga",
                            NameAr = "جابون",
                            NameEn = "Answer"
                        },
                        new
                        {
                            Id = 72,
                            Code = "409",
                            ConcurrencyStamp = new Guid("53f0f348-faf4-4e30-94bd-c65daa45f5c4"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "220",
                            IsActive = true,
                            Iso2 = "gm",
                            NameAr = "غامبيا",
                            NameEn = "Gambia"
                        },
                        new
                        {
                            Id = 73,
                            Code = "410",
                            ConcurrencyStamp = new Guid("7cff2ffd-04eb-4f6b-8db4-33313c633117"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "269",
                            IsActive = true,
                            Iso2 = "km",
                            NameAr = "جزر القمر",
                            NameEn = "Comoros"
                        },
                        new
                        {
                            Id = 74,
                            Code = "411",
                            ConcurrencyStamp = new Guid("c28bcb6e-70a4-422b-bbec-0e22c2e76521"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "27",
                            IsActive = true,
                            Iso2 = "za",
                            NameAr = "جنوب افريقيا",
                            NameEn = "South Africa"
                        },
                        new
                        {
                            Id = 75,
                            Code = "412",
                            ConcurrencyStamp = new Guid("11cbb9d1-f81f-4ed8-b6dc-03c9c97af694"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "264",
                            IsActive = true,
                            Iso2 = "na",
                            NameAr = "ناميبيا",
                            NameEn = "Namibia"
                        },
                        new
                        {
                            Id = 76,
                            Code = "413",
                            ConcurrencyStamp = new Guid("08a2c591-eb21-4c0b-9cd0-87d5ca8ce16e"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "229",
                            IsActive = true,
                            Iso2 = "bj",
                            NameAr = "بنين",
                            NameEn = "Benin"
                        },
                        new
                        {
                            Id = 77,
                            Code = "414",
                            ConcurrencyStamp = new Guid("6228fd6c-4895-4787-8b9d-7b615457fc38"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "250",
                            IsActive = true,
                            Iso2 = "rw",
                            NameAr = "رواندا",
                            NameEn = "Rwanda"
                        },
                        new
                        {
                            Id = 78,
                            Code = "415",
                            ConcurrencyStamp = new Guid("0ba40872-d5d1-490a-8c65-ca9dc58f9f95"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "263",
                            IsActive = true,
                            Iso2 = "zw",
                            NameAr = "زمبابوي",
                            NameEn = "Zimbabwe"
                        },
                        new
                        {
                            Id = 79,
                            Code = "416",
                            ConcurrencyStamp = new Guid("195e6b0b-e915-4807-8a42-68e3b39b06f1"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "243",
                            IsActive = false,
                            Iso2 = "zr",
                            NameAr = "زائير",
                            NameEn = "Zaire"
                        },
                        new
                        {
                            Id = 80,
                            Code = "417",
                            ConcurrencyStamp = new Guid("e393d829-8c49-4a60-9eaf-b286d74ff4ed"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "260",
                            IsActive = true,
                            Iso2 = "zm",
                            NameAr = "زامبيا",
                            NameEn = "Zambia"
                        },
                        new
                        {
                            Id = 81,
                            Code = "418",
                            ConcurrencyStamp = new Guid("cf4dd2e9-5176-49bc-be0f-ff3cb83d5b53"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "225",
                            IsActive = false,
                            Iso2 = "ci",
                            NameAr = "ساحل العاج",
                            NameEn = "Ivory Coast"
                        },
                        new
                        {
                            Id = 82,
                            Code = "419",
                            ConcurrencyStamp = new Guid("a855326c-7208-4976-89e9-684978bbfd41"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Iso2 = "sn  221",
                            NameAr = "السنغال",
                            NameEn = "Senegal"
                        },
                        new
                        {
                            Id = 83,
                            Code = "420",
                            ConcurrencyStamp = new Guid("220c658a-08d8-4d01-8106-0d4c247ce2f3"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "232",
                            IsActive = true,
                            Iso2 = "sl",
                            NameAr = "سيراليون",
                            NameEn = "Sierra Leone"
                        },
                        new
                        {
                            Id = 84,
                            Code = "421",
                            ConcurrencyStamp = new Guid("10891d6e-7328-4db0-949b-f8614af6e99c"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "233",
                            IsActive = true,
                            Iso2 = "gh",
                            NameAr = "غانا",
                            NameEn = "Ghana"
                        },
                        new
                        {
                            Id = 85,
                            Code = "422",
                            ConcurrencyStamp = new Guid("9bae2d1a-beee-42bb-bfb3-a015539dd8f5"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "224",
                            IsActive = true,
                            Iso2 = "gn",
                            NameAr = "غينيا",
                            NameEn = "Guinea"
                        },
                        new
                        {
                            Id = 86,
                            Code = "423",
                            ConcurrencyStamp = new Guid("658fcc76-97a3-44fe-8c21-01d397afac90"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "245",
                            IsActive = true,
                            Iso2 = "gw",
                            NameAr = "غينيابيساو",
                            NameEn = "Guinea Bissau"
                        },
                        new
                        {
                            Id = 87,
                            Code = "424",
                            ConcurrencyStamp = new Guid("38a2c0ec-34b6-4c01-b3f4-7d93eb9241d1"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "226",
                            IsActive = true,
                            Iso2 = "bf",
                            NameAr = "بوركينافاسو",
                            NameEn = "Burkina Faso"
                        },
                        new
                        {
                            Id = 88,
                            Code = "425",
                            ConcurrencyStamp = new Guid("f9b07e12-95b7-434f-a122-fba329751e8f"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "237",
                            IsActive = true,
                            Iso2 = "cm",
                            NameAr = "الكاميرون",
                            NameEn = "Cameroon"
                        },
                        new
                        {
                            Id = 89,
                            Code = "426",
                            ConcurrencyStamp = new Guid("30718594-bf8c-42e4-b186-708c5fb61cb9"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "243",
                            IsActive = true,
                            Iso2 = "cd",
                            NameAr = "جمهورية الكونغو الديمقراطية",
                            NameEn = "Congo(DRC)"
                        },
                        new
                        {
                            Id = 90,
                            Code = "427",
                            ConcurrencyStamp = new Guid("2a11d948-4107-45bd-9230-ee71bc700508"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "254",
                            IsActive = true,
                            Iso2 = "ke",
                            NameAr = "كينيا",
                            NameEn = "Kenya"
                        },
                        new
                        {
                            Id = 91,
                            Code = "428",
                            ConcurrencyStamp = new Guid("57043a96-99a6-415e-90d4-d100aa0139b7"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "266",
                            IsActive = true,
                            Iso2 = "ls",
                            NameAr = "ليسوتو",
                            NameEn = "Lesotho"
                        },
                        new
                        {
                            Id = 92,
                            Code = "429",
                            ConcurrencyStamp = new Guid("22e7e517-b368-4ffc-8afe-b3992ae51cd4"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "231",
                            IsActive = true,
                            Iso2 = "lr",
                            NameAr = "ليبيريا",
                            NameEn = "Liberia"
                        },
                        new
                        {
                            Id = 93,
                            Code = "430",
                            ConcurrencyStamp = new Guid("fb12d644-5af6-4d5d-aa00-a4ca6c1c8144"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "223",
                            IsActive = true,
                            Iso2 = "ml",
                            NameAr = "مالي",
                            NameEn = "Mali"
                        },
                        new
                        {
                            Id = 94,
                            Code = "432",
                            ConcurrencyStamp = new Guid("0ce1357a-8870-40c2-b407-61bc9a116ea1"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "265",
                            IsActive = true,
                            Iso2 = "mw",
                            NameAr = "ملاوي",
                            NameEn = "Malawi"
                        },
                        new
                        {
                            Id = 95,
                            Code = "433",
                            ConcurrencyStamp = new Guid("add06046-dd4e-43b9-a345-c081bd70dede"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "230",
                            IsActive = true,
                            Iso2 = "mu",
                            NameAr = "موريشيوس",
                            NameEn = "Mauritius"
                        },
                        new
                        {
                            Id = 96,
                            Code = "434",
                            ConcurrencyStamp = new Guid("f29d7ca9-6af4-4df8-baad-1927bfb85435"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "258",
                            IsActive = true,
                            Iso2 = "mz",
                            NameAr = "موزمبيق",
                            NameEn = "Mozambique"
                        },
                        new
                        {
                            Id = 97,
                            Code = "435",
                            ConcurrencyStamp = new Guid("abe073dd-1b17-49f1-a489-b880cd764c99"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "234",
                            IsActive = true,
                            Iso2 = "ng",
                            NameAr = "نيجيريا",
                            NameEn = "Nigeria"
                        },
                        new
                        {
                            Id = 98,
                            Code = "436",
                            ConcurrencyStamp = new Guid("b52295cb-213b-4d58-8aea-2fcbf162efe8"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "227",
                            IsActive = true,
                            Iso2 = "ne",
                            NameAr = "النيجر",
                            NameEn = "Niger"
                        },
                        new
                        {
                            Id = 99,
                            Code = "437",
                            ConcurrencyStamp = new Guid("986fdc04-d70c-4cb8-aa3b-7c0f0f9a3661"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "236",
                            IsActive = true,
                            Iso2 = "cf",
                            NameAr = "افريقيا الوسطى",
                            NameEn = "Central Africa"
                        },
                        new
                        {
                            Id = 100,
                            Code = "438",
                            ConcurrencyStamp = new Guid("88440a9f-104d-42cb-a19d-68d5bb8655c6"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "244",
                            IsActive = true,
                            Iso2 = "ao",
                            NameAr = "انجولا",
                            NameEn = "Angola"
                        },
                        new
                        {
                            Id = 101,
                            Code = "439",
                            ConcurrencyStamp = new Guid("4b42b316-7410-498c-9ffe-1ac0b8bd18c9"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "599",
                            IsActive = true,
                            Iso2 = "bq",
                            NameAr = "الجزر الكاريبية الهولندية",
                            NameEn = "Caribbean Netherlands"
                        },
                        new
                        {
                            Id = 102,
                            Code = "440",
                            ConcurrencyStamp = new Guid("5294ac24-72d7-4fda-9fef-35765e080996"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "240",
                            IsActive = true,
                            Iso2 = "gq",
                            NameAr = "غينيا الاستوائية",
                            NameEn = "Equatorial Guinea"
                        },
                        new
                        {
                            Id = 103,
                            Code = "441",
                            ConcurrencyStamp = new Guid("452f5ace-8744-4fc3-b89d-af9e517574e6"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            NameAr = "ملاجاسي",
                            NameEn = "Mlajasi"
                        },
                        new
                        {
                            Id = 104,
                            Code = "442",
                            ConcurrencyStamp = new Guid("771456c3-478e-4192-9aec-dad9593b166a"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "239",
                            IsActive = true,
                            Iso2 = "st",
                            NameAr = "ساوتومي/برنسبى",
                            NameEn = "S? o Tomé and Pr? ncipe"
                        },
                        new
                        {
                            Id = 105,
                            Code = "443",
                            ConcurrencyStamp = new Guid("2d959691-9f32-4fd6-950c-fb6958023d49"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "248",
                            IsActive = true,
                            Iso2 = "sc",
                            NameAr = "جزر سيشل",
                            NameEn = "Seychelles Islands"
                        },
                        new
                        {
                            Id = 106,
                            Code = "444",
                            ConcurrencyStamp = new Guid("529dd4c1-1652-4720-ae02-4df79b28d968"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "268",
                            IsActive = false,
                            Iso2 = "sz",
                            NameAr = "سوزيلاند",
                            NameEn = "Swaziland"
                        },
                        new
                        {
                            Id = 107,
                            Code = "449",
                            ConcurrencyStamp = new Guid("89fe51fc-4bf6-474d-aed8-e678b447f5d4"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "291",
                            IsActive = true,
                            Iso2 = "er",
                            NameAr = "ارتيريا",
                            NameEn = "Eritrea"
                        },
                        new
                        {
                            Id = 108,
                            Code = "453",
                            ConcurrencyStamp = new Guid("620e112c-3f35-4ca3-bce0-fb0888f89e06"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "211",
                            IsActive = false,
                            Iso2 = "ss",
                            NameAr = "جمهورية جنوب السودان",
                            NameEn = "Republic of South Sudan"
                        },
                        new
                        {
                            Id = 109,
                            Code = "454",
                            ConcurrencyStamp = new Guid("e996a20e-25b0-43c7-a095-d241b537a6db"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "238",
                            IsActive = true,
                            Iso2 = "cv",
                            NameAr = "كاب فيرد(الراس الاخضر)",
                            NameEn = "Cape Verde"
                        },
                        new
                        {
                            Id = 110,
                            Code = "501",
                            ConcurrencyStamp = new Guid("afc73ebd-6b39-4bf2-b992-3b69f8d6fae4"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "34",
                            IsActive = true,
                            Iso2 = "es",
                            NameAr = "اسبانيا",
                            NameEn = "Spain"
                        },
                        new
                        {
                            Id = 111,
                            Code = "502",
                            ConcurrencyStamp = new Guid("16dea177-f7bf-42f9-bd9f-eb2e21c1f061"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "355",
                            IsActive = true,
                            Iso2 = "al",
                            NameAr = "البانيا",
                            NameEn = "Albania"
                        },
                        new
                        {
                            Id = 112,
                            Code = "503",
                            ConcurrencyStamp = new Guid("cdde0014-8c9a-44f0-a254-22c50596ccd2"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "49",
                            IsActive = true,
                            Iso2 = "de",
                            NameAr = "المانيا",
                            NameEn = "Germany"
                        },
                        new
                        {
                            Id = 113,
                            Code = "504",
                            ConcurrencyStamp = new Guid("0e44b0d1-0b71-47b7-ba62-fff6fba13dcd"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "353",
                            IsActive = true,
                            Iso2 = "ie",
                            NameAr = "ايرلندا",
                            NameEn = "Ireland"
                        },
                        new
                        {
                            Id = 114,
                            Code = "505",
                            ConcurrencyStamp = new Guid("b120ce81-2caa-4fcf-8594-9e1f021d2fe5"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "39",
                            IsActive = true,
                            Iso2 = "it",
                            NameAr = "ايطاليا",
                            NameEn = "Italy"
                        },
                        new
                        {
                            Id = 115,
                            Code = "506",
                            ConcurrencyStamp = new Guid("56f76216-9533-4642-a4ed-9830fa2e4db5"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "44",
                            IsActive = true,
                            Iso2 = "gb",
                            NameAr = "المملكة المتحدة",
                            NameEn = "United Kingdom"
                        },
                        new
                        {
                            Id = 116,
                            Code = "507",
                            ConcurrencyStamp = new Guid("538ee1a7-c013-4805-bd6a-7211f7139412"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "351",
                            IsActive = true,
                            Iso2 = "pt",
                            NameAr = "البرتغال",
                            NameEn = "Portugal"
                        },
                        new
                        {
                            Id = 117,
                            Code = "508",
                            ConcurrencyStamp = new Guid("b7793e17-3f75-4000-bd56-36a1716e6065"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "359",
                            IsActive = true,
                            Iso2 = "bg",
                            NameAr = "بلغاريا",
                            NameEn = "Bulgaria"
                        },
                        new
                        {
                            Id = 118,
                            Code = "509",
                            ConcurrencyStamp = new Guid("90e91fe7-e8bc-47d1-9c55-3f99568c5e7a"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "32",
                            IsActive = true,
                            Iso2 = "be",
                            NameAr = "بلجيكا",
                            NameEn = "Belgium"
                        },
                        new
                        {
                            Id = 119,
                            Code = "510",
                            ConcurrencyStamp = new Guid("c5a3f09e-49bd-46a3-bf67-892b13e6ee5c"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "48",
                            IsActive = true,
                            Iso2 = "pl",
                            NameAr = "بولندا",
                            NameEn = "Poland"
                        },
                        new
                        {
                            Id = 120,
                            Code = "512",
                            ConcurrencyStamp = new Guid("6a7d5f91-bfa4-4625-b23d-cf8661701923"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "45",
                            IsActive = true,
                            Iso2 = "dk",
                            NameAr = "الدانمارك",
                            NameEn = "Denmark"
                        },
                        new
                        {
                            Id = 121,
                            Code = "513",
                            ConcurrencyStamp = new Guid("faf3af69-0328-4c5b-9ed3-aab0f2c13ce4"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "40",
                            IsActive = true,
                            Iso2 = "ro",
                            NameAr = "رومانيا",
                            NameEn = "Romania"
                        },
                        new
                        {
                            Id = 122,
                            Code = "514",
                            ConcurrencyStamp = new Guid("c7c44051-3ea9-447e-b623-8ecd32546bb3"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "46",
                            IsActive = true,
                            Iso2 = "se",
                            NameAr = "السويد",
                            NameEn = "Sweden"
                        },
                        new
                        {
                            Id = 123,
                            Code = "515",
                            ConcurrencyStamp = new Guid("d9765779-2ff8-4c61-81af-c16d009dd222"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "41",
                            IsActive = true,
                            Iso2 = "ch",
                            NameAr = "سويسرا",
                            NameEn = "Switzerland"
                        },
                        new
                        {
                            Id = 124,
                            Code = "516",
                            ConcurrencyStamp = new Guid("48e6fdd9-e639-49bd-a433-74550a93e265"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "33",
                            IsActive = true,
                            Iso2 = "fr",
                            NameAr = "فرنسا",
                            NameEn = "France"
                        },
                        new
                        {
                            Id = 125,
                            Code = "517",
                            ConcurrencyStamp = new Guid("a95a0389-3eff-46e9-b4b6-c6cb66604e7b"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "358",
                            IsActive = true,
                            Iso2 = "fi",
                            NameAr = "فنلندا",
                            NameEn = "Finland"
                        },
                        new
                        {
                            Id = 126,
                            Code = "518",
                            ConcurrencyStamp = new Guid("e55cfc3a-825b-4653-ba81-0e034aa720b4"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "381",
                            IsActive = true,
                            Iso2 = "rs",
                            NameAr = "صربيا",
                            NameEn = "Serbia"
                        },
                        new
                        {
                            Id = 127,
                            Code = "519",
                            ConcurrencyStamp = new Guid("699251ad-0e44-4777-aff6-fb08c4f26bde"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "31",
                            IsActive = true,
                            Iso2 = "nl",
                            NameAr = "هولندا",
                            NameEn = "Netherlands"
                        },
                        new
                        {
                            Id = 128,
                            Code = "521",
                            ConcurrencyStamp = new Guid("74c90ee5-0b6a-4721-b8a2-3c2ad598c956"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "30",
                            IsActive = true,
                            Iso2 = "gr",
                            NameAr = "اليونان",
                            NameEn = "Greece"
                        },
                        new
                        {
                            Id = 129,
                            Code = "522",
                            ConcurrencyStamp = new Guid("ce4d1c4b-e8d7-4858-bbbe-122d76e95e10"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "376",
                            IsActive = true,
                            Iso2 = "ad",
                            NameAr = "اندورا",
                            NameEn = "Andorra"
                        },
                        new
                        {
                            Id = 130,
                            Code = "523",
                            ConcurrencyStamp = new Guid("e3760d9a-be8a-4b69-a246-7e80832efdbb"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "43",
                            IsActive = true,
                            Iso2 = "at",
                            NameAr = "النمسا",
                            NameEn = "Austria"
                        },
                        new
                        {
                            Id = 131,
                            Code = "524",
                            ConcurrencyStamp = new Guid("50938d41-4306-4918-810e-d419a1687394"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "382",
                            IsActive = true,
                            Iso2 = "me",
                            NameAr = "الجبل الأ سود",
                            NameEn = "Montenegro"
                        },
                        new
                        {
                            Id = 132,
                            Code = "525",
                            ConcurrencyStamp = new Guid("518fcc94-60a2-401e-a7b2-a024fa1b46af"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "36",
                            IsActive = true,
                            Iso2 = "hu",
                            NameAr = "هنغاريا",
                            NameEn = "Hungary"
                        },
                        new
                        {
                            Id = 133,
                            Code = "526",
                            ConcurrencyStamp = new Guid("301b1725-9de8-4232-b30b-62ddf91c2bc0"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "354",
                            IsActive = true,
                            Iso2 = "is",
                            NameAr = "ايسلندا",
                            NameEn = "Iceland"
                        },
                        new
                        {
                            Id = 134,
                            Code = "527",
                            ConcurrencyStamp = new Guid("35a1d3eb-4896-48e8-acf2-d51b1f4daf4d"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "423",
                            IsActive = true,
                            Iso2 = "li",
                            NameAr = "ليختنشتين",
                            NameEn = "Liechtenstein"
                        },
                        new
                        {
                            Id = 135,
                            Code = "528",
                            ConcurrencyStamp = new Guid("968a5550-42ce-43a0-b184-b2600b1d9d24"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "352",
                            IsActive = true,
                            Iso2 = "lu",
                            NameAr = "لوكسمبورغ",
                            NameEn = "Luxembourg"
                        },
                        new
                        {
                            Id = 136,
                            Code = "529",
                            ConcurrencyStamp = new Guid("1f065705-d9b6-4d92-87ec-ff12d6dc36d5"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "356",
                            IsActive = true,
                            Iso2 = "mt",
                            NameAr = "مالطا",
                            NameEn = "Malta"
                        },
                        new
                        {
                            Id = 137,
                            Code = "530",
                            ConcurrencyStamp = new Guid("78d9d4d7-0466-4003-af1a-080f7519bb13"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "377",
                            IsActive = true,
                            Iso2 = "mc",
                            NameAr = "موناكو",
                            NameEn = "Monaco"
                        },
                        new
                        {
                            Id = 138,
                            Code = "531",
                            ConcurrencyStamp = new Guid("b0bad623-02dc-4459-9129-4b48f650cf18"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "47",
                            IsActive = true,
                            Iso2 = "no",
                            NameAr = "النرويج",
                            NameEn = "Norway"
                        },
                        new
                        {
                            Id = 139,
                            Code = "532",
                            ConcurrencyStamp = new Guid("0ca00e3b-c02b-4f32-8109-a70f726e02de"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "378",
                            IsActive = true,
                            Iso2 = "sm",
                            NameAr = "سان مارينو",
                            NameEn = "San Marino"
                        },
                        new
                        {
                            Id = 140,
                            Code = "533",
                            ConcurrencyStamp = new Guid("a650180e-7d22-4e85-9e27-04886bd963c1"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "39",
                            IsActive = true,
                            Iso2 = "va",
                            NameAr = "مدينة الفاتيكان",
                            NameEn = "Vatican City"
                        },
                        new
                        {
                            Id = 141,
                            Code = "534",
                            ConcurrencyStamp = new Guid("6f6dba65-8418-406f-aa8a-6c94573237c5"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "350",
                            IsActive = true,
                            Iso2 = "gi",
                            NameAr = "جبل طارق",
                            NameEn = "Gibraltar"
                        },
                        new
                        {
                            Id = 142,
                            Code = "536",
                            ConcurrencyStamp = new Guid("24b4141e-c9bc-4199-98e3-3be3e7893e56"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "380",
                            IsActive = true,
                            Iso2 = "ua",
                            NameAr = "اوكرانيا",
                            NameEn = "Ukraine"
                        },
                        new
                        {
                            Id = 143,
                            Code = "537",
                            ConcurrencyStamp = new Guid("cbcbefb4-6bb4-46b8-a3ea-fcf6682a20c4"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            NameAr = "روسيا البيضاء",
                            NameEn = "Byelorussia"
                        },
                        new
                        {
                            Id = 144,
                            Code = "539",
                            ConcurrencyStamp = new Guid("98a75290-b6a6-418a-af00-884c007a7e92"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "374",
                            IsActive = true,
                            Iso2 = "am",
                            NameAr = "ارمينيا",
                            NameEn = "Armenia"
                        },
                        new
                        {
                            Id = 145,
                            Code = "540",
                            ConcurrencyStamp = new Guid("686a5aae-6d5a-4ae5-a61e-8755661f6ad2"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "373",
                            IsActive = true,
                            Iso2 = "md",
                            NameAr = "مولدافيا",
                            NameEn = "Moldova"
                        },
                        new
                        {
                            Id = 146,
                            Code = "541",
                            ConcurrencyStamp = new Guid("282a4f1d-08a9-4966-97c9-8644ce45c9b6"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "995",
                            IsActive = true,
                            Iso2 = "ge",
                            NameAr = "جورجيا",
                            NameEn = "Georgia"
                        },
                        new
                        {
                            Id = 147,
                            Code = "542",
                            ConcurrencyStamp = new Guid("91fce2a5-54bf-4047-8895-b3509f329180"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "370",
                            IsActive = true,
                            Iso2 = "lt",
                            NameAr = "ليتوانيا",
                            NameEn = "Lithuania"
                        },
                        new
                        {
                            Id = 148,
                            Code = "543",
                            ConcurrencyStamp = new Guid("3dcbe561-6c05-4eb5-8b59-d008b8041fec"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "372",
                            IsActive = true,
                            Iso2 = "ee",
                            NameAr = "استونيا",
                            NameEn = "Estonia"
                        },
                        new
                        {
                            Id = 149,
                            Code = "544",
                            ConcurrencyStamp = new Guid("e0a9c08c-ae24-40bf-b272-f3a78e6ba333"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "371",
                            IsActive = true,
                            Iso2 = "lv",
                            NameAr = "لاتفيا",
                            NameEn = "Latvia"
                        },
                        new
                        {
                            Id = 150,
                            Code = "545",
                            ConcurrencyStamp = new Guid("e2ae2ca3-dec4-4769-9f3a-8e5dc5c5bc91"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "387",
                            IsActive = true,
                            Iso2 = "ba",
                            NameAr = "البوسنة والهرسك",
                            NameEn = "Bosnia / Herzegovina"
                        },
                        new
                        {
                            Id = 151,
                            Code = "546",
                            ConcurrencyStamp = new Guid("b8298cc8-453d-46a5-b6ff-4c6d02ef2cb1"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "385",
                            IsActive = true,
                            Iso2 = "hr",
                            NameAr = "كرواتيا",
                            NameEn = "Croatia"
                        },
                        new
                        {
                            Id = 152,
                            Code = "547",
                            ConcurrencyStamp = new Guid("ef9e672b-d1d6-46b1-8f70-10d0430cfe8e"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "386",
                            IsActive = true,
                            Iso2 = "si",
                            NameAr = "سلوفينيا",
                            NameEn = "Slovenia"
                        },
                        new
                        {
                            Id = 153,
                            Code = "549",
                            ConcurrencyStamp = new Guid("2b8cfcda-f45e-42c4-a67d-e400db5674a1"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "389",
                            IsActive = true,
                            Iso2 = "mk",
                            NameAr = "مقدونيا",
                            NameEn = "Macedonia"
                        },
                        new
                        {
                            Id = 154,
                            Code = "552",
                            ConcurrencyStamp = new Guid("8be83233-07e0-45e3-a9d3-1056517d0e16"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "420",
                            IsActive = true,
                            Iso2 = "cz",
                            NameAr = "تشيك",
                            NameEn = "Czech Republic"
                        },
                        new
                        {
                            Id = 155,
                            Code = "553",
                            ConcurrencyStamp = new Guid("c6cc7c01-c5ee-42dc-a60f-fb46f6f67ff9"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "421",
                            IsActive = true,
                            Iso2 = "sk",
                            NameAr = "سلوفاكيا",
                            NameEn = "Slovakia"
                        },
                        new
                        {
                            Id = 156,
                            Code = "554",
                            ConcurrencyStamp = new Guid("622e4940-f551-4fa7-853f-b465b3ecbb78"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "298",
                            IsActive = true,
                            Iso2 = "fo",
                            NameAr = "جزر فيرو",
                            NameEn = "Faroe Islands"
                        },
                        new
                        {
                            Id = 157,
                            Code = "555",
                            ConcurrencyStamp = new Guid("ffcc7784-573a-4d6b-8db6-8829eb0bbb80"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "33",
                            IsActive = false,
                            Iso2 = "fx",
                            NameAr = "ميتروبوليتان فرنسية",
                            NameEn = "France Metropolitan"
                        },
                        new
                        {
                            Id = 158,
                            Code = "601",
                            ConcurrencyStamp = new Guid("e9ad79f6-9286-4684-9fcc-578d9834f422"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "1",
                            IsActive = true,
                            Iso2 = "us",
                            NameAr = "الولايات المتحدة",
                            NameEn = "United States"
                        },
                        new
                        {
                            Id = 159,
                            Code = "602",
                            ConcurrencyStamp = new Guid("d45738a9-b959-4de7-816e-668547456e6e"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "54",
                            IsActive = true,
                            Iso2 = "ar",
                            NameAr = "الارجنتين",
                            NameEn = "Argentina"
                        },
                        new
                        {
                            Id = 160,
                            Code = "603",
                            ConcurrencyStamp = new Guid("8745427e-1162-4c99-a2ac-99a6e313531d"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "1",
                            IsActive = true,
                            Iso2 = "bb",
                            NameAr = "بربادوس",
                            NameEn = "Barbados"
                        },
                        new
                        {
                            Id = 161,
                            Code = "604",
                            ConcurrencyStamp = new Guid("e9c793af-be73-41c2-8eb7-8ec865388390"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "55",
                            IsActive = true,
                            Iso2 = "br",
                            NameAr = "البرازيل",
                            NameEn = "Brazil"
                        },
                        new
                        {
                            Id = 162,
                            Code = "605",
                            ConcurrencyStamp = new Guid("757eede1-eefd-41e2-a38d-dee342b5e284"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "507",
                            IsActive = true,
                            Iso2 = "pa",
                            NameAr = "بنما",
                            NameEn = "Panama"
                        },
                        new
                        {
                            Id = 163,
                            Code = "606",
                            ConcurrencyStamp = new Guid("bdde4257-004e-4674-b671-c761cfa89fdc"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "1",
                            IsActive = true,
                            Iso2 = "tt",
                            NameAr = "ترينداد وتوباجو",
                            NameEn = "Trinidad and Tobago"
                        },
                        new
                        {
                            Id = 164,
                            Code = "607",
                            ConcurrencyStamp = new Guid("cd57acca-d6b0-4248-a454-5175e515805f"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "1",
                            IsActive = true,
                            Iso2 = "jm",
                            NameAr = "جامايكا",
                            NameEn = "Jamaica"
                        },
                        new
                        {
                            Id = 165,
                            Code = "608",
                            ConcurrencyStamp = new Guid("44941921-1b1a-4071-be34-0439efadf542"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            NameAr = "جوانا",
                            NameEn = "Joanna"
                        },
                        new
                        {
                            Id = 166,
                            Code = "609",
                            ConcurrencyStamp = new Guid("d2fcf2ff-f836-49b3-ae18-ca9fe1ea6fbd"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "58",
                            IsActive = true,
                            Iso2 = "ve",
                            NameAr = "فنزويلا",
                            NameEn = "Venezuela"
                        },
                        new
                        {
                            Id = 167,
                            Code = "610",
                            ConcurrencyStamp = new Guid("6ee8dcc0-fa7e-4657-b17a-662385ddc5c3"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "1",
                            IsActive = true,
                            Iso2 = "ca",
                            NameAr = "كندا",
                            NameEn = "Canada"
                        },
                        new
                        {
                            Id = 168,
                            Code = "611",
                            ConcurrencyStamp = new Guid("e03d57b1-fb07-4d48-a54f-82c477215e8f"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "57",
                            IsActive = true,
                            Iso2 = "co",
                            NameAr = "كولمبيا",
                            NameEn = "Columbia"
                        },
                        new
                        {
                            Id = 169,
                            Code = "612",
                            ConcurrencyStamp = new Guid("e3fa7953-79f1-42fa-8467-16225a673d6d"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "1",
                            IsActive = true,
                            Iso2 = "bs",
                            NameAr = "جزر البهاما",
                            NameEn = "Bahamas"
                        },
                        new
                        {
                            Id = 170,
                            Code = "613",
                            ConcurrencyStamp = new Guid("73fcc07a-9a12-4ffc-9bed-6582c177e69d"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "506",
                            IsActive = true,
                            Iso2 = "cr",
                            NameAr = "كوستاريكا",
                            NameEn = "Costa Rica"
                        },
                        new
                        {
                            Id = 171,
                            Code = "614",
                            ConcurrencyStamp = new Guid("30e52445-b73c-4ebf-bd19-6c327285d5b2"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "53",
                            IsActive = true,
                            Iso2 = "cu",
                            NameAr = "كوبا",
                            NameEn = "Cuba"
                        },
                        new
                        {
                            Id = 172,
                            Code = "615",
                            ConcurrencyStamp = new Guid("04c8cc8e-f924-4c0d-83ba-03c89d8ae64c"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "1",
                            IsActive = true,
                            Iso2 = "dm",
                            NameAr = "دومينيكا",
                            NameEn = "Dominica"
                        },
                        new
                        {
                            Id = 173,
                            Code = "616",
                            ConcurrencyStamp = new Guid("4161553f-b16f-43e5-9c19-48eb6dff6784"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "1",
                            IsActive = true,
                            Iso2 = "do",
                            NameAr = "جمهورية دمينكان",
                            NameEn = "Republic Dominica"
                        },
                        new
                        {
                            Id = 174,
                            Code = "617",
                            ConcurrencyStamp = new Guid("dca89e96-f1fa-4153-b859-aa577307fd5e"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "503",
                            IsActive = true,
                            Iso2 = "sv",
                            NameAr = "السلفادور",
                            NameEn = "El Salvador"
                        },
                        new
                        {
                            Id = 175,
                            Code = "618",
                            ConcurrencyStamp = new Guid("91e522e3-469c-4df5-8541-ec5c14665381"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "1",
                            IsActive = true,
                            Iso2 = "gd",
                            NameAr = "جرانادا",
                            NameEn = "Granada"
                        },
                        new
                        {
                            Id = 176,
                            Code = "619",
                            ConcurrencyStamp = new Guid("2b1aed1e-c004-4be2-90cb-d6687ecb9e9b"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "502",
                            IsActive = true,
                            Iso2 = "gt",
                            NameAr = "جواتيمالا",
                            NameEn = "Guatemala"
                        },
                        new
                        {
                            Id = 177,
                            Code = "620",
                            ConcurrencyStamp = new Guid("6d58af8e-6dc3-4cb9-99cc-7689a33a528e"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "509",
                            IsActive = true,
                            Iso2 = "ht",
                            NameAr = "هايتي",
                            NameEn = "Haiti"
                        },
                        new
                        {
                            Id = 178,
                            Code = "621",
                            ConcurrencyStamp = new Guid("0eb0f0ee-75b0-4ee9-ac17-74679ed76e8b"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "504",
                            IsActive = true,
                            Iso2 = "hn",
                            NameAr = "هوندوراس",
                            NameEn = "Honduras"
                        },
                        new
                        {
                            Id = 179,
                            Code = "622",
                            ConcurrencyStamp = new Guid("8292fa15-d395-41ef-92cb-44b6c66aed20"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "52",
                            IsActive = true,
                            Iso2 = "mx",
                            NameAr = "المكسيك",
                            NameEn = "Mexico"
                        },
                        new
                        {
                            Id = 180,
                            Code = "623",
                            ConcurrencyStamp = new Guid("c4ba6eaa-906a-4a42-a8ee-215afbd6ab98"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "505",
                            IsActive = true,
                            Iso2 = "ni",
                            NameAr = "نيكاراجوا",
                            NameEn = "Nicaragua"
                        },
                        new
                        {
                            Id = 181,
                            Code = "624",
                            ConcurrencyStamp = new Guid("5e0a5849-4739-4613-97bc-36b9548e264a"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "1",
                            IsActive = true,
                            Iso2 = "lc",
                            NameAr = "سانت لوسيا",
                            NameEn = "Saint Lucia"
                        },
                        new
                        {
                            Id = 182,
                            Code = "625",
                            ConcurrencyStamp = new Guid("f16f8d9e-090b-4778-8396-eecc3fa23eaa"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "1",
                            IsActive = true,
                            Iso2 = "vc",
                            NameAr = "سان فينسنت",
                            NameEn = "Saint Vincent"
                        },
                        new
                        {
                            Id = 183,
                            Code = "626",
                            ConcurrencyStamp = new Guid("acfdd37a-2ea0-4b10-bb67-5f667084324c"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "591",
                            IsActive = true,
                            Iso2 = "bo",
                            NameAr = "بوليفيا",
                            NameEn = "Bolivia"
                        },
                        new
                        {
                            Id = 184,
                            Code = "627",
                            ConcurrencyStamp = new Guid("18c7d962-671c-4aed-8f62-eb89444c78c2"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "56",
                            IsActive = true,
                            Iso2 = "cl",
                            NameAr = "شيلي",
                            NameEn = "Chile"
                        },
                        new
                        {
                            Id = 185,
                            Code = "628",
                            ConcurrencyStamp = new Guid("45ec14c1-06b3-4ee3-8e34-99ae4f3c2985"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "593",
                            IsActive = true,
                            Iso2 = "ec",
                            NameAr = "اكوادور",
                            NameEn = "Ecuador"
                        },
                        new
                        {
                            Id = 186,
                            Code = "629",
                            ConcurrencyStamp = new Guid("31e83784-810d-43a2-a7ce-220e837c9770"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "595",
                            IsActive = true,
                            Iso2 = "py",
                            NameAr = "باراجواي",
                            NameEn = "Paraguay"
                        },
                        new
                        {
                            Id = 187,
                            Code = "630",
                            ConcurrencyStamp = new Guid("737ffe4d-a190-4eb0-abf1-70f41fab72f6"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "51",
                            IsActive = true,
                            Iso2 = "pe",
                            NameAr = "بيرو",
                            NameEn = "Peru"
                        },
                        new
                        {
                            Id = 188,
                            Code = "701",
                            ConcurrencyStamp = new Guid("162e25de-c3b9-4ee4-b04b-f39a98aa4f8c"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "61",
                            IsActive = true,
                            Iso2 = "au",
                            NameAr = "استراليا",
                            NameEn = "Australia"
                        },
                        new
                        {
                            Id = 189,
                            Code = "702",
                            ConcurrencyStamp = new Guid("132c83d8-25a9-440f-b5a3-b66db1568967"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "64",
                            IsActive = true,
                            Iso2 = "nz",
                            NameAr = "نيوزيلندا",
                            NameEn = "New Zealand"
                        },
                        new
                        {
                            Id = 190,
                            Code = "703",
                            ConcurrencyStamp = new Guid("bbd0dd01-0d04-491c-b409-705ea22fb716"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "598",
                            IsActive = true,
                            Iso2 = "yu",
                            NameAr = "أوروغواي",
                            NameEn = "Uruguay"
                        });
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NewsTypeId")
                        .HasColumnType("int");

                    b.Property<string>("TitleAr")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("TitleEn")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.HasIndex("NewsTypeId");

                    b.ToTable("News", "DataManagement");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.NewsCateguery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.ToTable("NewsCategueries", "Lookup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = new Guid("cd309326-e16e-418b-b077-2818ed5fe083"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "غير مصنف",
                            NameEn = "Not Categuerized"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = new Guid("880afcf5-76fc-4579-b8b4-8548bb8cd5a7"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "أخبار الأمير",
                            NameEn = "Prince News"
                        },
                        new
                        {
                            Id = 3,
                            ConcurrencyStamp = new Guid("b4af67e3-2087-470c-bb33-12e70df616f4"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "أخبار النائب",
                            NameEn = "Deputy News"
                        },
                        new
                        {
                            Id = 4,
                            ConcurrencyStamp = new Guid("05081f57-b149-4dd2-8a8c-682197883bda"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "أخبار الإمارة",
                            NameEn = "Emirate News"
                        });
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.NewsType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NewsTypeCode")
                        .HasColumnType("int");

                    b.Property<string>("TitleAr")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("TitleEn")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.HasIndex("NewsTypeCode")
                        .IsUnique();

                    b.ToTable("NewsTypes", "DataManagement");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = new Guid("9f84aa7d-7254-43f8-a786-c9eb89927b62"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            NewsTypeCode = 2,
                            TitleAr = "اخر المحافظات",
                            TitleEn = "Provinces news"
                        },
                        new
                        {
                            Id = 3,
                            ConcurrencyStamp = new Guid("8846ea85-36f0-4857-837a-2627fdd812e1"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            NewsTypeCode = 3,
                            TitleAr = "التقارير الاعلانيه",
                            TitleEn = "Advertisments reports"
                        });
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.PageContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ConcurrencyStamp")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionAr")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PageContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PageContent", "DataManagement");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Poster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("TitleAr")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("TitleEn")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.ToTable("Posters", "DataManagement");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Religion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.ToTable("Religions", "Lookup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = new Guid("a8e864d4-223a-4973-94a5-3c2d4699ec70"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "مسلم",
                            NameEn = "Muslem"
                        });
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Request", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestNumber")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("StageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("CreatedDate");

                    b.HasIndex("LastModifiedBy");

                    b.HasIndex("ServiceId");

                    b.HasIndex("StageId");

                    b.ToTable("Requests", "Request");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestAttachmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtentionAllowed")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MaxFileSize")
                        .HasColumnType("int");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.HasIndex("ServiceId");

                    b.ToTable("RequestAttachmentTypes", "Request");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestElectronicBoard", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RequestContent")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("RequestTitle")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("RequestTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RequestTypeId");

                    b.ToTable("RequestElectronicBoards", "Request");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestElectronicSummon", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RequestContent")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("RequestTitle")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("RequestTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RequestTypeId");

                    b.ToTable("RequestElectronicSummons", "Request");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestForeignersRealtyOwner", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int>("BuildingTypeId")
                        .HasColumnType("int");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("GovernorateId")
                        .HasColumnType("int");

                    b.Property<int>("ReligionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuildingTypeId");

                    b.HasIndex("GovernorateId");

                    b.HasIndex("ReligionId");

                    b.ToTable("RequestForeignersRealtyOwners", "Request");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestJudgmentExecution", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DefendantTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LawsuitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LawsuitNumber")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("RequesterNationalId")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("RequesterType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DefendantTypeId");

                    b.ToTable("RequestJudgmentExecutions", "Request");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestLandsInfringement", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("EstimatedSpace")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("GovernorateId")
                        .HasColumnType("int");

                    b.Property<string>("InfringerDescription")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("InfringerName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("InstrumentNumber")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("RequestTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GovernorateId");

                    b.HasIndex("RequestTypeId");

                    b.ToTable("RequestLandsInfringements", "Request");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestMarriageCertificate", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ChildrenCount")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeSide")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("JobOccupation")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("MaritalStatusId")
                        .HasColumnType("int");

                    b.Property<int>("RequestTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaritalStatusId");

                    b.HasIndex("RequestTypeId");

                    b.ToTable("RequestMarriageCertificates", "Request");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestNumberSequence", b =>
                {
                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.ToSqlQuery("SELECT NEXT VALUE FOR Request.RequestNumberSequence AS [Value]");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestPrisonersService", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CaseTypeId")
                        .HasColumnType("int");

                    b.Property<string>("PresonName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("RequestTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CaseTypeId");

                    b.HasIndex("RequestTypeId");

                    b.ToTable("RequestPrisonersServices", "Request");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestPrisonerTempRelease", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CaseTypeId")
                        .HasColumnType("int");

                    b.Property<string>("PresonName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("RequestTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CaseTypeId");

                    b.HasIndex("RequestTypeId");

                    b.ToTable("RequestPrisonerTempReleases", "Request");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestStageLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<Guid>("RequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.HasIndex("RequestId");

                    b.HasIndex("StageId");

                    b.ToTable("RequestStageLogs", "Request");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestTreatmentRecommendation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PatientName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PatientNationalId")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("PatientType")
                        .HasColumnType("int");

                    b.Property<int>("RequestTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RequestTypeId");

                    b.ToTable("RequestTreatmentRecommendations", "Request");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.HasIndex("ServiceId");

                    b.ToTable("RequestTypes", "Request");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = new Guid("e018b249-1b96-4582-9c62-82436e0aa573"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "حضور زواج",
                            NameEn = "حضور زواج",
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = new Guid("5541afe6-47c2-429a-8d0c-7847d3c5c2ad"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "زيارة الوالدين والأهل",
                            NameEn = "زيارة الوالدين والأهل",
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 3,
                            ConcurrencyStamp = new Guid("406bd5a9-939d-4099-8a4c-fc076dcf98de"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "زيارة مريض",
                            NameEn = "زيارة مريض",
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 4,
                            ConcurrencyStamp = new Guid("ddb990e9-3c2a-4b9e-878e-6c523f1b6d6f"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "تسجيل في الجامعة",
                            NameEn = "تسجيل في الجامعة",
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 5,
                            ConcurrencyStamp = new Guid("63ceadbf-f66f-4d2e-8d75-3cc0d51a073a"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "عزاء",
                            NameEn = "عزاء",
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 6,
                            ConcurrencyStamp = new Guid("8b0bfa89-9f9c-4c0a-a6e3-2d3da9da9dfc"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "العلاج والتنويم",
                            NameEn = "العلاج والتنويم",
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 7,
                            ConcurrencyStamp = new Guid("3c4be0a6-fc26-46a3-b428-8a0eea7901e2"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "إبعاد سجين لبلادة",
                            NameEn = "إبعاد سجين لبلادة",
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 8,
                            ConcurrencyStamp = new Guid("c58c8795-0af5-48b4-b67b-b4ecabb4a452"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "إعفاء من الإبعاد",
                            NameEn = "إعفاء من الإبعاد",
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 9,
                            ConcurrencyStamp = new Guid("98c985f5-5e6f-4216-a09b-0b774ea4e694"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "إعفاء من باقي المحكومية لسجين",
                            NameEn = "إعفاء من باقي المحكومية لسجين",
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 10,
                            ConcurrencyStamp = new Guid("da5e3f6a-dc80-46a1-bb72-13093a693c1b"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "إفراج صحي لسجين",
                            NameEn = "إفراج صحي لسجين",
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 11,
                            ConcurrencyStamp = new Guid("dab858d9-641d-4785-b96d-8254b328a759"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "إنهاء قضايا الأحداث الاجانب",
                            NameEn = "إنهاء قضايا الأحداث الاجانب",
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 12,
                            ConcurrencyStamp = new Guid("beb155d1-0f7e-4e26-9d4e-680fea31318d"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "تثبيت سجين في سجنه",
                            NameEn = "تثبيت سجين في سجنه",
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 13,
                            ConcurrencyStamp = new Guid("15903833-bba4-47ec-89f7-618c2ababe5b"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "ترحيل سجين",
                            NameEn = "ترحيل سجين",
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 14,
                            ConcurrencyStamp = new Guid("4703cc53-40ca-498b-a07a-b3aaf01efea8"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "زيارة خاصة لسجين",
                            NameEn = "زيارة خاصة لسجين",
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 15,
                            ConcurrencyStamp = new Guid("e1d6cf71-db89-4d57-bd8d-5195c31f6a0f"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "زيارة خاصة مكتبية لسجين",
                            NameEn = "زيارة خاصة مكتبية لسجين",
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 16,
                            ConcurrencyStamp = new Guid("80b33caa-e0e9-4063-9f98-dcb3a70adaf8"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "طلب نقل سجين",
                            NameEn = "طلب نقل سجين",
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 17,
                            ConcurrencyStamp = new Guid("f9461998-f343-4a53-89b4-0045ccb7fb7e"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "اقتراح",
                            NameEn = "اقتراح",
                            ServiceId = 4
                        },
                        new
                        {
                            Id = 18,
                            ConcurrencyStamp = new Guid("d021c625-b404-4e0e-ade4-73e1f6f8dee5"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "شكوى",
                            NameEn = "شكوى",
                            ServiceId = 4
                        },
                        new
                        {
                            Id = 19,
                            ConcurrencyStamp = new Guid("80f788ac-46e0-4378-95ab-3c6dde1dba56"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "طلب",
                            NameEn = "طلب",
                            ServiceId = 4
                        },
                        new
                        {
                            Id = 20,
                            ConcurrencyStamp = new Guid("2b8c3d06-c262-46c6-91f2-da09e0e4ec29"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "زراعي",
                            NameEn = "زراعي",
                            ServiceId = 5
                        },
                        new
                        {
                            Id = 21,
                            ConcurrencyStamp = new Guid("bb021deb-4f87-490a-ba5d-6c1389a35c32"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "سكني",
                            NameEn = "سكني",
                            ServiceId = 5
                        },
                        new
                        {
                            Id = 22,
                            ConcurrencyStamp = new Guid("970fcc33-38b6-4a11-9139-ebd8887a3af8"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "تجاري",
                            NameEn = "تجاري",
                            ServiceId = 5
                        },
                        new
                        {
                            Id = 23,
                            ConcurrencyStamp = new Guid("ec60eb2c-2883-4044-8168-6d6042162bf5"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "أملاك عامة",
                            NameEn = "أملاك عامة",
                            ServiceId = 5
                        },
                        new
                        {
                            Id = 24,
                            ConcurrencyStamp = new Guid("d74774f3-864c-49f5-ab78-41577f1445f9"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "اقتراح",
                            NameEn = "اقتراح",
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 25,
                            ConcurrencyStamp = new Guid("7f081735-c007-4ff7-a39d-72e2d35c8762"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "شكوى",
                            NameEn = "شكوى",
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 26,
                            ConcurrencyStamp = new Guid("07c4e2db-ab0a-4a01-b765-48f30286b03d"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "طلب",
                            NameEn = "طلب",
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 27,
                            ConcurrencyStamp = new Guid("be1e8c66-e646-4f3b-94c4-4bd714e77026"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "زواج السعودية من أجنبي",
                            NameEn = "زواج السعودية من أجنبي",
                            ServiceId = 7
                        },
                        new
                        {
                            Id = 28,
                            ConcurrencyStamp = new Guid("9deec5e5-788a-4773-94b3-ef99f9d59f78"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "زواج السعودي من دولة المغرب",
                            NameEn = "زواج السعودي من دولة المغرب",
                            ServiceId = 7
                        },
                        new
                        {
                            Id = 29,
                            ConcurrencyStamp = new Guid("9fbe4cdd-f808-4822-95db-557185a9d1fe"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "زواج السعودي من غير سعودية مقيمة بالمملكة",
                            NameEn = "زواج السعودي من غير سعودية مقيمة بالمملكة",
                            ServiceId = 7
                        },
                        new
                        {
                            Id = 30,
                            ConcurrencyStamp = new Guid("d0684442-c410-4a28-b096-cc85295a100f"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "زواج السعودي من غير سعودية مولودة بالمملكة",
                            NameEn = "زواج السعودي من غير سعودية مولودة بالمملكة",
                            ServiceId = 7
                        },
                        new
                        {
                            Id = 31,
                            ConcurrencyStamp = new Guid("4b27f6ab-d512-4c5f-94c1-232df5428175"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "زواج السعودية من غير سعودي مقيم بالمملكة",
                            NameEn = "زواج السعودية من غير سعودي مقيم بالمملكة",
                            ServiceId = 7
                        },
                        new
                        {
                            Id = 32,
                            ConcurrencyStamp = new Guid("3f353837-32f2-4d6e-9edb-27b6cb23560b"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "زواج السعودية من غير سعودي مولود بالمملكة",
                            NameEn = "زواج السعودية من غير سعودي مولود بالمملكة",
                            ServiceId = 7
                        },
                        new
                        {
                            Id = 33,
                            ConcurrencyStamp = new Guid("f04d2db4-14a6-4ea3-81c3-9c3e75f99a56"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "زواج السعودي من غير سعودية من خارج المملكة",
                            NameEn = "زواج السعودي من غير سعودية من خارج المملكة",
                            ServiceId = 7
                        },
                        new
                        {
                            Id = 34,
                            ConcurrencyStamp = new Guid("72cedbd5-0003-4fc1-8a77-4e4e2198797f"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "العلاج النفسي",
                            NameEn = "العلاج النفسي",
                            ServiceId = 9
                        },
                        new
                        {
                            Id = 35,
                            ConcurrencyStamp = new Guid("9b7033d6-0786-4167-993d-5768562579b9"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "علاج الإدمان",
                            NameEn = "علاج الإدمان",
                            ServiceId = 9
                        });
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.ToTable("Roles", "Security");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RolesScreen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("CanCreate")
                        .HasColumnType("bit");

                    b.Property<bool>("CanDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("CanEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("CanRead")
                        .HasColumnType("bit");

                    b.Property<Guid>("ConcurrencyStamp")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("ScreenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RolesScreen", "Security");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Cost")
                        .HasColumnType("float");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionAr")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExternal")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("RequestLink")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("SectorAr")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("SectorEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("WorkDays")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.ToTable("Services", "DataManagement");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = new Guid("020691bc-d0f0-4f81-b760-7928a3619f29"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescriptionAr = "المجلس الالكتروني",
                            DescriptionEn = "المجلس الالكتروني",
                            IsActive = true,
                            IsExternal = false,
                            NameAr = "المجلس الالكتروني",
                            NameEn = "Electronic Board",
                            RequestLink = "url",
                            SectorAr = "المجلس الالكتروني",
                            SectorEn = "المجلس الالكتروني",
                            WorkDays = "10"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = new Guid("b71fd18e-e360-423e-be20-6cb5920c26b3"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescriptionAr = "الخروج المؤقت لسجين",
                            DescriptionEn = "الخروج المؤقت لسجين",
                            IsActive = true,
                            IsExternal = false,
                            NameAr = "الخروج المؤقت لسجين",
                            NameEn = "Prisoner Temp Release",
                            RequestLink = "/eservice/prisoner-temp-release",
                            SectorAr = "الخروج المؤقت لسجين",
                            SectorEn = "الخروج المؤقت لسجين",
                            WorkDays = "10"
                        },
                        new
                        {
                            Id = 3,
                            ConcurrencyStamp = new Guid("871ac006-2802-4a98-9555-4df764a1b02d"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescriptionAr = "خدمات السجناء",
                            DescriptionEn = "خدمات السجناء",
                            IsActive = true,
                            IsExternal = false,
                            NameAr = "خدمات السجناء",
                            NameEn = "Prisoners Services",
                            RequestLink = "/eservice/prisoners-services",
                            SectorAr = "خدمات السجناء",
                            SectorEn = "خدمات السجناء",
                            WorkDays = "10"
                        },
                        new
                        {
                            Id = 4,
                            ConcurrencyStamp = new Guid("c9522bba-9abd-43af-8781-c6625a7af903"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescriptionAr = "الاستدعاء الإلكتروني",
                            DescriptionEn = "الاستدعاء الإلكتروني",
                            IsActive = true,
                            IsExternal = false,
                            NameAr = "الاستدعاء الإلكتروني",
                            NameEn = "Electronic Summon",
                            RequestLink = "/eservice/electronic-summon",
                            SectorAr = "الاستدعاء الإلكتروني",
                            SectorEn = "الاستدعاء الإلكتروني",
                            WorkDays = "10"
                        },
                        new
                        {
                            Id = 5,
                            ConcurrencyStamp = new Guid("8ae3deb7-c882-4c03-9c66-5cd4cc833d4d"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescriptionAr = "التعديات على الأراضي الحكومية",
                            DescriptionEn = "التعديات على الأراضي الحكومية",
                            IsActive = false,
                            IsExternal = false,
                            NameAr = "التعديات على الأراضي الحكومية",
                            NameEn = "Infringements On Government Land",
                            RequestLink = "/eservice/lands-infringement",
                            SectorAr = "التعديات على الأراضي الحكومية",
                            SectorEn = "التعديات على الأراضي الحكومية",
                            WorkDays = "10"
                        },
                        new
                        {
                            Id = 6,
                            ConcurrencyStamp = new Guid("f117dbc5-042c-45ab-9fd3-04e0ddc9cf9d"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescriptionAr = "انفاذ الحكم الشرعي",
                            DescriptionEn = "انفاذ الحكم الشرعي",
                            IsActive = true,
                            IsExternal = false,
                            NameAr = "انفاذ الحكم الشرعي",
                            NameEn = "Judgment Execution",
                            RequestLink = "/eservice/judgment-execution",
                            SectorAr = "انفاذ الحكم الشرعي",
                            SectorEn = "انفاذ الحكم الشرعي",
                            WorkDays = "10"
                        },
                        new
                        {
                            Id = 7,
                            ConcurrencyStamp = new Guid("d0edab03-732e-469f-a6b0-64cd0ab6060f"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescriptionAr = "توثيق زواج",
                            DescriptionEn = "توثيق زواج",
                            IsActive = true,
                            IsExternal = false,
                            NameAr = "توثيق زواج",
                            NameEn = "Marriage Certificate",
                            RequestLink = "/eservice/marriage-certificate",
                            SectorAr = "توثيق زواج",
                            SectorEn = "توثيق زواج",
                            WorkDays = "10"
                        },
                        new
                        {
                            Id = 8,
                            ConcurrencyStamp = new Guid("7450796c-9451-4503-a71b-383f69708094"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescriptionAr = "تملك عقار للأجانب",
                            DescriptionEn = "تملك عقار للأجانب",
                            IsActive = true,
                            IsExternal = false,
                            NameAr = "تملك عقار للأجانب",
                            NameEn = "Realty Ownership For Foreigners",
                            RequestLink = "/eservice/foreigners-realty-owner",
                            SectorAr = "تملك عقار للأجانب",
                            SectorEn = "تملك عقار للأجانب",
                            WorkDays = "10"
                        },
                        new
                        {
                            Id = 9,
                            ConcurrencyStamp = new Guid("8c81e8ac-7272-4010-9f56-9d0995aedbee"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescriptionAr = "طلب علاج",
                            DescriptionEn = "طلب علاج",
                            IsActive = true,
                            IsExternal = false,
                            NameAr = "طلب علاج",
                            NameEn = "Treatment Recommendation",
                            RequestLink = "/eservice/treatment-recommendation",
                            SectorAr = "طلب علاج",
                            SectorEn = "طلب علاج",
                            WorkDays = "10"
                        });
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.ServiceAudience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AudienceId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AudienceId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ServiceId");

                    b.ToTable("ServiceAudiences", "DataManagement");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.ServiceBenefit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsBenefit")
                        .HasColumnType("bit");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.ToTable("ServiceBenefits", "DataManagement");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.ServiceCondition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ConcurrencyStamp")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.HasIndex("ServiceId");

                    b.ToTable("ServiceConditions", "DataManagement");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.ServiceRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("StarsCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.ToTable("ServiceRates", "DataManagement");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.ServiceStage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AdminUrl")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterUrl")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("StageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.HasIndex("ServiceId");

                    b.HasIndex("StageId");

                    b.ToTable("ServiceStages", "DataManagement");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdminUrl = "/admin/eservice-admin/prisoner-temp-release-admin-view",
                            ConcurrencyStamp = new Guid("ab602b45-028f-46da-88c8-30a57613e051"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/prisoner-temp-release",
                            ServiceId = 2,
                            StageId = 1
                        },
                        new
                        {
                            Id = 2,
                            AdminUrl = "/admin/eservice-admin/prisoner-temp-release-admin-preview-step",
                            ConcurrencyStamp = new Guid("90471daa-56f1-441b-8e39-fb6162170b05"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/prisoner-temp-release-view",
                            ServiceId = 2,
                            StageId = 2
                        },
                        new
                        {
                            Id = 3,
                            AdminUrl = "/admin/eservice-admin/prisoner-temp-release-admin-view",
                            ConcurrencyStamp = new Guid("96f9c13f-079d-4bad-8f40-fedb1ba5b849"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/prisoner-temp-release",
                            ServiceId = 2,
                            StageId = 3
                        },
                        new
                        {
                            Id = 4,
                            AdminUrl = "/admin/eservice-admin/prisoner-temp-release-admin-view",
                            ConcurrencyStamp = new Guid("033d9054-0b3e-4f4b-840f-7f1ec34611dd"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/prisoner-temp-release-view",
                            ServiceId = 2,
                            StageId = 4
                        },
                        new
                        {
                            Id = 5,
                            AdminUrl = "/admin/eservice-admin/prisoner-temp-release-admin-view",
                            ConcurrencyStamp = new Guid("db480012-8bc6-454c-972c-ca00d951b5ff"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/prisoner-temp-release-view",
                            ServiceId = 2,
                            StageId = 5
                        },
                        new
                        {
                            Id = 6,
                            AdminUrl = "/admin/eservice-admin/prisoner-temp-release-admin-view",
                            ConcurrencyStamp = new Guid("f9117869-db62-4d53-9bb2-c2cd163806a9"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/prisoner-temp-release-view",
                            ServiceId = 2,
                            StageId = 6
                        },
                        new
                        {
                            Id = 7,
                            AdminUrl = "/admin/eservice-admin/prisoner-temp-release-admin-view",
                            ConcurrencyStamp = new Guid("c301b92f-2ddb-48be-8977-7ca9b5ef5e1e"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/prisoner-temp-release-view",
                            ServiceId = 2,
                            StageId = 7
                        },
                        new
                        {
                            Id = 8,
                            AdminUrl = "/admin/eservice-admin/prisoners-services-admin-view",
                            ConcurrencyStamp = new Guid("f45f5a27-f892-42d2-82a8-11a127d9f497"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/prisoners-services",
                            ServiceId = 3,
                            StageId = 1
                        },
                        new
                        {
                            Id = 9,
                            AdminUrl = "/admin/eservice-admin/prisoners-services-admin-preview-step",
                            ConcurrencyStamp = new Guid("0b8c607c-f370-469b-9309-b362e30142f8"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/prisoners-services-view",
                            ServiceId = 3,
                            StageId = 2
                        },
                        new
                        {
                            Id = 10,
                            AdminUrl = "/admin/eservice-admin/prisoners-services-admin-view",
                            ConcurrencyStamp = new Guid("6a6c061f-3e5f-4fc5-b96f-499697aed4c4"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/prisoners-services",
                            ServiceId = 3,
                            StageId = 3
                        },
                        new
                        {
                            Id = 11,
                            AdminUrl = "/admin/eservice-admin/prisoners-services-admin-view",
                            ConcurrencyStamp = new Guid("815d191d-d6c4-49c9-b27a-74e54a7de87d"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/prisoners-services-view",
                            ServiceId = 3,
                            StageId = 4
                        },
                        new
                        {
                            Id = 12,
                            AdminUrl = "/admin/eservice-admin/prisoners-services-admin-view",
                            ConcurrencyStamp = new Guid("efed2af7-73b9-4dd8-95f7-f2694fddb3a6"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/prisoners-services-view",
                            ServiceId = 3,
                            StageId = 5
                        },
                        new
                        {
                            Id = 13,
                            AdminUrl = "/admin/eservice-admin/prisoners-services-admin-view",
                            ConcurrencyStamp = new Guid("84798441-75e0-429e-a4ad-fc6c14304e7b"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/prisoners-services-view",
                            ServiceId = 3,
                            StageId = 6
                        },
                        new
                        {
                            Id = 14,
                            AdminUrl = "/admin/eservice-admin/prisoners-services-admin-view",
                            ConcurrencyStamp = new Guid("bb3d4269-e6e7-4a0b-b712-c4f4a487cd6d"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/prisoners-services-view",
                            ServiceId = 3,
                            StageId = 7
                        },
                        new
                        {
                            Id = 15,
                            AdminUrl = "/admin/eservice-admin/electronic-summoning-admin-view",
                            ConcurrencyStamp = new Guid("38e4845a-3498-4809-b8b4-949ed0735597"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/electronic-summoning",
                            ServiceId = 3,
                            StageId = 1
                        },
                        new
                        {
                            Id = 16,
                            AdminUrl = "/admin/eservice-admin/electronic-summoning-admin-preview-step",
                            ConcurrencyStamp = new Guid("0aa5e786-abe6-4af8-bb54-669c26b31296"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/electronic-summoning-view",
                            ServiceId = 3,
                            StageId = 2
                        },
                        new
                        {
                            Id = 17,
                            AdminUrl = "/admin/eservice-admin/electronic-summoning-admin-view",
                            ConcurrencyStamp = new Guid("f4f24177-4255-4307-9b22-22fc15b02752"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/electronic-summoning",
                            ServiceId = 3,
                            StageId = 3
                        },
                        new
                        {
                            Id = 18,
                            AdminUrl = "/admin/eservice-admin/electronic-summoning-admin-view",
                            ConcurrencyStamp = new Guid("70b5a8b0-d4f8-4b8a-961c-31cda118d750"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/electronic-summoning-view",
                            ServiceId = 3,
                            StageId = 4
                        },
                        new
                        {
                            Id = 19,
                            AdminUrl = "/admin/eservice-admin/electronic-summoning-admin-view",
                            ConcurrencyStamp = new Guid("f017789d-36e8-4df2-9c40-a64c02d90714"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/electronic-summoning-view",
                            ServiceId = 3,
                            StageId = 5
                        },
                        new
                        {
                            Id = 20,
                            AdminUrl = "/admin/eservice-admin/electronic-summoning-admin-view",
                            ConcurrencyStamp = new Guid("cc1dd2d9-532e-4099-ab94-e6d23617fe1a"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/electronic-summoning-view",
                            ServiceId = 3,
                            StageId = 6
                        },
                        new
                        {
                            Id = 21,
                            AdminUrl = "/admin/eservice-admin/electronic-summoning-admin-view",
                            ConcurrencyStamp = new Guid("a78906ae-9b3d-4911-99f9-10d1b474faf5"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/electronic-summoning-view",
                            ServiceId = 3,
                            StageId = 7
                        },
                        new
                        {
                            Id = 22,
                            AdminUrl = "/admin/eservice-admin/electronic-summon-admin-view",
                            ConcurrencyStamp = new Guid("81546c20-5fe0-4c20-818e-0754a40acb89"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/electronic-summon",
                            ServiceId = 4,
                            StageId = 1
                        },
                        new
                        {
                            Id = 23,
                            AdminUrl = "/admin/eservice-admin/electronic-summon-admin-preview-step",
                            ConcurrencyStamp = new Guid("6410e52d-8538-45c3-94fe-90a9dcb3d667"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/electronic-summon-view",
                            ServiceId = 4,
                            StageId = 2
                        },
                        new
                        {
                            Id = 24,
                            AdminUrl = "/admin/eservice-admin/electronic-summon-admin-view",
                            ConcurrencyStamp = new Guid("a9f51f87-1254-487a-ad53-c40df1b71b42"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/electronic-summon",
                            ServiceId = 4,
                            StageId = 3
                        },
                        new
                        {
                            Id = 25,
                            AdminUrl = "/admin/eservice-admin/electronic-summon-admin-view",
                            ConcurrencyStamp = new Guid("c9ad9f96-fc66-4709-9009-4c0744de2987"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/electronic-summon-view",
                            ServiceId = 4,
                            StageId = 4
                        },
                        new
                        {
                            Id = 26,
                            AdminUrl = "/admin/eservice-admin/electronic-summon-admin-view",
                            ConcurrencyStamp = new Guid("33970b55-8a4c-43c6-8219-5519bd97a56b"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/electronic-summon-view",
                            ServiceId = 4,
                            StageId = 5
                        },
                        new
                        {
                            Id = 27,
                            AdminUrl = "/admin/eservice-admin/electronic-summon-admin-view",
                            ConcurrencyStamp = new Guid("8ac69b41-6ea5-4ad4-b275-a9a96cab6463"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/electronic-summon-view",
                            ServiceId = 4,
                            StageId = 6
                        },
                        new
                        {
                            Id = 28,
                            AdminUrl = "/admin/eservice-admin/electronic-summon-admin-view",
                            ConcurrencyStamp = new Guid("cbb51b29-ea61-4f2b-b72f-99cfb22e1f86"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/electronic-summon-view",
                            ServiceId = 4,
                            StageId = 7
                        },
                        new
                        {
                            Id = 29,
                            AdminUrl = "/admin/eservice-admin/lands-infringement-admin-view",
                            ConcurrencyStamp = new Guid("29774bef-3153-4ba6-99a2-12aab661910e"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/lands-infringement",
                            ServiceId = 5,
                            StageId = 1
                        },
                        new
                        {
                            Id = 30,
                            AdminUrl = "/admin/eservice-admin/lands-infringement-admin-preview-step",
                            ConcurrencyStamp = new Guid("709698d6-b291-4132-be2b-2b104287a327"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/lands-infringement-view",
                            ServiceId = 5,
                            StageId = 2
                        },
                        new
                        {
                            Id = 31,
                            AdminUrl = "/admin/eservice-admin/lands-infringement-admin-view",
                            ConcurrencyStamp = new Guid("c875de1e-8b3a-476e-9c15-1084ed4c4885"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/lands-infringement",
                            ServiceId = 5,
                            StageId = 3
                        },
                        new
                        {
                            Id = 32,
                            AdminUrl = "/admin/eservice-admin/lands-infringement-admin-view",
                            ConcurrencyStamp = new Guid("333b488c-c6eb-41e7-88b7-2c7b5b6337d6"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/lands-infringement-view",
                            ServiceId = 5,
                            StageId = 4
                        },
                        new
                        {
                            Id = 33,
                            AdminUrl = "/admin/eservice-admin/lands-infringement-admin-view",
                            ConcurrencyStamp = new Guid("8bb30b95-30df-4a3d-b33f-cbd76c1b61e1"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/lands-infringement-view",
                            ServiceId = 5,
                            StageId = 5
                        },
                        new
                        {
                            Id = 34,
                            AdminUrl = "/admin/eservice-admin/lands-infringement-admin-view",
                            ConcurrencyStamp = new Guid("ccca67a0-7eb6-45db-8aae-590f34d915dc"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/lands-infringement-view",
                            ServiceId = 5,
                            StageId = 6
                        },
                        new
                        {
                            Id = 35,
                            AdminUrl = "/admin/eservice-admin/lands-infringement-admin-view",
                            ConcurrencyStamp = new Guid("93405f8e-6eb7-4eb8-8827-9f80ee35914f"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/lands-infringement-view",
                            ServiceId = 5,
                            StageId = 7
                        },
                        new
                        {
                            Id = 36,
                            AdminUrl = "/admin/eservice-admin/judgment-execution-admin-view",
                            ConcurrencyStamp = new Guid("c54ca788-b9f0-4393-b652-2a4c93b722f3"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/judgment-execution",
                            ServiceId = 6,
                            StageId = 1
                        },
                        new
                        {
                            Id = 37,
                            AdminUrl = "/admin/eservice-admin/judgment-execution-admin-preview-step",
                            ConcurrencyStamp = new Guid("2a688a17-2697-4ef8-9936-da35c151de90"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/judgment-execution-view",
                            ServiceId = 6,
                            StageId = 2
                        },
                        new
                        {
                            Id = 38,
                            AdminUrl = "/admin/eservice-admin/judgment-execution-admin-view",
                            ConcurrencyStamp = new Guid("559d42c1-b281-4e4b-b322-c82223fef015"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/judgment-execution",
                            ServiceId = 6,
                            StageId = 3
                        },
                        new
                        {
                            Id = 39,
                            AdminUrl = "/admin/eservice-admin/judgment-execution-admin-view",
                            ConcurrencyStamp = new Guid("2b6458e3-2a48-4215-9511-625eae3d4f00"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/judgment-execution-view",
                            ServiceId = 6,
                            StageId = 4
                        },
                        new
                        {
                            Id = 40,
                            AdminUrl = "/admin/eservice-admin/judgment-execution-admin-view",
                            ConcurrencyStamp = new Guid("f69dba05-0c4a-4df6-9bb1-28e7d5b77de2"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/judgment-execution-view",
                            ServiceId = 6,
                            StageId = 5
                        },
                        new
                        {
                            Id = 41,
                            AdminUrl = "/admin/eservice-admin/judgment-execution-admin-view",
                            ConcurrencyStamp = new Guid("17b4e2cd-6cd8-4537-87fe-da16a28092d8"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/judgment-execution-view",
                            ServiceId = 6,
                            StageId = 6
                        },
                        new
                        {
                            Id = 42,
                            AdminUrl = "/admin/eservice-admin/judgment-execution-admin-view",
                            ConcurrencyStamp = new Guid("70ed7ba8-4c3a-4cce-81f8-6eec5eb70048"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/judgment-execution-view",
                            ServiceId = 6,
                            StageId = 7
                        },
                        new
                        {
                            Id = 43,
                            AdminUrl = "/admin/eservice-admin/marriage-certificate-admin-view",
                            ConcurrencyStamp = new Guid("5d42f396-3d3f-4474-a592-3ef7c9c6d882"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/marriage-certificate",
                            ServiceId = 7,
                            StageId = 1
                        },
                        new
                        {
                            Id = 44,
                            AdminUrl = "/admin/eservice-admin/marriage-certificate-admin-preview-step",
                            ConcurrencyStamp = new Guid("5c50e081-a9d0-41cb-894f-f258258fcc6b"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/marriage-certificate-view",
                            ServiceId = 7,
                            StageId = 2
                        },
                        new
                        {
                            Id = 45,
                            AdminUrl = "/admin/eservice-admin/marriage-certificate-admin-view",
                            ConcurrencyStamp = new Guid("4878fe23-54f0-429f-86e3-2dabcc4cd377"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/marriage-certificate",
                            ServiceId = 7,
                            StageId = 3
                        },
                        new
                        {
                            Id = 46,
                            AdminUrl = "/admin/eservice-admin/marriage-certificate-admin-view",
                            ConcurrencyStamp = new Guid("137e2747-9fe0-4664-a478-988430cb7a31"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/marriage-certificate-view",
                            ServiceId = 7,
                            StageId = 4
                        },
                        new
                        {
                            Id = 47,
                            AdminUrl = "/admin/eservice-admin/marriage-certificate-admin-view",
                            ConcurrencyStamp = new Guid("44246c37-41e5-4f6e-b500-b70ea5c3a0a7"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/marriage-certificate-view",
                            ServiceId = 7,
                            StageId = 5
                        },
                        new
                        {
                            Id = 48,
                            AdminUrl = "/admin/eservice-admin/marriage-certificate-admin-view",
                            ConcurrencyStamp = new Guid("11f089ca-6f69-42cc-801f-5db7d3b7387f"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/marriage-certificate-view",
                            ServiceId = 7,
                            StageId = 6
                        },
                        new
                        {
                            Id = 49,
                            AdminUrl = "/admin/eservice-admin/marriage-certificate-admin-view",
                            ConcurrencyStamp = new Guid("61a6d45f-4fe3-4ccb-982e-d1cac0f88816"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/marriage-certificate-view",
                            ServiceId = 7,
                            StageId = 7
                        },
                        new
                        {
                            Id = 50,
                            AdminUrl = "/admin/eservice-admin/foreigners-realty-owner-admin-view",
                            ConcurrencyStamp = new Guid("4aed5e04-3c41-4835-bf2c-fafdb815ce92"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/foreigners-realty-owner",
                            ServiceId = 8,
                            StageId = 1
                        },
                        new
                        {
                            Id = 51,
                            AdminUrl = "/admin/eservice-admin/foreigners-realty-owner-admin-preview-step",
                            ConcurrencyStamp = new Guid("ce8e63f6-a0c1-4e06-9639-9f5efd4911c9"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/foreigners-realty-owner-view",
                            ServiceId = 8,
                            StageId = 2
                        },
                        new
                        {
                            Id = 52,
                            AdminUrl = "/admin/eservice-admin/foreigners-realty-owner-admin-view",
                            ConcurrencyStamp = new Guid("051b7423-16c5-47c9-a7db-c46be191b40b"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/foreigners-realty-owner",
                            ServiceId = 8,
                            StageId = 3
                        },
                        new
                        {
                            Id = 53,
                            AdminUrl = "/admin/eservice-admin/foreigners-realty-owner-admin-view",
                            ConcurrencyStamp = new Guid("e8f07b29-7dd8-49e4-bf62-bc50cf7c79e9"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/foreigners-realty-owner-view",
                            ServiceId = 8,
                            StageId = 4
                        },
                        new
                        {
                            Id = 54,
                            AdminUrl = "/admin/eservice-admin/foreigners-realty-owner-admin-view",
                            ConcurrencyStamp = new Guid("4cb09275-d5d7-4275-8415-f87c4522fa69"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/foreigners-realty-owner-view",
                            ServiceId = 8,
                            StageId = 5
                        },
                        new
                        {
                            Id = 55,
                            AdminUrl = "/admin/eservice-admin/foreigners-realty-owner-admin-view",
                            ConcurrencyStamp = new Guid("1aeaf22a-e9bb-4305-9ec4-47a494e25107"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/foreigners-realty-owner-view",
                            ServiceId = 8,
                            StageId = 6
                        },
                        new
                        {
                            Id = 56,
                            AdminUrl = "/admin/eservice-admin/foreigners-realty-owner-admin-view",
                            ConcurrencyStamp = new Guid("48a80ed9-b387-4ec9-bc9d-4cabb3548a69"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/foreigners-realty-owner-view",
                            ServiceId = 8,
                            StageId = 7
                        },
                        new
                        {
                            Id = 57,
                            AdminUrl = "/admin/eservice-admin/treatment-recommendation-admin-view",
                            ConcurrencyStamp = new Guid("7b36101e-a0bb-4d7d-a0f7-dd4121f31bd1"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/treatment-recommendation",
                            ServiceId = 9,
                            StageId = 1
                        },
                        new
                        {
                            Id = 58,
                            AdminUrl = "/admin/eservice-admin/treatment-recommendation-admin-preview-step",
                            ConcurrencyStamp = new Guid("19226c2d-a564-4277-bf2a-6f781b895511"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/treatment-recommendation-view",
                            ServiceId = 9,
                            StageId = 2
                        },
                        new
                        {
                            Id = 59,
                            AdminUrl = "/admin/eservice-admin/treatment-recommendation-admin-view",
                            ConcurrencyStamp = new Guid("70c3425b-1b09-467d-8326-2c47c1c3e3e5"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/treatment-recommendation",
                            ServiceId = 9,
                            StageId = 3
                        },
                        new
                        {
                            Id = 60,
                            AdminUrl = "/admin/eservice-admin/treatment-recommendation-admin-view",
                            ConcurrencyStamp = new Guid("e39d9a58-74d0-417f-ba6c-2c0bcc72502a"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/treatment-recommendation-view",
                            ServiceId = 9,
                            StageId = 4
                        },
                        new
                        {
                            Id = 61,
                            AdminUrl = "/admin/eservice-admin/treatment-recommendation-admin-view",
                            ConcurrencyStamp = new Guid("0957dbc5-952b-4eda-a0df-755e4c91e324"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/treatment-recommendation-view",
                            ServiceId = 9,
                            StageId = 5
                        },
                        new
                        {
                            Id = 62,
                            AdminUrl = "/admin/eservice-admin/treatment-recommendation-admin-view",
                            ConcurrencyStamp = new Guid("a9f22a84-04f5-4f68-a832-ed2a34bbee0b"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/treatment-recommendation-view",
                            ServiceId = 9,
                            StageId = 6
                        },
                        new
                        {
                            Id = 63,
                            AdminUrl = "/admin/eservice-admin/treatment-recommendation-admin-view",
                            ConcurrencyStamp = new Guid("1ddecc0a-6ea9-49b6-bc20-2f3ed2c9bbef"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/treatment-recommendation-view",
                            ServiceId = 9,
                            StageId = 7
                        },
                        new
                        {
                            Id = 64,
                            AdminUrl = "",
                            ConcurrencyStamp = new Guid("adcc35fd-7e84-4e9b-bb1e-cdcfc058ef00"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/e-council/update",
                            ServiceId = 1,
                            StageId = 1
                        },
                        new
                        {
                            Id = 65,
                            AdminUrl = "/admin/eservice-admin/electronic-summon-admin-preview-step",
                            ConcurrencyStamp = new Guid("30cd3729-eb13-4247-b4a3-6b9c8d429903"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/e-council/electronic-board-view",
                            ServiceId = 1,
                            StageId = 2
                        },
                        new
                        {
                            Id = 66,
                            AdminUrl = "/admin/eservice-admin/electronic-summon-admin-view",
                            ConcurrencyStamp = new Guid("eb7fcfc6-aa9d-4b13-95a9-2bd845ca0999"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/e-council/update",
                            ServiceId = 1,
                            StageId = 3
                        },
                        new
                        {
                            Id = 67,
                            AdminUrl = "/admin/eservice-admin/electronic-summon-admin-view",
                            ConcurrencyStamp = new Guid("ebb1e8a5-03ba-4ca4-b8a7-995eac20c810"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/e-council/electronic-board-view",
                            ServiceId = 1,
                            StageId = 4
                        },
                        new
                        {
                            Id = 68,
                            AdminUrl = "/admin/eservice-admin/electronic-summon-admin-view",
                            ConcurrencyStamp = new Guid("522b10e0-a754-4bda-bb02-85a9f4b0dd25"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/e-council/electronic-board-view",
                            ServiceId = 1,
                            StageId = 5
                        },
                        new
                        {
                            Id = 69,
                            AdminUrl = "/admin/eservice-admin/electronic-summon-admin-view",
                            ConcurrencyStamp = new Guid("19310972-f8e5-43e7-852e-3b4b7d37bdcb"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/e-council/electronic-board-view",
                            ServiceId = 1,
                            StageId = 6
                        },
                        new
                        {
                            Id = 70,
                            AdminUrl = "/admin/eservice-admin/electronic-summon-admin-view",
                            ConcurrencyStamp = new Guid("67549a00-2b45-4510-952a-695f36b77e54"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/e-council/electronic-board-view",
                            ServiceId = 1,
                            StageId = 7
                        });
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Stage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("CanEdit")
                        .HasColumnType("bit");

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.ToTable("Stages", "Lookup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CanEdit = true,
                            ConcurrencyStamp = new Guid("eb6aef2f-5008-4563-92ea-e260e76ce51f"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "مسودة",
                            NameEn = "Draft"
                        },
                        new
                        {
                            Id = 2,
                            CanEdit = false,
                            ConcurrencyStamp = new Guid("a939b73f-42ea-405e-9469-1d2584971954"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "طلب جديد",
                            NameEn = "New Request"
                        },
                        new
                        {
                            Id = 3,
                            CanEdit = true,
                            ConcurrencyStamp = new Guid("024c3f10-83bf-4084-8544-4b5f1ec50958"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "استكمال البيانات من مقدم الطلب",
                            NameEn = "Complete Data From Requester"
                        },
                        new
                        {
                            Id = 4,
                            CanEdit = false,
                            ConcurrencyStamp = new Guid("ed46945b-6043-4300-8f65-854d71395917"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "تحت الإجراء",
                            NameEn = "Under Processing"
                        },
                        new
                        {
                            Id = 5,
                            CanEdit = false,
                            ConcurrencyStamp = new Guid("db6b11ee-37ff-4ee0-8c5d-e223404ba47b"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "الطلب مرفوض من مدير النظام",
                            NameEn = "Request Rejected From Admin"
                        },
                        new
                        {
                            Id = 6,
                            CanEdit = false,
                            ConcurrencyStamp = new Guid("bfc4d77f-ce17-46d8-b188-85293ec84945"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "الطلب مرفوض",
                            NameEn = "Request Rejected"
                        },
                        new
                        {
                            Id = 7,
                            CanEdit = false,
                            ConcurrencyStamp = new Guid("8dccaac6-41fd-44b2-b160-dafd7fae6b43"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "الطلب معتمد",
                            NameEn = "Request Approved"
                        });
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.UploadedFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConcurrencyStamp")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntityId")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("EntityName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Extention")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("OriginalName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("SubEntityName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.ToTable("UploadedFiles", "FileManager");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("FirstNameAr")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("FirstNameEn")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("GovernorateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IdentityExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMale")
                        .HasColumnType("bit");

                    b.Property<string>("Last2Factor")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastNameAr")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("LastNameEn")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("NationalityId")
                        .HasColumnType("int");

                    b.Property<string>("PassportId")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("SecondNameAr")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("SecondNameEn")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ThirdNameAr")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ThirdNameEn")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("GovernorateId");

                    b.HasIndex("NationalityId");

                    b.ToTable("Users", "Security");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "quicksofting2020@gmail.com",
                            FirstNameAr = "محمد",
                            FirstNameEn = "Mohamed",
                            IsActive = true,
                            IsAdmin = true,
                            IsMale = true,
                            LastNameAr = "يوسف",
                            LastNameEn = "Youssef",
                            PhoneNumber = "0581643654",
                            SecondNameAr = "صلاح",
                            SecondNameEn = "Salah",
                            ThirdNameAr = "عبدالرحمن",
                            ThirdNameEn = "AbdelRahman",
                            TwoFactorEnabled = true,
                            UserName = "myoussef"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1989, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mohaalp_salah@yahoo.com",
                            FirstNameAr = "محمد",
                            FirstNameEn = "Mohamed",
                            IsActive = true,
                            IsAdmin = false,
                            IsMale = true,
                            LastNameAr = "يوسف",
                            LastNameEn = "Youssef",
                            PhoneNumber = "0581643654",
                            SecondNameAr = "صلاح",
                            SecondNameEn = "Salah",
                            ThirdNameAr = "عبدالرحمن",
                            ThirdNameEn = "AbdelRahman",
                            TwoFactorEnabled = true,
                            UserName = "2440573661"
                        });
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Audience", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedAudiences")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedAudiences")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.BuildingType", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedBuildingTypes")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedBuildingTypes")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.CaseType", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedCaseTypes")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedCaseTypes")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.CommentStage", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedCommentStages")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedCommentStages")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.DefendantType", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedDefendantTypes")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedDefendantTypes")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Governorate", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedGovernorates")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedGovernorates")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.LatestNews", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedLatestNews")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedLatestNews")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Emirates.Core.Domain.Entities.NewsCateguery", "NewsCateguery")
                        .WithMany("LatestNews")
                        .HasForeignKey("NewsCategueryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");

                    b.Navigation("NewsCateguery");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.LatestNewsComment", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.CommentStage", "CommentStage")
                        .WithMany("LatestNewsComments")
                        .HasForeignKey("CommentStageId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedLatestNewsComments")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Emirates.Core.Domain.Entities.LatestNews", "LatestNews")
                        .WithMany("LatestNewsComments")
                        .HasForeignKey("LatestNewsId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CommentStage");

                    b.Navigation("LatestNews");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.MainPagePoints", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.PageContent", "PageContent")
                        .WithMany("MainPagePoints")
                        .HasForeignKey("PageContentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PageContent");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.MaritalStatus", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedMaritalStatuses")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedMaritalStatuses")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Nationality", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedNationalities")
                        .HasForeignKey("CreatedUserId");

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedNationalities")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.News", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedNews")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedNews")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Emirates.Core.Domain.Entities.NewsType", "NewsTypesCode")
                        .WithMany("News")
                        .HasForeignKey("NewsTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");

                    b.Navigation("NewsTypesCode");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.NewsCateguery", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedNewsCategueries")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedNewsCategueries")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.NewsType", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedNewsType")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedNewsType")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Poster", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedPosters")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedPosters")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Religion", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedReligions")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedReligions")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Request", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedRequests")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedRequests")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Emirates.Core.Domain.Entities.Service", "Service")
                        .WithMany("Requests")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.Stage", "Stage")
                        .WithMany("Requests")
                        .HasForeignKey("StageId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");

                    b.Navigation("Service");

                    b.Navigation("Stage");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestAttachmentType", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedRequestAttachmentTypes")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedRequestAttachmentTypes")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Emirates.Core.Domain.Entities.Service", "Service")
                        .WithMany("RequestAttachmentTypes")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestElectronicBoard", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.Request", "Request")
                        .WithOne("RequestElectronicBoard")
                        .HasForeignKey("Emirates.Core.Domain.Entities.RequestElectronicBoard", "Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.RequestType", "RequestType")
                        .WithMany("RequestElectronicBoards")
                        .HasForeignKey("RequestTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Request");

                    b.Navigation("RequestType");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestElectronicSummon", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.Request", "Request")
                        .WithOne("RequestElectronicSummon")
                        .HasForeignKey("Emirates.Core.Domain.Entities.RequestElectronicSummon", "Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.RequestType", "RequestType")
                        .WithMany("RequestElectronicSummons")
                        .HasForeignKey("RequestTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Request");

                    b.Navigation("RequestType");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestForeignersRealtyOwner", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.BuildingType", "BuildingType")
                        .WithMany("RequestForeignersRealtyOwners")
                        .HasForeignKey("BuildingTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.Governorate", "Governorate")
                        .WithMany("RequestForeignersRealtyOwners")
                        .HasForeignKey("GovernorateId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.Request", "Request")
                        .WithOne("RequestForeignersRealtyOwner")
                        .HasForeignKey("Emirates.Core.Domain.Entities.RequestForeignersRealtyOwner", "Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.Religion", "Religion")
                        .WithMany("RequestForeignersRealtyOwners")
                        .HasForeignKey("ReligionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BuildingType");

                    b.Navigation("Governorate");

                    b.Navigation("Religion");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestJudgmentExecution", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.DefendantType", "DefendantType")
                        .WithMany("RequestJudgmentExecutions")
                        .HasForeignKey("DefendantTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.Request", "Request")
                        .WithOne("RequestJudgmentExecution")
                        .HasForeignKey("Emirates.Core.Domain.Entities.RequestJudgmentExecution", "Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("DefendantType");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestLandsInfringement", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.Governorate", "Governorate")
                        .WithMany("RequestLandsInfringements")
                        .HasForeignKey("GovernorateId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.Request", "Request")
                        .WithOne("RequestLandsInfringement")
                        .HasForeignKey("Emirates.Core.Domain.Entities.RequestLandsInfringement", "Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.RequestType", "RequestType")
                        .WithMany("RequestLandsInfringements")
                        .HasForeignKey("RequestTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Governorate");

                    b.Navigation("Request");

                    b.Navigation("RequestType");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestMarriageCertificate", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.Request", "Request")
                        .WithOne("RequestMarriageCertificate")
                        .HasForeignKey("Emirates.Core.Domain.Entities.RequestMarriageCertificate", "Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.MaritalStatus", "MaritalStatus")
                        .WithMany("RequestMarriageCertificates")
                        .HasForeignKey("MaritalStatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.RequestType", "RequestType")
                        .WithMany("RequestMarriageCertificates")
                        .HasForeignKey("RequestTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("MaritalStatus");

                    b.Navigation("Request");

                    b.Navigation("RequestType");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestPrisonersService", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.CaseType", "CaseType")
                        .WithMany("RequestPrisonersServices")
                        .HasForeignKey("CaseTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.Request", "Request")
                        .WithOne("RequestPrisonersService")
                        .HasForeignKey("Emirates.Core.Domain.Entities.RequestPrisonersService", "Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.RequestType", "RequestType")
                        .WithMany("RequestPrisonersServices")
                        .HasForeignKey("RequestTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CaseType");

                    b.Navigation("Request");

                    b.Navigation("RequestType");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestPrisonerTempRelease", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.CaseType", "CaseType")
                        .WithMany("RequestPrisonerTempReleases")
                        .HasForeignKey("CaseTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.Request", "Request")
                        .WithOne("RequestPrisonerTempRelease")
                        .HasForeignKey("Emirates.Core.Domain.Entities.RequestPrisonerTempRelease", "Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.RequestType", "RequestType")
                        .WithMany("RequestPrisonerTempReleases")
                        .HasForeignKey("RequestTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CaseType");

                    b.Navigation("Request");

                    b.Navigation("RequestType");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestStageLog", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedRequestStageLogs")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedRequestStageLogs")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Emirates.Core.Domain.Entities.Request", "Request")
                        .WithMany("RequestStageLogs")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.Stage", "Stage")
                        .WithMany("RequestStageLogs")
                        .HasForeignKey("StageId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");

                    b.Navigation("Request");

                    b.Navigation("Stage");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestTreatmentRecommendation", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.Request", "Request")
                        .WithOne("RequestTreatmentRecommendation")
                        .HasForeignKey("Emirates.Core.Domain.Entities.RequestTreatmentRecommendation", "Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.RequestType", "RequestType")
                        .WithMany("RequestTreatmentRecommendations")
                        .HasForeignKey("RequestTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Request");

                    b.Navigation("RequestType");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestType", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedRequestTypes")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedRequestTypes")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Emirates.Core.Domain.Entities.Service", "Service")
                        .WithMany("RequestTypes")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Role", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedRoles")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedRoles")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Service", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedServices")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedServices")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.ServiceAudience", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.Audience", "Audience")
                        .WithMany("ServiceAudiences")
                        .HasForeignKey("AudienceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedServiceAudiences")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.Service", "Service")
                        .WithMany("ServiceAudiences")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Audience");

                    b.Navigation("CreatedUser");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.ServiceBenefit", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.Service", "Service")
                        .WithMany("ServiceBenefits")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.ServiceCondition", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedServiceConditions")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedServiceConditions")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Emirates.Core.Domain.Entities.Service", "Service")
                        .WithMany("ServiceConditions")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.ServiceRate", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedServiceRates")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedUser");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.ServiceStage", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedServiceStages")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedServiceStages")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Emirates.Core.Domain.Entities.Service", "Service")
                        .WithMany("ServiceStages")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.Stage", "Stage")
                        .WithMany("ServiceStages")
                        .HasForeignKey("StageId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");

                    b.Navigation("Service");

                    b.Navigation("Stage");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Stage", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedStages")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedStages")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.UploadedFile", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedUploadedFiles")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedUploadedFiles")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.User", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.Governorate", "Governorate")
                        .WithMany("Users")
                        .HasForeignKey("GovernorateId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Emirates.Core.Domain.Entities.Nationality", "Nationality")
                        .WithMany("Users")
                        .HasForeignKey("NationalityId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Governorate");

                    b.Navigation("Nationality");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Audience", b =>
                {
                    b.Navigation("ServiceAudiences");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.BuildingType", b =>
                {
                    b.Navigation("RequestForeignersRealtyOwners");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.CaseType", b =>
                {
                    b.Navigation("RequestPrisonerTempReleases");

                    b.Navigation("RequestPrisonersServices");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.CommentStage", b =>
                {
                    b.Navigation("LatestNewsComments");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.DefendantType", b =>
                {
                    b.Navigation("RequestJudgmentExecutions");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Governorate", b =>
                {
                    b.Navigation("RequestForeignersRealtyOwners");

                    b.Navigation("RequestLandsInfringements");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.LatestNews", b =>
                {
                    b.Navigation("LatestNewsComments");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.MaritalStatus", b =>
                {
                    b.Navigation("RequestMarriageCertificates");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Nationality", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.NewsCateguery", b =>
                {
                    b.Navigation("LatestNews");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.NewsType", b =>
                {
                    b.Navigation("News");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.PageContent", b =>
                {
                    b.Navigation("MainPagePoints");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Religion", b =>
                {
                    b.Navigation("RequestForeignersRealtyOwners");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Request", b =>
                {
                    b.Navigation("RequestElectronicBoard");

                    b.Navigation("RequestElectronicSummon");

                    b.Navigation("RequestForeignersRealtyOwner");

                    b.Navigation("RequestJudgmentExecution");

                    b.Navigation("RequestLandsInfringement");

                    b.Navigation("RequestMarriageCertificate");

                    b.Navigation("RequestPrisonerTempRelease");

                    b.Navigation("RequestPrisonersService");

                    b.Navigation("RequestStageLogs");

                    b.Navigation("RequestTreatmentRecommendation");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestType", b =>
                {
                    b.Navigation("RequestElectronicBoards");

                    b.Navigation("RequestElectronicSummons");

                    b.Navigation("RequestLandsInfringements");

                    b.Navigation("RequestMarriageCertificates");

                    b.Navigation("RequestPrisonerTempReleases");

                    b.Navigation("RequestPrisonersServices");

                    b.Navigation("RequestTreatmentRecommendations");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Service", b =>
                {
                    b.Navigation("RequestAttachmentTypes");

                    b.Navigation("RequestTypes");

                    b.Navigation("Requests");

                    b.Navigation("ServiceAudiences");

                    b.Navigation("ServiceBenefits");

                    b.Navigation("ServiceConditions");

                    b.Navigation("ServiceStages");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Stage", b =>
                {
                    b.Navigation("RequestStageLogs");

                    b.Navigation("Requests");

                    b.Navigation("ServiceStages");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.User", b =>
                {
                    b.Navigation("CreatedAudiences");

                    b.Navigation("CreatedBuildingTypes");

                    b.Navigation("CreatedCaseTypes");

                    b.Navigation("CreatedCommentStages");

                    b.Navigation("CreatedDefendantTypes");

                    b.Navigation("CreatedGovernorates");

                    b.Navigation("CreatedLatestNews");

                    b.Navigation("CreatedMaritalStatuses");

                    b.Navigation("CreatedNationalities");

                    b.Navigation("CreatedNews");

                    b.Navigation("CreatedNewsCategueries");

                    b.Navigation("CreatedNewsType");

                    b.Navigation("CreatedPosters");

                    b.Navigation("CreatedReligions");

                    b.Navigation("CreatedRequestAttachmentTypes");

                    b.Navigation("CreatedRequestStageLogs");

                    b.Navigation("CreatedRequestTypes");

                    b.Navigation("CreatedRequests");

                    b.Navigation("CreatedRoles");

                    b.Navigation("CreatedServiceAudiences");

                    b.Navigation("CreatedServiceConditions");

                    b.Navigation("CreatedServiceRates");

                    b.Navigation("CreatedServiceStages");

                    b.Navigation("CreatedServices");

                    b.Navigation("CreatedStages");

                    b.Navigation("CreatedUploadedFiles");

                    b.Navigation("ModifiedAudiences");

                    b.Navigation("ModifiedBuildingTypes");

                    b.Navigation("ModifiedCaseTypes");

                    b.Navigation("ModifiedCommentStages");

                    b.Navigation("ModifiedDefendantTypes");

                    b.Navigation("ModifiedGovernorates");

                    b.Navigation("ModifiedLatestNews");

                    b.Navigation("ModifiedLatestNewsComments");

                    b.Navigation("ModifiedMaritalStatuses");

                    b.Navigation("ModifiedNationalities");

                    b.Navigation("ModifiedNews");

                    b.Navigation("ModifiedNewsCategueries");

                    b.Navigation("ModifiedNewsType");

                    b.Navigation("ModifiedPosters");

                    b.Navigation("ModifiedReligions");

                    b.Navigation("ModifiedRequestAttachmentTypes");

                    b.Navigation("ModifiedRequestStageLogs");

                    b.Navigation("ModifiedRequestTypes");

                    b.Navigation("ModifiedRequests");

                    b.Navigation("ModifiedRoles");

                    b.Navigation("ModifiedServiceConditions");

                    b.Navigation("ModifiedServiceStages");

                    b.Navigation("ModifiedServices");

                    b.Navigation("ModifiedStages");

                    b.Navigation("ModifiedUploadedFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
