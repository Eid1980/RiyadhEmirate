// <auto-generated />
using System;
using Emirates.InfraStructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Emirates.InfraStructure.Migrations
{
    [DbContext(typeof(EmiratesContext))]
    partial class EmiratesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.HasSequence("RequestNumberSequence", "Request")
                .StartsAt(100000L);

            modelBuilder.Entity("Emirates.Core.Domain.Entities.CaseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.ToTable("CaseTypes", "Lookup");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Governorate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.ToTable("Governorates", "Lookup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = new Guid("d9fdbf2b-6cc1-4d72-987a-1cd8e00e0bc0"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "مدينة الرياض مقر الإمارة",
                            NameEn = "Emirate of Riyadh City"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = new Guid("2482ec2c-ec9d-4cae-af27-c583edd98785"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظةالدرعية",
                            NameEn = "Diriyah"
                        },
                        new
                        {
                            Id = 3,
                            ConcurrencyStamp = new Guid("46b267ce-ad2d-4921-95c7-a694cc902ae3"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظةالخرج",
                            NameEn = "Al-Kharj"
                        },
                        new
                        {
                            Id = 4,
                            ConcurrencyStamp = new Guid("6323a787-9d20-4dd3-9359-829409788588"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظةالدوادمي",
                            NameEn = "Dawadmi"
                        },
                        new
                        {
                            Id = 5,
                            ConcurrencyStamp = new Guid("4a124c03-7200-49ba-85e9-0048e4f71b16"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظةالمجمعة",
                            NameEn = "Al Majma'ah"
                        },
                        new
                        {
                            Id = 6,
                            ConcurrencyStamp = new Guid("06a34227-0fd9-4924-a853-db42d6ca77aa"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظةالقويعية",
                            NameEn = "Al Quwaiiyah"
                        },
                        new
                        {
                            Id = 7,
                            ConcurrencyStamp = new Guid("7d699228-5730-446a-aa88-2afdd6785f1f"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظة وادي الدواسر",
                            NameEn = "Wadi ad-Dawasir"
                        },
                        new
                        {
                            Id = 8,
                            ConcurrencyStamp = new Guid("31c6a27e-b8d2-4218-9b78-18cec48625a5"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظةالأفلاج",
                            NameEn = "Al-Aflaj"
                        },
                        new
                        {
                            Id = 9,
                            ConcurrencyStamp = new Guid("26dd24b7-5095-4ce5-8d21-b5f9eae3fd71"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظةالزلفي",
                            NameEn = "Az Zulfi"
                        },
                        new
                        {
                            Id = 10,
                            ConcurrencyStamp = new Guid("6b800358-ff9f-4d57-92d5-088ffa6f9d69"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظة شـقراء",
                            NameEn = "Shaqra"
                        },
                        new
                        {
                            Id = 11,
                            ConcurrencyStamp = new Guid("d7772607-8392-4fb9-b720-814b2a3cbfaf"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظة حوطةبني تميم",
                            NameEn = "Howtat Bani Tamim"
                        },
                        new
                        {
                            Id = 12,
                            ConcurrencyStamp = new Guid("b1f764c1-7fd6-4dd9-8c3e-20a2509a9aa0"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظة عفيـف",
                            NameEn = "Afif"
                        },
                        new
                        {
                            Id = 13,
                            ConcurrencyStamp = new Guid("1b1bf428-c6e9-466a-b1aa-a5508d01e701"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظةالسليل",
                            NameEn = "As Sulayyil"
                        },
                        new
                        {
                            Id = 14,
                            ConcurrencyStamp = new Guid("c9b23516-8e40-4d07-90c2-d389f2881be5"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظة ضـرمـا",
                            NameEn = "Dhurma"
                        },
                        new
                        {
                            Id = 15,
                            ConcurrencyStamp = new Guid("a49dba44-fad8-43bf-8b83-15b92f72a1fd"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظةالمزاحمية",
                            NameEn = "Al-Muzahmiya"
                        },
                        new
                        {
                            Id = 16,
                            ConcurrencyStamp = new Guid("12d65749-85bc-43ab-bc4a-d2c26d4e5b7c"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظة رمـاح",
                            NameEn = "Rumah"
                        },
                        new
                        {
                            Id = 17,
                            ConcurrencyStamp = new Guid("2acdfa3c-2296-49f8-bcea-3cf2e36a52c9"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظة ثـادق",
                            NameEn = "Thadiq"
                        },
                        new
                        {
                            Id = 18,
                            ConcurrencyStamp = new Guid("801099ab-52c6-4912-82ca-f7cdffbdfd3a"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظة حـريملاء",
                            NameEn = "Huraymila"
                        },
                        new
                        {
                            Id = 19,
                            ConcurrencyStamp = new Guid("cc7dacf7-b770-4d83-89b1-f6856a00ae64"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظةالحريق",
                            NameEn = "Al Hariq"
                        },
                        new
                        {
                            Id = 20,
                            ConcurrencyStamp = new Guid("153cf334-96dd-4e84-83eb-958409e3f177"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظةالغـاط",
                            NameEn = "Al Ghat"
                        },
                        new
                        {
                            Id = 21,
                            ConcurrencyStamp = new Guid("d61c18c1-3eb0-43a8-b2b7-ce78d9a877eb"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظة مرات",
                            NameEn = "Marat"
                        },
                        new
                        {
                            Id = 22,
                            ConcurrencyStamp = new Guid("42f6bc9d-fb19-4fe6-8f2c-d7b8316e826f"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظة الدلم",
                            NameEn = "Ad-Dilam"
                        },
                        new
                        {
                            Id = 23,
                            ConcurrencyStamp = new Guid("0bcecb78-204f-4b54-a6ab-b4afd8502a50"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "محافظة الرين",
                            NameEn = "Rayn"
                        });
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.MaritalStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.ToTable("MaritalStatuses", "Lookup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = new Guid("0614db19-bd3e-4319-8577-eaaf36fa8bf0"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "أعزب",
                            NameEn = "Single"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = new Guid("e79eba47-784f-4159-8cce-bfcf969676a4"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "متزوج",
                            NameEn = "Married"
                        },
                        new
                        {
                            Id = 3,
                            ConcurrencyStamp = new Guid("12c703f4-2534-4d7f-8b8a-96b5b59c72a6"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "مطلق",
                            NameEn = "Divorced"
                        },
                        new
                        {
                            Id = 4,
                            ConcurrencyStamp = new Guid("d0e2f903-794e-438e-8b63-295c71ca22bc"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "أرمل",
                            NameEn = "Widower"
                        });
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Nationality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("DialCode")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Iso2")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("LastModifiedBy");

                    b.ToTable("Nationalities", "Lookup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "101",
                            ConcurrencyStamp = new Guid("7c1b13a9-c871-4248-af8e-6adfe3190e4f"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "971",
                            IsActive = true,
                            Iso2 = "ae",
                            NameAr = "الامارات العربية",
                            NameEn = "Arab Emirates"
                        },
                        new
                        {
                            Id = 2,
                            Code = "102",
                            ConcurrencyStamp = new Guid("999edbbb-1ff1-4de2-9582-d483b8aaed63"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "962",
                            IsActive = true,
                            Iso2 = "jo",
                            NameAr = "الاردن",
                            NameEn = "Jordan"
                        },
                        new
                        {
                            Id = 3,
                            Code = "103",
                            ConcurrencyStamp = new Guid("e214d76b-b4f3-435c-927a-7238df169313"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "973",
                            IsActive = true,
                            Iso2 = "bh",
                            NameAr = "البحرين",
                            NameEn = "Bahrain"
                        },
                        new
                        {
                            Id = 4,
                            Code = "104",
                            ConcurrencyStamp = new Guid("48ce5e73-c0fd-4b74-927a-3d078ec63113"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "963",
                            IsActive = true,
                            Iso2 = "sy",
                            NameAr = "سوريا",
                            NameEn = "Syria"
                        },
                        new
                        {
                            Id = 5,
                            Code = "105",
                            ConcurrencyStamp = new Guid("55d8c819-6319-435d-867b-fc7fd754e42e"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "964",
                            IsActive = true,
                            Iso2 = "iq",
                            NameAr = "العراق",
                            NameEn = "Iraq"
                        },
                        new
                        {
                            Id = 6,
                            Code = "106",
                            ConcurrencyStamp = new Guid("272c5f22-e124-47c8-bfd1-dcc62a7dc6c7"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "968",
                            IsActive = true,
                            Iso2 = "om",
                            NameAr = "عمان",
                            NameEn = "Oman"
                        },
                        new
                        {
                            Id = 7,
                            Code = "107",
                            ConcurrencyStamp = new Guid("8e5b9a6a-1d8e-4e12-84ef-7e7d07308f0f"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "970",
                            IsActive = true,
                            Iso2 = "ps",
                            NameAr = "فلسطين",
                            NameEn = "Palestine"
                        },
                        new
                        {
                            Id = 8,
                            Code = "108",
                            ConcurrencyStamp = new Guid("e7141682-8809-4e8a-b65f-de902e885882"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "974",
                            IsActive = true,
                            Iso2 = "qa",
                            NameAr = "قطر",
                            NameEn = "Qatar"
                        },
                        new
                        {
                            Id = 9,
                            Code = "109",
                            ConcurrencyStamp = new Guid("7a225b82-383d-48d0-bc25-53f894458d87"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "965",
                            IsActive = true,
                            Iso2 = "kw",
                            NameAr = "الكويت",
                            NameEn = "Kuwait"
                        },
                        new
                        {
                            Id = 10,
                            Code = "110",
                            ConcurrencyStamp = new Guid("2f6e3196-7d5b-4e23-aa41-b173e436c6c0"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "961",
                            IsActive = true,
                            Iso2 = "lb",
                            NameAr = "لبنان",
                            NameEn = "Lebanon"
                        },
                        new
                        {
                            Id = 11,
                            Code = "111",
                            ConcurrencyStamp = new Guid("36ea2360-800c-4cdc-a202-3f84333005a6"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "967",
                            IsActive = true,
                            Iso2 = "ye",
                            NameAr = "اليمن",
                            NameEn = "Yemen"
                        },
                        new
                        {
                            Id = 12,
                            Code = "113",
                            ConcurrencyStamp = new Guid("479e16c3-1074-4c32-90e9-c09a62d7a4c9"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "966",
                            IsActive = true,
                            Iso2 = "sa",
                            NameAr = "العربية السعودية",
                            NameEn = "Saudi Arabia"
                        },
                        new
                        {
                            Id = 13,
                            Code = "201",
                            ConcurrencyStamp = new Guid("5e2c8070-1807-468c-9bf1-718aeda251a4"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "216",
                            IsActive = true,
                            Iso2 = "tn",
                            NameAr = "تونس",
                            NameEn = "Tunisia"
                        },
                        new
                        {
                            Id = 14,
                            Code = "202",
                            ConcurrencyStamp = new Guid("b391606a-4cb8-4e24-ac2f-6b05ee8838d9"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "213",
                            IsActive = true,
                            Iso2 = "dz",
                            NameAr = "الجزائر",
                            NameEn = "Algeria"
                        },
                        new
                        {
                            Id = 15,
                            Code = "203",
                            ConcurrencyStamp = new Guid("0bc5dff9-d0ef-4032-864c-33b3121416aa"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "253",
                            IsActive = true,
                            Iso2 = "dj",
                            NameAr = "جيبوتى",
                            NameEn = "Djibouti"
                        },
                        new
                        {
                            Id = 16,
                            Code = "204",
                            ConcurrencyStamp = new Guid("5769d17b-d508-4194-95be-d4f946aeb3b7"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "249",
                            IsActive = true,
                            Iso2 = "sd",
                            NameAr = "السودان",
                            NameEn = "Sudan"
                        },
                        new
                        {
                            Id = 17,
                            Code = "205",
                            ConcurrencyStamp = new Guid("54a07522-7754-4c27-a201-730011fa3aac"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "252",
                            IsActive = true,
                            Iso2 = "so",
                            NameAr = "الصومال",
                            NameEn = "Somalia"
                        },
                        new
                        {
                            Id = 18,
                            Code = "206",
                            ConcurrencyStamp = new Guid("b5ea12af-d4ff-4d95-a01f-39b4d8dc425b"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "218",
                            IsActive = true,
                            Iso2 = "ly",
                            NameAr = "ليبيا",
                            NameEn = "Libya"
                        },
                        new
                        {
                            Id = 19,
                            Code = "207",
                            ConcurrencyStamp = new Guid("422f0a61-4d4f-4aac-a0eb-c37d5f9453aa"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "20",
                            IsActive = true,
                            Iso2 = "eg",
                            NameAr = "مصر",
                            NameEn = "Egypt"
                        },
                        new
                        {
                            Id = 20,
                            Code = "208",
                            ConcurrencyStamp = new Guid("b907759d-9ff7-45d1-8732-e9d9b2c21284"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "212",
                            IsActive = true,
                            Iso2 = "ma",
                            NameAr = "المغرب",
                            NameEn = "Morocco"
                        },
                        new
                        {
                            Id = 21,
                            Code = "209",
                            ConcurrencyStamp = new Guid("4b09a426-e211-4bea-9ba5-267b717da1c9"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "222",
                            IsActive = true,
                            Iso2 = "mr",
                            NameAr = "موريتانيا",
                            NameEn = "Mauritania"
                        },
                        new
                        {
                            Id = 22,
                            Code = "301",
                            ConcurrencyStamp = new Guid("c32229cc-5f20-46ff-813d-7f11f9b0a4c6"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "93",
                            IsActive = true,
                            Iso2 = "af",
                            NameAr = "افغانستان",
                            NameEn = "Afghanistan"
                        },
                        new
                        {
                            Id = 23,
                            Code = "302",
                            ConcurrencyStamp = new Guid("8155ef80-7d78-4534-a386-9342d9832268"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "62",
                            IsActive = true,
                            Iso2 = "id",
                            NameAr = "اندونيسيا",
                            NameEn = "Indonesia"
                        },
                        new
                        {
                            Id = 24,
                            Code = "303",
                            ConcurrencyStamp = new Guid("3825a89d-f043-4ab5-a39c-c37864db7a4f"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "98",
                            IsActive = true,
                            Iso2 = "ir",
                            NameAr = "ايران",
                            NameEn = "Iran"
                        },
                        new
                        {
                            Id = 25,
                            Code = "304",
                            ConcurrencyStamp = new Guid("77271948-062e-4244-8314-099b8336dd68"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "92",
                            IsActive = true,
                            Iso2 = "pk",
                            NameAr = "باكستان",
                            NameEn = "Pakistan"
                        },
                        new
                        {
                            Id = 26,
                            Code = "305",
                            ConcurrencyStamp = new Guid("f43f05c9-05d6-408f-8e24-1a2007a12cf0"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "880",
                            IsActive = true,
                            Iso2 = "bd",
                            NameAr = "بنجلاديش",
                            NameEn = "Bangladesh"
                        },
                        new
                        {
                            Id = 27,
                            Code = "306",
                            ConcurrencyStamp = new Guid("4043045c-c8be-4c0e-b1ee-ae683f177461"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "673",
                            IsActive = true,
                            Iso2 = "bn",
                            NameAr = "بروني",
                            NameEn = "Brunei"
                        },
                        new
                        {
                            Id = 28,
                            Code = "307",
                            ConcurrencyStamp = new Guid("516b0faf-9904-4577-a36b-b5ab2b146f9c"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "95",
                            IsActive = true,
                            Iso2 = "mm",
                            NameAr = "جمهورية ميانمار",
                            NameEn = "Myanmar"
                        },
                        new
                        {
                            Id = 29,
                            Code = "308",
                            ConcurrencyStamp = new Guid("dcb15334-4c40-4f8e-8b86-9f3400b91958"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "66",
                            IsActive = true,
                            Iso2 = "th",
                            NameAr = "تايلند",
                            NameEn = "Thailand"
                        },
                        new
                        {
                            Id = 30,
                            Code = "309",
                            ConcurrencyStamp = new Guid("2e7d0343-e1cb-482b-95d8-bc8816927a1c"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "90",
                            IsActive = true,
                            Iso2 = "tr",
                            NameAr = "تركيا",
                            NameEn = "Turkey"
                        },
                        new
                        {
                            Id = 31,
                            Code = "310",
                            ConcurrencyStamp = new Guid("a4b91d1c-4db1-4408-b125-de3ddf10a88f"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "960",
                            IsActive = true,
                            Iso2 = "mv",
                            NameAr = "جزر مالديف",
                            NameEn = "Maldives"
                        },
                        new
                        {
                            Id = 32,
                            Code = "311",
                            ConcurrencyStamp = new Guid("c23ca15c-c8c8-4220-b71e-bf479fecddda"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "7",
                            IsActive = true,
                            Iso2 = "ru",
                            NameAr = "روسيا الاتحادية",
                            NameEn = "Russia"
                        },
                        new
                        {
                            Id = 33,
                            Code = "312",
                            ConcurrencyStamp = new Guid("ee819511-8128-411f-97e3-fc948d864cd5"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "65",
                            IsActive = true,
                            Iso2 = "sg",
                            NameAr = "سنغافورة",
                            NameEn = "Singapore"
                        },
                        new
                        {
                            Id = 34,
                            Code = "313",
                            ConcurrencyStamp = new Guid("7672b2e8-6b01-4cc3-82b4-e38fae35378a"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "94",
                            IsActive = true,
                            Iso2 = "lk",
                            NameAr = "سري لنكا",
                            NameEn = "Sri Lanka"
                        },
                        new
                        {
                            Id = 35,
                            Code = "315",
                            ConcurrencyStamp = new Guid("eba0817d-4d57-4df1-bd9f-a4b790fb4c13"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "63",
                            IsActive = true,
                            Iso2 = "ph",
                            NameAr = "الفلبين",
                            NameEn = "Philippines"
                        },
                        new
                        {
                            Id = 36,
                            Code = "316",
                            ConcurrencyStamp = new Guid("0472a98b-8c7b-4987-986f-a29d8838d747"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "84",
                            IsActive = true,
                            Iso2 = "vn",
                            NameAr = "فيتنام",
                            NameEn = "Vietnam"
                        },
                        new
                        {
                            Id = 37,
                            Code = "317",
                            ConcurrencyStamp = new Guid("302b91c8-1ad7-4196-906a-ec8abe3c8fbf"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "855",
                            IsActive = true,
                            Iso2 = "kh",
                            NameAr = "كمبوديا",
                            NameEn = "Cambodia"
                        },
                        new
                        {
                            Id = 38,
                            Code = "318",
                            ConcurrencyStamp = new Guid("e973b68f-8102-4d45-9e89-d0d114e19235"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "82",
                            IsActive = true,
                            Iso2 = "kr",
                            NameAr = "كوريا الجنوبية",
                            NameEn = "South Korea"
                        },
                        new
                        {
                            Id = 39,
                            Code = "319",
                            ConcurrencyStamp = new Guid("6a9022e0-509d-47e4-a918-3355ebf1dfd7"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "60",
                            IsActive = true,
                            Iso2 = "my",
                            NameAr = "ماليزيا",
                            NameEn = "Malaysia"
                        },
                        new
                        {
                            Id = 40,
                            Code = "320",
                            ConcurrencyStamp = new Guid("2e858355-a671-4d88-b8be-8fc89384d623"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "977",
                            IsActive = true,
                            Iso2 = "np",
                            NameAr = "نيبال",
                            NameEn = "Nepal"
                        },
                        new
                        {
                            Id = 41,
                            Code = "321",
                            ConcurrencyStamp = new Guid("cc17061f-031a-4a77-b087-4d9663277278"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "91",
                            IsActive = true,
                            Iso2 = "in",
                            NameAr = "الهند",
                            NameEn = "India"
                        },
                        new
                        {
                            Id = 42,
                            Code = "322",
                            ConcurrencyStamp = new Guid("4cc20af2-0c5f-474e-8ef1-faeeb0222281"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "852",
                            IsActive = true,
                            Iso2 = "hk",
                            NameAr = "هونج كونج",
                            NameEn = "Hong Kong"
                        },
                        new
                        {
                            Id = 43,
                            Code = "323",
                            ConcurrencyStamp = new Guid("594b5d60-8380-4c1c-a3eb-16d3df31c6d7"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "81",
                            IsActive = true,
                            Iso2 = "jp",
                            NameAr = "اليابان",
                            NameEn = "Japan"
                        },
                        new
                        {
                            Id = 44,
                            Code = "324",
                            ConcurrencyStamp = new Guid("c2fe79c6-41fc-4a78-b780-3554c55bf75c"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "975",
                            IsActive = true,
                            Iso2 = "bt",
                            NameAr = "بهوتان",
                            NameEn = "Bhutan"
                        },
                        new
                        {
                            Id = 45,
                            Code = "325",
                            ConcurrencyStamp = new Guid("3bc00314-5577-46da-99f4-39efcdc23729"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "86",
                            IsActive = true,
                            Iso2 = "cn",
                            NameAr = "الصين الشعبية",
                            NameEn = "China"
                        },
                        new
                        {
                            Id = 46,
                            Code = "326",
                            ConcurrencyStamp = new Guid("682a3064-5f16-490d-ad55-2893fb187bfe"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "357",
                            IsActive = true,
                            Iso2 = "cy",
                            NameAr = "قبرص",
                            NameEn = "Cyprus"
                        },
                        new
                        {
                            Id = 47,
                            Code = "328",
                            ConcurrencyStamp = new Guid("8e06158c-5ec9-44a6-a719-8f95c730965e"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "850",
                            IsActive = true,
                            Iso2 = "kp",
                            NameAr = "كوريا الشمالية",
                            NameEn = "North Korea"
                        },
                        new
                        {
                            Id = 48,
                            Code = "329",
                            ConcurrencyStamp = new Guid("afdc3d8b-5a91-42cf-a4fa-8213ef93189d"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "856",
                            IsActive = true,
                            Iso2 = "la",
                            NameAr = "لاوس",
                            NameEn = "Laos"
                        },
                        new
                        {
                            Id = 49,
                            Code = "330",
                            ConcurrencyStamp = new Guid("389aa5fb-91ab-4323-a41b-d4ff3f6f990a"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "976",
                            IsActive = true,
                            Iso2 = "mn",
                            NameAr = "منغوليا",
                            NameEn = "Mongolia"
                        },
                        new
                        {
                            Id = 50,
                            Code = "331",
                            ConcurrencyStamp = new Guid("34c5c534-38a4-43e7-87e7-4aa7c18eb007"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "853",
                            IsActive = true,
                            Iso2 = "mo",
                            NameAr = "ماكاو",
                            NameEn = "Macao"
                        },
                        new
                        {
                            Id = 51,
                            Code = "332",
                            ConcurrencyStamp = new Guid("feb0baf5-b024-4624-8821-02e1e14607ab"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            NameAr = "تركستان",
                            NameEn = "Turkistan"
                        },
                        new
                        {
                            Id = 52,
                            Code = "335",
                            ConcurrencyStamp = new Guid("736788f6-c248-491d-aee9-8044f4dabd80"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            NameAr = "القبائل النازحة",
                            NameEn = "Tribes Emigrated"
                        },
                        new
                        {
                            Id = 53,
                            Code = "336",
                            ConcurrencyStamp = new Guid("de8a3c52-f403-44a7-998a-863784d3666f"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "7",
                            IsActive = true,
                            Iso2 = "kz",
                            NameAr = "كازاخستان",
                            NameEn = "Kazakhstan"
                        },
                        new
                        {
                            Id = 54,
                            Code = "337",
                            ConcurrencyStamp = new Guid("e70a0517-9087-4c7f-b098-4386e17a2e01"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "998",
                            IsActive = true,
                            Iso2 = "uz",
                            NameAr = "ازبكستان",
                            NameEn = "Uzbekistan"
                        },
                        new
                        {
                            Id = 55,
                            Code = "338",
                            ConcurrencyStamp = new Guid("5b2951f2-7e1a-48ae-b643-20a40d125a4c"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "993",
                            IsActive = true,
                            Iso2 = "tm",
                            NameAr = "تركمانستان",
                            NameEn = "Turkmenistan"
                        },
                        new
                        {
                            Id = 56,
                            Code = "339",
                            ConcurrencyStamp = new Guid("1ca263a0-d2a0-47c0-a3ff-d001253eae0b"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "992",
                            IsActive = true,
                            Iso2 = "tj",
                            NameAr = "طاجكستان",
                            NameEn = "Tajikistan"
                        },
                        new
                        {
                            Id = 57,
                            Code = "340",
                            ConcurrencyStamp = new Guid("56b51776-069c-4b03-936e-63f1ade66d19"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "996",
                            IsActive = false,
                            Iso2 = "kg",
                            NameAr = "قرغيزستان",
                            NameEn = "kyrgyzstan"
                        },
                        new
                        {
                            Id = 58,
                            Code = "343",
                            ConcurrencyStamp = new Guid("99dc14ac-cc54-4dbc-9b80-aba64c6fb75f"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "994",
                            IsActive = true,
                            Iso2 = "az",
                            NameAr = "اذربيجان",
                            NameEn = "Azerbaijan"
                        },
                        new
                        {
                            Id = 59,
                            Code = "344",
                            ConcurrencyStamp = new Guid("45935208-d6f8-4a9c-918f-0ad13402cdeb"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            NameAr = "الشاشان",
                            NameEn = "Chechnya"
                        },
                        new
                        {
                            Id = 60,
                            Code = "345",
                            ConcurrencyStamp = new Guid("18e73806-2aae-4eb5-b056-6529e4661989"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "872",
                            IsActive = false,
                            Iso2 = "da",
                            NameAr = "داغستان",
                            NameEn = "Dagestan"
                        },
                        new
                        {
                            Id = 61,
                            Code = "346",
                            ConcurrencyStamp = new Guid("4c7cdb1d-fc50-40ce-bd4b-6d14b3bd3005"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            NameAr = "انقوش",
                            NameEn = "Anquosh"
                        },
                        new
                        {
                            Id = 62,
                            Code = "347",
                            ConcurrencyStamp = new Guid("c896e212-36bc-4da5-b628-18b310379b61"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "7",
                            IsActive = false,
                            Iso2 = "ta",
                            NameAr = "تتارستان",
                            NameEn = "Tatarstan"
                        },
                        new
                        {
                            Id = 63,
                            Code = "349",
                            ConcurrencyStamp = new Guid("29418d63-1c03-4e96-af4f-72ea18a25f6e"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "670",
                            IsActive = false,
                            Iso2 = "tp",
                            NameAr = "تيمور الشرقية",
                            NameEn = "East Timor"
                        },
                        new
                        {
                            Id = 64,
                            Code = "401",
                            ConcurrencyStamp = new Guid("7ef69429-df7d-445b-adf2-6832b5be0b29"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "251",
                            IsActive = true,
                            Iso2 = "et",
                            NameAr = "اثيوبيا",
                            NameEn = "Ethiopia"
                        },
                        new
                        {
                            Id = 65,
                            Code = "402",
                            ConcurrencyStamp = new Guid("f69d3dce-8376-4588-99ee-8fec98748ef8"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "256",
                            IsActive = true,
                            Iso2 = "ug",
                            NameAr = "اوغندة",
                            NameEn = "Uganda"
                        },
                        new
                        {
                            Id = 66,
                            Code = "403",
                            ConcurrencyStamp = new Guid("527d7fd6-0d42-4a72-81ea-b1122033cfd6"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "267",
                            IsActive = true,
                            Iso2 = "bw",
                            NameAr = "بوتسوانا",
                            NameEn = "Botswana"
                        },
                        new
                        {
                            Id = 67,
                            Code = "404",
                            ConcurrencyStamp = new Guid("9c16a371-021c-452f-beb4-d3875d3e01a5"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "257",
                            IsActive = true,
                            Iso2 = "bi",
                            NameAr = "بورندي",
                            NameEn = "Burundi"
                        },
                        new
                        {
                            Id = 68,
                            Code = "405",
                            ConcurrencyStamp = new Guid("9160282f-7c83-4981-9402-890af9332aff"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "235",
                            IsActive = true,
                            Iso2 = "td",
                            NameAr = "تشاد",
                            NameEn = "Chad"
                        },
                        new
                        {
                            Id = 69,
                            Code = "406",
                            ConcurrencyStamp = new Guid("def81905-4a1d-4c78-a5df-24605057458b"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "255",
                            IsActive = true,
                            Iso2 = "tz",
                            NameAr = "تنزانيا",
                            NameEn = "Tanzania"
                        },
                        new
                        {
                            Id = 70,
                            Code = "407",
                            ConcurrencyStamp = new Guid("89dca3cc-8737-419b-96ff-fe12fc9e9ffe"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "228",
                            IsActive = true,
                            Iso2 = "tg",
                            NameAr = "توجو",
                            NameEn = "Togo"
                        },
                        new
                        {
                            Id = 71,
                            Code = "408",
                            ConcurrencyStamp = new Guid("13f30edd-11c0-4c3a-bcc0-0eed170cbcd2"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "241",
                            IsActive = true,
                            Iso2 = "ga",
                            NameAr = "جابون",
                            NameEn = "Answer"
                        },
                        new
                        {
                            Id = 72,
                            Code = "409",
                            ConcurrencyStamp = new Guid("7c3becbc-7ed0-4369-8c9f-759b5f8334a8"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "220",
                            IsActive = true,
                            Iso2 = "gm",
                            NameAr = "غامبيا",
                            NameEn = "Gambia"
                        },
                        new
                        {
                            Id = 73,
                            Code = "410",
                            ConcurrencyStamp = new Guid("13f98b3c-11bf-49e0-80af-8e5607282d31"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "269",
                            IsActive = true,
                            Iso2 = "km",
                            NameAr = "جزر القمر",
                            NameEn = "Comoros"
                        },
                        new
                        {
                            Id = 74,
                            Code = "411",
                            ConcurrencyStamp = new Guid("1793fd61-77c1-4419-a13f-5c1131b79ef4"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "27",
                            IsActive = true,
                            Iso2 = "za",
                            NameAr = "جنوب افريقيا",
                            NameEn = "South Africa"
                        },
                        new
                        {
                            Id = 75,
                            Code = "412",
                            ConcurrencyStamp = new Guid("44f38764-625a-4319-857d-fabd0f7ac485"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "264",
                            IsActive = true,
                            Iso2 = "na",
                            NameAr = "ناميبيا",
                            NameEn = "Namibia"
                        },
                        new
                        {
                            Id = 76,
                            Code = "413",
                            ConcurrencyStamp = new Guid("88f57fad-61a2-4479-b17a-532ce2136522"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "229",
                            IsActive = true,
                            Iso2 = "bj",
                            NameAr = "بنين",
                            NameEn = "Benin"
                        },
                        new
                        {
                            Id = 77,
                            Code = "414",
                            ConcurrencyStamp = new Guid("9bd488a6-2182-4166-9af4-507b6127f312"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "250",
                            IsActive = true,
                            Iso2 = "rw",
                            NameAr = "رواندا",
                            NameEn = "Rwanda"
                        },
                        new
                        {
                            Id = 78,
                            Code = "415",
                            ConcurrencyStamp = new Guid("a8ef0d90-7e78-4a1b-b2f8-d15cf98c3003"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "263",
                            IsActive = true,
                            Iso2 = "zw",
                            NameAr = "زمبابوي",
                            NameEn = "Zimbabwe"
                        },
                        new
                        {
                            Id = 79,
                            Code = "416",
                            ConcurrencyStamp = new Guid("893a96a1-713b-4bca-a806-8f6b2821a7d7"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "243",
                            IsActive = false,
                            Iso2 = "zr",
                            NameAr = "زائير",
                            NameEn = "Zaire"
                        },
                        new
                        {
                            Id = 80,
                            Code = "417",
                            ConcurrencyStamp = new Guid("b90dc00a-0a17-4d32-a909-ec9eed4ea6eb"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "260",
                            IsActive = true,
                            Iso2 = "zm",
                            NameAr = "زامبيا",
                            NameEn = "Zambia"
                        },
                        new
                        {
                            Id = 81,
                            Code = "418",
                            ConcurrencyStamp = new Guid("0d944f46-8d49-49f6-9cf5-7e51e615c66a"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "225",
                            IsActive = false,
                            Iso2 = "ci",
                            NameAr = "ساحل العاج",
                            NameEn = "Ivory Coast"
                        },
                        new
                        {
                            Id = 82,
                            Code = "419",
                            ConcurrencyStamp = new Guid("f0d71686-3b96-4473-961c-01bcd1ef9ae5"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Iso2 = "sn  221",
                            NameAr = "السنغال",
                            NameEn = "Senegal"
                        },
                        new
                        {
                            Id = 83,
                            Code = "420",
                            ConcurrencyStamp = new Guid("14db7ee5-cee9-438a-a7af-575d0e140343"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "232",
                            IsActive = true,
                            Iso2 = "sl",
                            NameAr = "سيراليون",
                            NameEn = "Sierra Leone"
                        },
                        new
                        {
                            Id = 84,
                            Code = "421",
                            ConcurrencyStamp = new Guid("d13e3237-d556-4cb4-b01f-e698ae61f8a2"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "233",
                            IsActive = true,
                            Iso2 = "gh",
                            NameAr = "غانا",
                            NameEn = "Ghana"
                        },
                        new
                        {
                            Id = 85,
                            Code = "422",
                            ConcurrencyStamp = new Guid("9cab0a39-7608-452d-969f-e385bcc7cf2a"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "224",
                            IsActive = true,
                            Iso2 = "gn",
                            NameAr = "غينيا",
                            NameEn = "Guinea"
                        },
                        new
                        {
                            Id = 86,
                            Code = "423",
                            ConcurrencyStamp = new Guid("fb76e563-1395-46b2-b03d-375a5d72fb05"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "245",
                            IsActive = true,
                            Iso2 = "gw",
                            NameAr = "غينيابيساو",
                            NameEn = "Guinea Bissau"
                        },
                        new
                        {
                            Id = 87,
                            Code = "424",
                            ConcurrencyStamp = new Guid("b47d031d-1ef7-4902-96f1-591a1e46be28"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "226",
                            IsActive = true,
                            Iso2 = "bf",
                            NameAr = "بوركينافاسو",
                            NameEn = "Burkina Faso"
                        },
                        new
                        {
                            Id = 88,
                            Code = "425",
                            ConcurrencyStamp = new Guid("1a401880-a550-4f95-966c-184b7e06eb8b"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "237",
                            IsActive = true,
                            Iso2 = "cm",
                            NameAr = "الكاميرون",
                            NameEn = "Cameroon"
                        },
                        new
                        {
                            Id = 89,
                            Code = "426",
                            ConcurrencyStamp = new Guid("66c1e611-d1af-4945-9d34-f93dd5ede924"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "243",
                            IsActive = true,
                            Iso2 = "cd",
                            NameAr = "جمهورية الكونغو الديمقراطية",
                            NameEn = "Congo(DRC)"
                        },
                        new
                        {
                            Id = 90,
                            Code = "427",
                            ConcurrencyStamp = new Guid("e478ff33-be57-42c8-a521-6d4c2c98bfef"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "254",
                            IsActive = true,
                            Iso2 = "ke",
                            NameAr = "كينيا",
                            NameEn = "Kenya"
                        },
                        new
                        {
                            Id = 91,
                            Code = "428",
                            ConcurrencyStamp = new Guid("58aefd63-f99a-49fe-a054-5c443f4cbe50"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "266",
                            IsActive = true,
                            Iso2 = "ls",
                            NameAr = "ليسوتو",
                            NameEn = "Lesotho"
                        },
                        new
                        {
                            Id = 92,
                            Code = "429",
                            ConcurrencyStamp = new Guid("b706d494-9f9d-4a05-a00e-d2428bd778ce"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "231",
                            IsActive = true,
                            Iso2 = "lr",
                            NameAr = "ليبيريا",
                            NameEn = "Liberia"
                        },
                        new
                        {
                            Id = 93,
                            Code = "430",
                            ConcurrencyStamp = new Guid("d8ce5ad8-b1a8-46c7-a947-54b809bb51e3"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "223",
                            IsActive = true,
                            Iso2 = "ml",
                            NameAr = "مالي",
                            NameEn = "Mali"
                        },
                        new
                        {
                            Id = 94,
                            Code = "432",
                            ConcurrencyStamp = new Guid("1c34648b-3881-44a5-a2ea-234d9b8e02a1"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "265",
                            IsActive = true,
                            Iso2 = "mw",
                            NameAr = "ملاوي",
                            NameEn = "Malawi"
                        },
                        new
                        {
                            Id = 95,
                            Code = "433",
                            ConcurrencyStamp = new Guid("6ee64b9f-0f5b-4502-8dcd-737c97a0fc9a"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "230",
                            IsActive = true,
                            Iso2 = "mu",
                            NameAr = "موريشيوس",
                            NameEn = "Mauritius"
                        },
                        new
                        {
                            Id = 96,
                            Code = "434",
                            ConcurrencyStamp = new Guid("01f781a2-7898-4586-8aef-97483c17ca47"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "258",
                            IsActive = true,
                            Iso2 = "mz",
                            NameAr = "موزمبيق",
                            NameEn = "Mozambique"
                        },
                        new
                        {
                            Id = 97,
                            Code = "435",
                            ConcurrencyStamp = new Guid("83dfb2bd-e8d7-4435-bfe1-2453130c670c"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "234",
                            IsActive = true,
                            Iso2 = "ng",
                            NameAr = "نيجيريا",
                            NameEn = "Nigeria"
                        },
                        new
                        {
                            Id = 98,
                            Code = "436",
                            ConcurrencyStamp = new Guid("195fd20e-d339-4945-84fe-7cf432f69bfa"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "227",
                            IsActive = true,
                            Iso2 = "ne",
                            NameAr = "النيجر",
                            NameEn = "Niger"
                        },
                        new
                        {
                            Id = 99,
                            Code = "437",
                            ConcurrencyStamp = new Guid("118b669c-94ad-4395-9bb1-08f3ab9f9f87"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "236",
                            IsActive = true,
                            Iso2 = "cf",
                            NameAr = "افريقيا الوسطى",
                            NameEn = "Central Africa"
                        },
                        new
                        {
                            Id = 100,
                            Code = "438",
                            ConcurrencyStamp = new Guid("1764e7ca-9ced-4ec1-b20a-06da1fe3fbea"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "244",
                            IsActive = true,
                            Iso2 = "ao",
                            NameAr = "انجولا",
                            NameEn = "Angola"
                        },
                        new
                        {
                            Id = 101,
                            Code = "439",
                            ConcurrencyStamp = new Guid("1970aa8c-2c5b-4fc1-a7ff-d494f076a00c"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "599",
                            IsActive = true,
                            Iso2 = "bq",
                            NameAr = "الجزر الكاريبية الهولندية",
                            NameEn = "Caribbean Netherlands"
                        },
                        new
                        {
                            Id = 102,
                            Code = "440",
                            ConcurrencyStamp = new Guid("2b8c586b-5a11-4f62-bf06-7287791b7fd4"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "240",
                            IsActive = true,
                            Iso2 = "gq",
                            NameAr = "غينيا الاستوائية",
                            NameEn = "Equatorial Guinea"
                        },
                        new
                        {
                            Id = 103,
                            Code = "441",
                            ConcurrencyStamp = new Guid("6d78f740-49df-4acb-b424-a579518908c1"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            NameAr = "ملاجاسي",
                            NameEn = "Mlajasi"
                        },
                        new
                        {
                            Id = 104,
                            Code = "442",
                            ConcurrencyStamp = new Guid("737487dd-a7f4-4732-ae9b-b1fef2e3bde9"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "239",
                            IsActive = true,
                            Iso2 = "st",
                            NameAr = "ساوتومي/برنسبى",
                            NameEn = "S? o Tomé and Pr? ncipe"
                        },
                        new
                        {
                            Id = 105,
                            Code = "443",
                            ConcurrencyStamp = new Guid("876b5ae2-6342-4176-a867-4183040b3130"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "248",
                            IsActive = true,
                            Iso2 = "sc",
                            NameAr = "جزر سيشل",
                            NameEn = "Seychelles Islands"
                        },
                        new
                        {
                            Id = 106,
                            Code = "444",
                            ConcurrencyStamp = new Guid("c1da05a0-8d71-44a9-99da-66b7a4b6ef85"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "268",
                            IsActive = false,
                            Iso2 = "sz",
                            NameAr = "سوزيلاند",
                            NameEn = "Swaziland"
                        },
                        new
                        {
                            Id = 107,
                            Code = "449",
                            ConcurrencyStamp = new Guid("cfb7e654-b1e1-452b-bfdf-25e57eb70835"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "291",
                            IsActive = true,
                            Iso2 = "er",
                            NameAr = "ارتيريا",
                            NameEn = "Eritrea"
                        },
                        new
                        {
                            Id = 108,
                            Code = "453",
                            ConcurrencyStamp = new Guid("b7bcf4ed-6d4f-41eb-ad10-03b178c6669f"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "211",
                            IsActive = false,
                            Iso2 = "ss",
                            NameAr = "جمهورية جنوب السودان",
                            NameEn = "Republic of South Sudan"
                        },
                        new
                        {
                            Id = 109,
                            Code = "454",
                            ConcurrencyStamp = new Guid("355018b4-0a98-43e2-a2a9-cf61367eaa64"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "238",
                            IsActive = true,
                            Iso2 = "cv",
                            NameAr = "كاب فيرد(الراس الاخضر)",
                            NameEn = "Cape Verde"
                        },
                        new
                        {
                            Id = 110,
                            Code = "501",
                            ConcurrencyStamp = new Guid("3580d1f9-9ed8-411c-ad33-85915742248e"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "34",
                            IsActive = true,
                            Iso2 = "es",
                            NameAr = "اسبانيا",
                            NameEn = "Spain"
                        },
                        new
                        {
                            Id = 111,
                            Code = "502",
                            ConcurrencyStamp = new Guid("1985e6c0-0600-4524-9902-5469a94b6098"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "355",
                            IsActive = true,
                            Iso2 = "al",
                            NameAr = "البانيا",
                            NameEn = "Albania"
                        },
                        new
                        {
                            Id = 112,
                            Code = "503",
                            ConcurrencyStamp = new Guid("13677bf4-38cf-48bb-8e12-1aac99c6b80e"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "49",
                            IsActive = true,
                            Iso2 = "de",
                            NameAr = "المانيا",
                            NameEn = "Germany"
                        },
                        new
                        {
                            Id = 113,
                            Code = "504",
                            ConcurrencyStamp = new Guid("c10e6b7b-7c45-4c12-94ba-15ebbf6108d1"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "353",
                            IsActive = true,
                            Iso2 = "ie",
                            NameAr = "ايرلندا",
                            NameEn = "Ireland"
                        },
                        new
                        {
                            Id = 114,
                            Code = "505",
                            ConcurrencyStamp = new Guid("e7c75afe-7730-4c91-9ffa-e496a3887a1c"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "39",
                            IsActive = true,
                            Iso2 = "it",
                            NameAr = "ايطاليا",
                            NameEn = "Italy"
                        },
                        new
                        {
                            Id = 115,
                            Code = "506",
                            ConcurrencyStamp = new Guid("d7feb4dd-0052-469b-8595-0505f996672f"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "44",
                            IsActive = true,
                            Iso2 = "gb",
                            NameAr = "المملكة المتحدة",
                            NameEn = "United Kingdom"
                        },
                        new
                        {
                            Id = 116,
                            Code = "507",
                            ConcurrencyStamp = new Guid("1fc03179-63e1-4219-97a1-f7351546d052"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "351",
                            IsActive = true,
                            Iso2 = "pt",
                            NameAr = "البرتغال",
                            NameEn = "Portugal"
                        },
                        new
                        {
                            Id = 117,
                            Code = "508",
                            ConcurrencyStamp = new Guid("c969e44d-9b81-49ce-9ac6-f1f0b580e052"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "359",
                            IsActive = true,
                            Iso2 = "bg",
                            NameAr = "بلغاريا",
                            NameEn = "Bulgaria"
                        },
                        new
                        {
                            Id = 118,
                            Code = "509",
                            ConcurrencyStamp = new Guid("c34933ab-bfa4-4227-9ac0-63d642879dd2"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "32",
                            IsActive = true,
                            Iso2 = "be",
                            NameAr = "بلجيكا",
                            NameEn = "Belgium"
                        },
                        new
                        {
                            Id = 119,
                            Code = "510",
                            ConcurrencyStamp = new Guid("e9bc453b-86dd-4c19-adf6-15f36e883ebe"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "48",
                            IsActive = true,
                            Iso2 = "pl",
                            NameAr = "بولندا",
                            NameEn = "Poland"
                        },
                        new
                        {
                            Id = 120,
                            Code = "512",
                            ConcurrencyStamp = new Guid("d44ba2e8-8575-4290-a615-01e3921a7c43"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "45",
                            IsActive = true,
                            Iso2 = "dk",
                            NameAr = "الدانمارك",
                            NameEn = "Denmark"
                        },
                        new
                        {
                            Id = 121,
                            Code = "513",
                            ConcurrencyStamp = new Guid("5365f704-9370-4a77-be68-505083ba46aa"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "40",
                            IsActive = true,
                            Iso2 = "ro",
                            NameAr = "رومانيا",
                            NameEn = "Romania"
                        },
                        new
                        {
                            Id = 122,
                            Code = "514",
                            ConcurrencyStamp = new Guid("b50d6835-8514-4e56-9ca4-2c196b6d7a39"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "46",
                            IsActive = true,
                            Iso2 = "se",
                            NameAr = "السويد",
                            NameEn = "Sweden"
                        },
                        new
                        {
                            Id = 123,
                            Code = "515",
                            ConcurrencyStamp = new Guid("13e55098-34b1-475b-a405-761fbc47e0cd"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "41",
                            IsActive = true,
                            Iso2 = "ch",
                            NameAr = "سويسرا",
                            NameEn = "Switzerland"
                        },
                        new
                        {
                            Id = 124,
                            Code = "516",
                            ConcurrencyStamp = new Guid("c2fd3078-f1f7-4646-abec-e2e3f9375be4"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "33",
                            IsActive = true,
                            Iso2 = "fr",
                            NameAr = "فرنسا",
                            NameEn = "France"
                        },
                        new
                        {
                            Id = 125,
                            Code = "517",
                            ConcurrencyStamp = new Guid("2d0e6266-722f-40be-bc45-22c405b9c14c"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "358",
                            IsActive = true,
                            Iso2 = "fi",
                            NameAr = "فنلندا",
                            NameEn = "Finland"
                        },
                        new
                        {
                            Id = 126,
                            Code = "518",
                            ConcurrencyStamp = new Guid("3858242c-c526-4e0c-b908-52307f0818a3"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "381",
                            IsActive = true,
                            Iso2 = "rs",
                            NameAr = "صربيا",
                            NameEn = "Serbia"
                        },
                        new
                        {
                            Id = 127,
                            Code = "519",
                            ConcurrencyStamp = new Guid("d4c8c026-edf9-407a-8c38-4ea91c128f51"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "31",
                            IsActive = true,
                            Iso2 = "nl",
                            NameAr = "هولندا",
                            NameEn = "Netherlands"
                        },
                        new
                        {
                            Id = 128,
                            Code = "521",
                            ConcurrencyStamp = new Guid("01ad2960-3f18-4469-827d-3ce44d29db74"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "30",
                            IsActive = true,
                            Iso2 = "gr",
                            NameAr = "اليونان",
                            NameEn = "Greece"
                        },
                        new
                        {
                            Id = 129,
                            Code = "522",
                            ConcurrencyStamp = new Guid("788ab004-2edb-4334-887f-fbe1802b9b30"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "376",
                            IsActive = true,
                            Iso2 = "ad",
                            NameAr = "اندورا",
                            NameEn = "Andorra"
                        },
                        new
                        {
                            Id = 130,
                            Code = "523",
                            ConcurrencyStamp = new Guid("0059e1f7-613e-45d4-8461-8948936ecf50"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "43",
                            IsActive = true,
                            Iso2 = "at",
                            NameAr = "النمسا",
                            NameEn = "Austria"
                        },
                        new
                        {
                            Id = 131,
                            Code = "524",
                            ConcurrencyStamp = new Guid("9c2b7cff-b500-450a-8427-48bc46e51faf"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "382",
                            IsActive = true,
                            Iso2 = "me",
                            NameAr = "الجبل الأ سود",
                            NameEn = "Montenegro"
                        },
                        new
                        {
                            Id = 132,
                            Code = "525",
                            ConcurrencyStamp = new Guid("e3c1c6fd-6706-4a86-832c-be758e6e60e2"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "36",
                            IsActive = true,
                            Iso2 = "hu",
                            NameAr = "هنغاريا",
                            NameEn = "Hungary"
                        },
                        new
                        {
                            Id = 133,
                            Code = "526",
                            ConcurrencyStamp = new Guid("6dcb47d6-a865-43be-8296-e333419811ca"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "354",
                            IsActive = true,
                            Iso2 = "is",
                            NameAr = "ايسلندا",
                            NameEn = "Iceland"
                        },
                        new
                        {
                            Id = 134,
                            Code = "527",
                            ConcurrencyStamp = new Guid("aa566ccf-0c7a-4594-ab2f-08b401b76f4b"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "423",
                            IsActive = true,
                            Iso2 = "li",
                            NameAr = "ليختنشتين",
                            NameEn = "Liechtenstein"
                        },
                        new
                        {
                            Id = 135,
                            Code = "528",
                            ConcurrencyStamp = new Guid("328117a3-70a7-4cee-adca-d976abeee46a"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "352",
                            IsActive = true,
                            Iso2 = "lu",
                            NameAr = "لوكسمبورغ",
                            NameEn = "Luxembourg"
                        },
                        new
                        {
                            Id = 136,
                            Code = "529",
                            ConcurrencyStamp = new Guid("d202a0dc-718f-4412-8780-c43df30530ac"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "356",
                            IsActive = true,
                            Iso2 = "mt",
                            NameAr = "مالطا",
                            NameEn = "Malta"
                        },
                        new
                        {
                            Id = 137,
                            Code = "530",
                            ConcurrencyStamp = new Guid("5be891d3-b340-4b39-9d69-7615d39077b2"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "377",
                            IsActive = true,
                            Iso2 = "mc",
                            NameAr = "موناكو",
                            NameEn = "Monaco"
                        },
                        new
                        {
                            Id = 138,
                            Code = "531",
                            ConcurrencyStamp = new Guid("ec6ebddc-c0da-4256-8693-cfa640465a06"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "47",
                            IsActive = true,
                            Iso2 = "no",
                            NameAr = "النرويج",
                            NameEn = "Norway"
                        },
                        new
                        {
                            Id = 139,
                            Code = "532",
                            ConcurrencyStamp = new Guid("b6deda68-bbc0-4e42-9f96-bd0423715a84"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "378",
                            IsActive = true,
                            Iso2 = "sm",
                            NameAr = "سان مارينو",
                            NameEn = "San Marino"
                        },
                        new
                        {
                            Id = 140,
                            Code = "533",
                            ConcurrencyStamp = new Guid("2462206e-695c-4d65-8363-54b6741d3e17"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "39",
                            IsActive = true,
                            Iso2 = "va",
                            NameAr = "مدينة الفاتيكان",
                            NameEn = "Vatican City"
                        },
                        new
                        {
                            Id = 141,
                            Code = "534",
                            ConcurrencyStamp = new Guid("53c6a0c9-cd2f-4089-a47a-0667a8624c79"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "350",
                            IsActive = true,
                            Iso2 = "gi",
                            NameAr = "جبل طارق",
                            NameEn = "Gibraltar"
                        },
                        new
                        {
                            Id = 142,
                            Code = "536",
                            ConcurrencyStamp = new Guid("6fd8426e-0957-4b77-b567-e692940dd9ff"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "380",
                            IsActive = true,
                            Iso2 = "ua",
                            NameAr = "اوكرانيا",
                            NameEn = "Ukraine"
                        },
                        new
                        {
                            Id = 143,
                            Code = "537",
                            ConcurrencyStamp = new Guid("dd522ab4-9f14-4fff-8f80-48ef3349ee9d"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            NameAr = "روسيا البيضاء",
                            NameEn = "Byelorussia"
                        },
                        new
                        {
                            Id = 144,
                            Code = "539",
                            ConcurrencyStamp = new Guid("a260f0ca-38fa-40f2-89b4-31156e389167"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "374",
                            IsActive = true,
                            Iso2 = "am",
                            NameAr = "ارمينيا",
                            NameEn = "Armenia"
                        },
                        new
                        {
                            Id = 145,
                            Code = "540",
                            ConcurrencyStamp = new Guid("b4ee7f13-2f94-42fd-99d7-9260c3718946"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "373",
                            IsActive = true,
                            Iso2 = "md",
                            NameAr = "مولدافيا",
                            NameEn = "Moldova"
                        },
                        new
                        {
                            Id = 146,
                            Code = "541",
                            ConcurrencyStamp = new Guid("d2251285-0194-4c17-98e9-4cd454838896"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "995",
                            IsActive = true,
                            Iso2 = "ge",
                            NameAr = "جورجيا",
                            NameEn = "Georgia"
                        },
                        new
                        {
                            Id = 147,
                            Code = "542",
                            ConcurrencyStamp = new Guid("196e8b19-aa6e-4174-b713-6fa02816e07f"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "370",
                            IsActive = true,
                            Iso2 = "lt",
                            NameAr = "ليتوانيا",
                            NameEn = "Lithuania"
                        },
                        new
                        {
                            Id = 148,
                            Code = "543",
                            ConcurrencyStamp = new Guid("cd1bc470-4aec-4fab-83d6-e8dab84f5d32"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "372",
                            IsActive = true,
                            Iso2 = "ee",
                            NameAr = "استونيا",
                            NameEn = "Estonia"
                        },
                        new
                        {
                            Id = 149,
                            Code = "544",
                            ConcurrencyStamp = new Guid("72353d88-bed7-4a27-842a-95aa5db480d4"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "371",
                            IsActive = true,
                            Iso2 = "lv",
                            NameAr = "لاتفيا",
                            NameEn = "Latvia"
                        },
                        new
                        {
                            Id = 150,
                            Code = "545",
                            ConcurrencyStamp = new Guid("4654a2c7-1058-45bd-98c0-c64f05ec6de6"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "387",
                            IsActive = true,
                            Iso2 = "ba",
                            NameAr = "البوسنة والهرسك",
                            NameEn = "Bosnia / Herzegovina"
                        },
                        new
                        {
                            Id = 151,
                            Code = "546",
                            ConcurrencyStamp = new Guid("ab8bf11a-6c32-4e65-bc94-21003664f45b"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "385",
                            IsActive = true,
                            Iso2 = "hr",
                            NameAr = "كرواتيا",
                            NameEn = "Croatia"
                        },
                        new
                        {
                            Id = 152,
                            Code = "547",
                            ConcurrencyStamp = new Guid("01be77f3-ef28-4bea-bbfc-79edde34144e"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "386",
                            IsActive = true,
                            Iso2 = "si",
                            NameAr = "سلوفينيا",
                            NameEn = "Slovenia"
                        },
                        new
                        {
                            Id = 153,
                            Code = "549",
                            ConcurrencyStamp = new Guid("65214896-ac23-4662-83f2-6ee845b1f0b3"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "389",
                            IsActive = true,
                            Iso2 = "mk",
                            NameAr = "مقدونيا",
                            NameEn = "Macedonia"
                        },
                        new
                        {
                            Id = 154,
                            Code = "552",
                            ConcurrencyStamp = new Guid("2e241877-8cff-445f-bfbd-08648d9f1e94"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "420",
                            IsActive = true,
                            Iso2 = "cz",
                            NameAr = "تشيك",
                            NameEn = "Czech Republic"
                        },
                        new
                        {
                            Id = 155,
                            Code = "553",
                            ConcurrencyStamp = new Guid("07f3a14d-b0b7-4b98-8c6e-29d69fbae23f"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "421",
                            IsActive = true,
                            Iso2 = "sk",
                            NameAr = "سلوفاكيا",
                            NameEn = "Slovakia"
                        },
                        new
                        {
                            Id = 156,
                            Code = "554",
                            ConcurrencyStamp = new Guid("d83386e4-849f-4cdd-890b-e8d2d64cb758"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "298",
                            IsActive = true,
                            Iso2 = "fo",
                            NameAr = "جزر فيرو",
                            NameEn = "Faroe Islands"
                        },
                        new
                        {
                            Id = 157,
                            Code = "555",
                            ConcurrencyStamp = new Guid("a0829d36-1b8d-4787-bdb0-ba744a61a628"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "33",
                            IsActive = false,
                            Iso2 = "fx",
                            NameAr = "ميتروبوليتان فرنسية",
                            NameEn = "France Metropolitan"
                        },
                        new
                        {
                            Id = 158,
                            Code = "601",
                            ConcurrencyStamp = new Guid("ac155be6-1970-4a2d-a444-41413f0b163c"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "1",
                            IsActive = true,
                            Iso2 = "us",
                            NameAr = "الولايات المتحدة",
                            NameEn = "United States"
                        },
                        new
                        {
                            Id = 159,
                            Code = "602",
                            ConcurrencyStamp = new Guid("bfb3c457-74de-4d75-9897-4f57f8cc3a39"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "54",
                            IsActive = true,
                            Iso2 = "ar",
                            NameAr = "الارجنتين",
                            NameEn = "Argentina"
                        },
                        new
                        {
                            Id = 160,
                            Code = "603",
                            ConcurrencyStamp = new Guid("4cb8fead-4daf-4597-adef-11a79ef14194"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "1",
                            IsActive = true,
                            Iso2 = "bb",
                            NameAr = "بربادوس",
                            NameEn = "Barbados"
                        },
                        new
                        {
                            Id = 161,
                            Code = "604",
                            ConcurrencyStamp = new Guid("5729f30c-83f2-46d3-8556-5ad3afc44f50"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "55",
                            IsActive = true,
                            Iso2 = "br",
                            NameAr = "البرازيل",
                            NameEn = "Brazil"
                        },
                        new
                        {
                            Id = 162,
                            Code = "605",
                            ConcurrencyStamp = new Guid("4c25e926-c408-47d2-ad26-cba5b3846a6b"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "507",
                            IsActive = true,
                            Iso2 = "pa",
                            NameAr = "بنما",
                            NameEn = "Panama"
                        },
                        new
                        {
                            Id = 163,
                            Code = "606",
                            ConcurrencyStamp = new Guid("05d68752-509d-45d0-a83d-f13e31ff633d"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "1",
                            IsActive = true,
                            Iso2 = "tt",
                            NameAr = "ترينداد وتوباجو",
                            NameEn = "Trinidad and Tobago"
                        },
                        new
                        {
                            Id = 164,
                            Code = "607",
                            ConcurrencyStamp = new Guid("d8df5456-8442-4dff-b01c-71f7adf3fbf3"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "1",
                            IsActive = true,
                            Iso2 = "jm",
                            NameAr = "جامايكا",
                            NameEn = "Jamaica"
                        },
                        new
                        {
                            Id = 165,
                            Code = "608",
                            ConcurrencyStamp = new Guid("abbdf56e-90dd-4017-bf25-95a748d78695"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            NameAr = "جوانا",
                            NameEn = "Joanna"
                        },
                        new
                        {
                            Id = 166,
                            Code = "609",
                            ConcurrencyStamp = new Guid("355e5314-afb4-468d-b456-8a74640a5c1e"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "58",
                            IsActive = true,
                            Iso2 = "ve",
                            NameAr = "فنزويلا",
                            NameEn = "Venezuela"
                        },
                        new
                        {
                            Id = 167,
                            Code = "610",
                            ConcurrencyStamp = new Guid("a08b2a3c-23f2-40d6-bf4b-ffd9e02584ea"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "1",
                            IsActive = true,
                            Iso2 = "ca",
                            NameAr = "كندا",
                            NameEn = "Canada"
                        },
                        new
                        {
                            Id = 168,
                            Code = "611",
                            ConcurrencyStamp = new Guid("ccdd817a-a5b9-4c73-8e2e-af469c2b510e"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "57",
                            IsActive = true,
                            Iso2 = "co",
                            NameAr = "كولمبيا",
                            NameEn = "Columbia"
                        },
                        new
                        {
                            Id = 169,
                            Code = "612",
                            ConcurrencyStamp = new Guid("2694e1d0-1c52-46e0-ad9c-fc3e78eb701b"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "1",
                            IsActive = true,
                            Iso2 = "bs",
                            NameAr = "جزر البهاما",
                            NameEn = "Bahamas"
                        },
                        new
                        {
                            Id = 170,
                            Code = "613",
                            ConcurrencyStamp = new Guid("f68b7b93-4a3f-487a-8796-f3aabf364efe"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "506",
                            IsActive = true,
                            Iso2 = "cr",
                            NameAr = "كوستاريكا",
                            NameEn = "Costa Rica"
                        },
                        new
                        {
                            Id = 171,
                            Code = "614",
                            ConcurrencyStamp = new Guid("18c1ada2-74df-44ac-b465-c9a5a38c8f54"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "53",
                            IsActive = true,
                            Iso2 = "cu",
                            NameAr = "كوبا",
                            NameEn = "Cuba"
                        },
                        new
                        {
                            Id = 172,
                            Code = "615",
                            ConcurrencyStamp = new Guid("09712ea1-c672-42fd-9d23-637d2783d98c"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "1",
                            IsActive = true,
                            Iso2 = "dm",
                            NameAr = "دومينيكا",
                            NameEn = "Dominica"
                        },
                        new
                        {
                            Id = 173,
                            Code = "616",
                            ConcurrencyStamp = new Guid("e13f3fb1-80ca-44ca-bdda-885bc57ea65e"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "1",
                            IsActive = true,
                            Iso2 = "do",
                            NameAr = "جمهورية دمينكان",
                            NameEn = "Republic Dominica"
                        },
                        new
                        {
                            Id = 174,
                            Code = "617",
                            ConcurrencyStamp = new Guid("e57552c5-efe5-4bff-9342-45bac3521788"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "503",
                            IsActive = true,
                            Iso2 = "sv",
                            NameAr = "السلفادور",
                            NameEn = "El Salvador"
                        },
                        new
                        {
                            Id = 175,
                            Code = "618",
                            ConcurrencyStamp = new Guid("c658f580-c7f3-4f0a-bf6f-420b249abdfe"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "1",
                            IsActive = true,
                            Iso2 = "gd",
                            NameAr = "جرانادا",
                            NameEn = "Granada"
                        },
                        new
                        {
                            Id = 176,
                            Code = "619",
                            ConcurrencyStamp = new Guid("1e2af3b8-3d51-4899-85a0-e840334bc91c"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "502",
                            IsActive = true,
                            Iso2 = "gt",
                            NameAr = "جواتيمالا",
                            NameEn = "Guatemala"
                        },
                        new
                        {
                            Id = 177,
                            Code = "620",
                            ConcurrencyStamp = new Guid("1f9bfe44-a42f-4a34-9e43-ef7969ba9b7a"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "509",
                            IsActive = true,
                            Iso2 = "ht",
                            NameAr = "هايتي",
                            NameEn = "Haiti"
                        },
                        new
                        {
                            Id = 178,
                            Code = "621",
                            ConcurrencyStamp = new Guid("b432ddda-e9b2-4bac-9fd0-6bcf09736d7f"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "504",
                            IsActive = true,
                            Iso2 = "hn",
                            NameAr = "هوندوراس",
                            NameEn = "Honduras"
                        },
                        new
                        {
                            Id = 179,
                            Code = "622",
                            ConcurrencyStamp = new Guid("a7a1fc05-aa8a-447c-8759-41ab585bb4bd"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "52",
                            IsActive = true,
                            Iso2 = "mx",
                            NameAr = "المكسيك",
                            NameEn = "Mexico"
                        },
                        new
                        {
                            Id = 180,
                            Code = "623",
                            ConcurrencyStamp = new Guid("611377e4-abf0-4965-add0-98b894cc7c78"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "505",
                            IsActive = true,
                            Iso2 = "ni",
                            NameAr = "نيكاراجوا",
                            NameEn = "Nicaragua"
                        },
                        new
                        {
                            Id = 181,
                            Code = "624",
                            ConcurrencyStamp = new Guid("2d30d4db-38f9-4d89-9b55-ec5421ffd60e"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "1",
                            IsActive = true,
                            Iso2 = "lc",
                            NameAr = "سانت لوسيا",
                            NameEn = "Saint Lucia"
                        },
                        new
                        {
                            Id = 182,
                            Code = "625",
                            ConcurrencyStamp = new Guid("a233de85-8ef9-44d4-b914-25cf17c6b9b1"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "1",
                            IsActive = true,
                            Iso2 = "vc",
                            NameAr = "سان فينسنت",
                            NameEn = "Saint Vincent"
                        },
                        new
                        {
                            Id = 183,
                            Code = "626",
                            ConcurrencyStamp = new Guid("d5c2bff3-4400-4a5d-bb1a-21242e543e70"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "591",
                            IsActive = true,
                            Iso2 = "bo",
                            NameAr = "بوليفيا",
                            NameEn = "Bolivia"
                        },
                        new
                        {
                            Id = 184,
                            Code = "627",
                            ConcurrencyStamp = new Guid("ad5368ac-aeed-4624-9c0d-8e01e86fa2dc"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "56",
                            IsActive = true,
                            Iso2 = "cl",
                            NameAr = "شيلي",
                            NameEn = "Chile"
                        },
                        new
                        {
                            Id = 185,
                            Code = "628",
                            ConcurrencyStamp = new Guid("f1124e61-b25f-476d-ae05-26f35a169204"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "593",
                            IsActive = true,
                            Iso2 = "ec",
                            NameAr = "اكوادور",
                            NameEn = "Ecuador"
                        },
                        new
                        {
                            Id = 186,
                            Code = "629",
                            ConcurrencyStamp = new Guid("98abe02b-a379-44b2-99ca-3827637f3567"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "595",
                            IsActive = true,
                            Iso2 = "py",
                            NameAr = "باراجواي",
                            NameEn = "Paraguay"
                        },
                        new
                        {
                            Id = 187,
                            Code = "630",
                            ConcurrencyStamp = new Guid("8547ac09-a9fa-46e0-8149-90f00f1cf55c"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "51",
                            IsActive = true,
                            Iso2 = "pe",
                            NameAr = "بيرو",
                            NameEn = "Peru"
                        },
                        new
                        {
                            Id = 188,
                            Code = "701",
                            ConcurrencyStamp = new Guid("6e4b6c9d-2594-4f82-a69c-d1621df7f86d"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "61",
                            IsActive = true,
                            Iso2 = "au",
                            NameAr = "استراليا",
                            NameEn = "Australia"
                        },
                        new
                        {
                            Id = 189,
                            Code = "702",
                            ConcurrencyStamp = new Guid("d10227ca-811f-4649-addb-9f20096c518c"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "64",
                            IsActive = true,
                            Iso2 = "nz",
                            NameAr = "نيوزيلندا",
                            NameEn = "New Zealand"
                        },
                        new
                        {
                            Id = 190,
                            Code = "703",
                            ConcurrencyStamp = new Guid("9340ca55-e647-4871-a21d-2feb932db232"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DialCode = "598",
                            IsActive = true,
                            Iso2 = "yu",
                            NameAr = "أوروغواي",
                            NameEn = "Uruguay"
                        });
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NewsTypeId")
                        .HasColumnType("int");

                    b.Property<string>("TitleAr")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("TitleEn")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.HasIndex("NewsTypeId");

                    b.ToTable("News", "DataManagement");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.NewsType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NewsTypeCode")
                        .HasColumnType("int");

                    b.Property<string>("TitleAr")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("TitleEn")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.HasIndex("NewsTypeCode")
                        .IsUnique();

                    b.ToTable("NewsTypes", "DataManagement");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = new Guid("b524b998-32f8-4a74-b093-15d67db17b94"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            NewsTypeCode = 1,
                            TitleAr = "اخر الاخبار",
                            TitleEn = "Latest news"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = new Guid("da55e4b1-a68d-4c90-ab1b-add7400604dc"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            NewsTypeCode = 2,
                            TitleAr = "اخر المحافظات",
                            TitleEn = "Provinces news"
                        });
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Request", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestNumber")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("StageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("CreatedDate");

                    b.HasIndex("LastModifiedBy");

                    b.HasIndex("ServiceId");

                    b.HasIndex("StageId");

                    b.ToTable("Requests", "Request");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestAttachmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtentionAllowed")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MaxFileSize")
                        .HasColumnType("int");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.HasIndex("ServiceId");

                    b.ToTable("RequestAttachmentTypes", "Request");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestElectronicBoard", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RequestContent")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("RequestTitle")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("RequestTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RequestTypeId");

                    b.ToTable("RequestElectronicBoards", "Request");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestNumberSequence", b =>
                {
                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.ToSqlQuery("SELECT NEXT VALUE FOR Request.RequestNumberSequence AS [Value]");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestPrisonersService", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CaseTypeId")
                        .HasColumnType("int");

                    b.Property<string>("PresonName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("RequestTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CaseTypeId");

                    b.HasIndex("RequestTypeId");

                    b.ToTable("RequestPrisonersServices", "Request");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestPrisonerTempRelease", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CaseTypeId")
                        .HasColumnType("int");

                    b.Property<string>("PresonName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("RequestTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CaseTypeId");

                    b.HasIndex("RequestTypeId");

                    b.ToTable("RequestPrisonerTempReleases", "Request");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestStageLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<Guid>("RequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.HasIndex("RequestId");

                    b.HasIndex("StageId");

                    b.ToTable("RequestStageLogs", "Request");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.HasIndex("ServiceId");

                    b.ToTable("RequestTypes", "Request");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = new Guid("3cd4c3cb-87ee-4edf-a9e4-7027753dd44c"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "حضور زواج",
                            NameEn = "حضور زواج",
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = new Guid("5adaacf9-3854-4222-8b51-145ff80e67d3"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "زيارة الوالدين والأهل",
                            NameEn = "زيارة الوالدين والأهل",
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 3,
                            ConcurrencyStamp = new Guid("50419953-578a-4446-b149-df7173a415bc"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "زيارة مريض",
                            NameEn = "زيارة مريض",
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 4,
                            ConcurrencyStamp = new Guid("3db77005-88bb-4841-a72a-250fb0add887"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "تسجيل في الجامعة",
                            NameEn = "تسجيل في الجامعة",
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 5,
                            ConcurrencyStamp = new Guid("65982331-e609-492e-88bf-d44ba4f33cca"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "عزاء",
                            NameEn = "عزاء",
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 6,
                            ConcurrencyStamp = new Guid("285ab677-115b-4526-aa17-492c6be9c0d2"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "العلاج والتنويم",
                            NameEn = "العلاج والتنويم",
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 7,
                            ConcurrencyStamp = new Guid("be472bfb-1a3c-44b0-8803-8312a6f79683"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "إبعاد سجين لبلادة",
                            NameEn = "إبعاد سجين لبلادة",
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 8,
                            ConcurrencyStamp = new Guid("8f6a31cd-9376-435e-bd71-202539f451d8"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "إعفاء من الإبعاد",
                            NameEn = "إعفاء من الإبعاد",
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 9,
                            ConcurrencyStamp = new Guid("3483446e-ae17-49f4-aa34-a957f819b80e"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "إعفاء من باقي المحكومية لسجين",
                            NameEn = "إعفاء من باقي المحكومية لسجين",
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 10,
                            ConcurrencyStamp = new Guid("3c1eb0e6-f660-40ed-8ebc-940e1f178734"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "إفراج صحي لسجين",
                            NameEn = "إفراج صحي لسجين",
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 11,
                            ConcurrencyStamp = new Guid("d8e2c1a7-73c7-42ed-b5b4-23d155db1a2e"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "إنهاء قضايا الأحداث الاجانب",
                            NameEn = "إنهاء قضايا الأحداث الاجانب",
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 12,
                            ConcurrencyStamp = new Guid("5b65e944-075b-4c48-b329-b22780b9e5fb"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "تثبيت سجين في سجنه",
                            NameEn = "تثبيت سجين في سجنه",
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 13,
                            ConcurrencyStamp = new Guid("790dbf87-1fa7-40ed-a5c7-8f1531257ce1"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "ترحيل سجين",
                            NameEn = "ترحيل سجين",
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 14,
                            ConcurrencyStamp = new Guid("3f9d2465-2ba4-457f-8fc0-e596c0c5b427"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "زيارة خاصة لسجين",
                            NameEn = "زيارة خاصة لسجين",
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 15,
                            ConcurrencyStamp = new Guid("f04c7be5-4686-4811-a032-2646d0806f9c"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "زيارة خاصة مكتبية لسجين",
                            NameEn = "زيارة خاصة مكتبية لسجين",
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 16,
                            ConcurrencyStamp = new Guid("8674710d-997b-4a28-a23e-f4543aebb3da"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "طلب نقل سجين",
                            NameEn = "طلب نقل سجين",
                            ServiceId = 3
                        },
                        new
                        {
                            Id = 17,
                            ConcurrencyStamp = new Guid("b1f7aae7-6f02-418f-b5eb-95ca6e93624e"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "اقتراح",
                            NameEn = "اقتراح",
                            ServiceId = 4
                        },
                        new
                        {
                            Id = 18,
                            ConcurrencyStamp = new Guid("d7327e47-c9f2-49eb-bccf-44303c8ab72a"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "شكوى",
                            NameEn = "شكوى",
                            ServiceId = 4
                        },
                        new
                        {
                            Id = 19,
                            ConcurrencyStamp = new Guid("2e6776bc-564d-47db-b5b3-62d0120b9a8c"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "طلب",
                            NameEn = "طلب",
                            ServiceId = 4
                        });
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.ToTable("Roles", "Security");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RolesScreen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("CanCreate")
                        .HasColumnType("bit");

                    b.Property<bool>("CanDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("CanEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("CanRead")
                        .HasColumnType("bit");

                    b.Property<Guid>("ConcurrencyStamp")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("ScreenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RolesScreen", "Security");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionAr")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("RequestLink")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("TitleAr")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("TitleEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("WorkDays")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.ToTable("Services", "DataManagement");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = new Guid("7f58267c-e154-41cb-827c-975e76548dad"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescriptionAr = "المجلس الالكتروني",
                            DescriptionEn = "المجلس الالكتروني",
                            IsActive = true,
                            NameAr = "المجلس الالكتروني",
                            NameEn = "Electronic Board",
                            RequestLink = "url",
                            TitleAr = "المجلس الالكتروني",
                            TitleEn = "المجلس الالكتروني",
                            WorkDays = 10
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = new Guid("985bd907-0816-4180-b4c0-0246b6dfd82d"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescriptionAr = "الخروج المؤقت لسجين",
                            DescriptionEn = "الخروج المؤقت لسجين",
                            IsActive = true,
                            NameAr = "الخروج المؤقت لسجين",
                            NameEn = "Prisoner Temp Release",
                            RequestLink = "/eservice/prisoner-temp-release",
                            TitleAr = "الخروج المؤقت لسجين",
                            TitleEn = "الخروج المؤقت لسجين",
                            WorkDays = 10
                        },
                        new
                        {
                            Id = 3,
                            ConcurrencyStamp = new Guid("af06242c-6fd6-4725-b849-24aca9f107e4"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescriptionAr = "خدمات السجناء",
                            DescriptionEn = "خدمات السجناء",
                            IsActive = true,
                            NameAr = "خدمات السجناء",
                            NameEn = "Prisoners Services",
                            RequestLink = "/eservice/prisoners-services",
                            TitleAr = "خدمات السجناء",
                            TitleEn = "خدمات السجناء",
                            WorkDays = 10
                        },
                        new
                        {
                            Id = 4,
                            ConcurrencyStamp = new Guid("eb9e03bf-66b4-4845-962e-ac1ff3aea35e"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescriptionAr = "الاستدعاء الإلكتروني",
                            DescriptionEn = "الاستدعاء الإلكتروني",
                            IsActive = true,
                            NameAr = "الاستدعاء الإلكتروني",
                            NameEn = "Electronic Summoning",
                            RequestLink = "/eservice/electronic-summoning",
                            TitleAr = "الاستدعاء الإلكتروني",
                            TitleEn = "الاستدعاء الإلكتروني",
                            WorkDays = 10
                        });
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.ServiceRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("StarsCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.ToTable("ServiceRates", "DataManagement");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.ServiceStage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AdminUrl")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterUrl")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("StageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.HasIndex("ServiceId");

                    b.HasIndex("StageId");

                    b.ToTable("ServiceStages", "DataManagement");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdminUrl = "/admin/eservice-admin/prisoner-temp-release-admin-view",
                            ConcurrencyStamp = new Guid("0b31c1d2-86f2-4b0d-a96b-628c4c9fdce3"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/prisoner-temp-release",
                            ServiceId = 2,
                            StageId = 1
                        },
                        new
                        {
                            Id = 2,
                            AdminUrl = "/admin/eservice-admin/prisoner-temp-release-admin-preview-step",
                            ConcurrencyStamp = new Guid("08eb42a9-c86c-4496-92eb-0a4953836af9"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/prisoner-temp-release-view",
                            ServiceId = 2,
                            StageId = 2
                        },
                        new
                        {
                            Id = 3,
                            AdminUrl = "/admin/eservice-admin/prisoner-temp-release-admin-view",
                            ConcurrencyStamp = new Guid("086750a5-ea89-404f-ad68-881313c99383"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/prisoner-temp-release",
                            ServiceId = 2,
                            StageId = 3
                        },
                        new
                        {
                            Id = 4,
                            AdminUrl = "/admin/eservice-admin/prisoner-temp-release-admin-view",
                            ConcurrencyStamp = new Guid("000b154d-f792-4e13-8965-e89f111a79ae"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/prisoner-temp-release-view",
                            ServiceId = 2,
                            StageId = 4
                        },
                        new
                        {
                            Id = 5,
                            AdminUrl = "/admin/eservice-admin/prisoner-temp-release-admin-view",
                            ConcurrencyStamp = new Guid("1a72c8f5-9cf8-43d0-896f-57a9ebe1f277"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/prisoner-temp-release-view",
                            ServiceId = 2,
                            StageId = 5
                        },
                        new
                        {
                            Id = 6,
                            AdminUrl = "/admin/eservice-admin/prisoner-temp-release-admin-view",
                            ConcurrencyStamp = new Guid("7e8a3748-c144-4ae7-8316-04c3996f5a4e"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/prisoner-temp-release-view",
                            ServiceId = 2,
                            StageId = 6
                        },
                        new
                        {
                            Id = 7,
                            AdminUrl = "/admin/eservice-admin/prisoner-temp-release-admin-view",
                            ConcurrencyStamp = new Guid("bec3b0bf-c771-4482-bb47-30bc54bc0612"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/prisoner-temp-release-view",
                            ServiceId = 2,
                            StageId = 7
                        },
                        new
                        {
                            Id = 8,
                            AdminUrl = "/admin/eservice-admin/prisoners-services-admin-view",
                            ConcurrencyStamp = new Guid("3f5be550-3258-45e0-abdc-ec53875827eb"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/prisoners-services",
                            ServiceId = 3,
                            StageId = 1
                        },
                        new
                        {
                            Id = 9,
                            AdminUrl = "/admin/eservice-admin/prisoners-services-admin-preview-step",
                            ConcurrencyStamp = new Guid("8e550eda-c0be-48d2-ad1c-4b20b53c190b"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/prisoners-services-view",
                            ServiceId = 3,
                            StageId = 2
                        },
                        new
                        {
                            Id = 10,
                            AdminUrl = "/admin/eservice-admin/prisoners-services-admin-view",
                            ConcurrencyStamp = new Guid("57fccb49-1be0-4450-a7ef-adce7f97a39d"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/prisoners-services",
                            ServiceId = 3,
                            StageId = 3
                        },
                        new
                        {
                            Id = 11,
                            AdminUrl = "/admin/eservice-admin/prisoners-services-admin-view",
                            ConcurrencyStamp = new Guid("f9f47a60-22bf-43d3-a6f2-e079943ba8f3"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/prisoners-services-view",
                            ServiceId = 3,
                            StageId = 4
                        },
                        new
                        {
                            Id = 12,
                            AdminUrl = "/admin/eservice-admin/prisoners-services-admin-view",
                            ConcurrencyStamp = new Guid("7f36b63b-da70-4df7-88fe-a31b9540b0d6"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/prisoners-services-view",
                            ServiceId = 3,
                            StageId = 5
                        },
                        new
                        {
                            Id = 13,
                            AdminUrl = "/admin/eservice-admin/prisoners-services-admin-view",
                            ConcurrencyStamp = new Guid("d41d174f-6c12-4a50-9f99-bd57668a9f20"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/prisoners-services-view",
                            ServiceId = 3,
                            StageId = 6
                        },
                        new
                        {
                            Id = 14,
                            AdminUrl = "/admin/eservice-admin/prisoners-services-admin-view",
                            ConcurrencyStamp = new Guid("10ff13f9-54cb-4478-9118-292a44a346ff"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/prisoners-services-view",
                            ServiceId = 3,
                            StageId = 7
                        },
                        new
                        {
                            Id = 15,
                            AdminUrl = "/admin/eservice-admin/electronic-summoning-admin-view",
                            ConcurrencyStamp = new Guid("81cf1aa8-7dec-407b-994a-648bdcc8f19f"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/electronic-summoning",
                            ServiceId = 3,
                            StageId = 1
                        },
                        new
                        {
                            Id = 16,
                            AdminUrl = "/admin/eservice-admin/electronic-summoning-admin-preview-step",
                            ConcurrencyStamp = new Guid("a1aea0c8-1cff-4df2-a140-ac80d756bdc5"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/electronic-summoning-view",
                            ServiceId = 3,
                            StageId = 2
                        },
                        new
                        {
                            Id = 17,
                            AdminUrl = "/admin/eservice-admin/electronic-summoning-admin-view",
                            ConcurrencyStamp = new Guid("90f179b4-f2c2-4e55-acb5-3b0a43ff715a"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/electronic-summoning",
                            ServiceId = 3,
                            StageId = 3
                        },
                        new
                        {
                            Id = 18,
                            AdminUrl = "/admin/eservice-admin/electronic-summoning-admin-view",
                            ConcurrencyStamp = new Guid("1487a7f5-6cac-4db6-a00c-13b0b97c509e"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/electronic-summoning-view",
                            ServiceId = 3,
                            StageId = 4
                        },
                        new
                        {
                            Id = 19,
                            AdminUrl = "/admin/eservice-admin/electronic-summoning-admin-view",
                            ConcurrencyStamp = new Guid("ed82c019-fd6e-4c94-8b41-055ea88428ea"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/electronic-summoning-view",
                            ServiceId = 3,
                            StageId = 5
                        },
                        new
                        {
                            Id = 20,
                            AdminUrl = "/admin/eservice-admin/electronic-summoning-admin-view",
                            ConcurrencyStamp = new Guid("8109125d-2308-4169-be46-77fbbda265b1"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/electronic-summoning-view",
                            ServiceId = 3,
                            StageId = 6
                        },
                        new
                        {
                            Id = 21,
                            AdminUrl = "/admin/eservice-admin/electronic-summoning-admin-view",
                            ConcurrencyStamp = new Guid("a96c9013-12e1-4a5e-bec4-b626c1a39222"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequesterUrl = "/eservice/electronic-summoning-view",
                            ServiceId = 3,
                            StageId = 7
                        });
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Stage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("CanEdit")
                        .HasColumnType("bit");

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.ToTable("Stages", "Lookup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CanEdit = true,
                            ConcurrencyStamp = new Guid("202d2ad4-d3e5-4abc-ad95-20eed4c07b14"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "مسودة",
                            NameEn = "Draft"
                        },
                        new
                        {
                            Id = 2,
                            CanEdit = false,
                            ConcurrencyStamp = new Guid("509f7588-0533-485f-93f3-b623e553665e"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "طلب جديد",
                            NameEn = "New Request"
                        },
                        new
                        {
                            Id = 3,
                            CanEdit = true,
                            ConcurrencyStamp = new Guid("2299118b-c241-4058-b7f2-551eee2fd5b3"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "استكمال البيانات من مقدم الطلب",
                            NameEn = "Complete Data From Requester"
                        },
                        new
                        {
                            Id = 4,
                            CanEdit = false,
                            ConcurrencyStamp = new Guid("05fa2b1b-fc4a-4382-9691-a1c2fd75342d"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "تحت الإجراء",
                            NameEn = "Under Processing"
                        },
                        new
                        {
                            Id = 5,
                            CanEdit = false,
                            ConcurrencyStamp = new Guid("ce9d5c8f-f33c-4f96-8066-522f1cb579db"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "الطلب مرفوض من مدير النظام",
                            NameEn = "Request Rejected From Admin"
                        },
                        new
                        {
                            Id = 6,
                            CanEdit = false,
                            ConcurrencyStamp = new Guid("610098b7-a7c3-4f74-8f32-7753b458eee5"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "الطلب مرفوض",
                            NameEn = "Request Rejected"
                        },
                        new
                        {
                            Id = 7,
                            CanEdit = false,
                            ConcurrencyStamp = new Guid("8b9d8d35-996f-4034-a989-bf7dc0e82bea"),
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            NameAr = "الطلب معتمد",
                            NameEn = "Request Approved"
                        });
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.UploadedFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConcurrencyStamp")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntityId")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("EntityName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Extention")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("OriginalName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("SubEntityName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.ToTable("UploadedFiles", "FileManager");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChildrenCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("EmployeeSide")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("FirstNameAr")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("FirstNameEn")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("GovernorateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IdentityExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDataComplete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMale")
                        .HasColumnType("bit");

                    b.Property<string>("JobOccupation")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Last2Factor")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastNameAr")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("LastNameEn")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("MaritalStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("NationalityId")
                        .HasColumnType("int");

                    b.Property<string>("PassportId")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("SecondNameAr")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("SecondNameEn")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ThirdNameAr")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ThirdNameEn")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("GovernorateId");

                    b.HasIndex("MaritalStatusId");

                    b.HasIndex("NationalityId");

                    b.ToTable("Users", "Security");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChildrenCount = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "quicksofting2020@gmail.com",
                            EmployeeSide = "امارة منطقة الرياض",
                            FirstNameAr = "محمد",
                            FirstNameEn = "Mohamed",
                            IsActive = true,
                            IsAdmin = true,
                            IsDataComplete = true,
                            IsMale = true,
                            JobOccupation = "مبرمج حاسب",
                            LastNameAr = "يوسف",
                            LastNameEn = "Youssef",
                            PhoneNumber = "0581643654",
                            SecondNameAr = "صلاح",
                            SecondNameEn = "Salah",
                            ThirdNameAr = "عبدالرحمن",
                            ThirdNameEn = "AbdelRahman",
                            TwoFactorEnabled = true,
                            UserName = "myoussef"
                        },
                        new
                        {
                            Id = 2,
                            ChildrenCount = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mohaalp_salah@yahoo.com",
                            EmployeeSide = "شركة شور",
                            FirstNameAr = "محمد",
                            FirstNameEn = "Mohamed",
                            IsActive = true,
                            IsAdmin = false,
                            IsDataComplete = false,
                            IsMale = true,
                            JobOccupation = "مبرمج حاسب",
                            LastNameAr = "يوسف",
                            LastNameEn = "Youssef",
                            PhoneNumber = "0581643654",
                            SecondNameAr = "صلاح",
                            SecondNameEn = "Salah",
                            ThirdNameAr = "عبدالرحمن",
                            ThirdNameEn = "AbdelRahman",
                            TwoFactorEnabled = true,
                            UserName = "2440573661"
                        });
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.CaseType", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedCaseTypes")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedCaseTypes")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Governorate", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedGovernorates")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedGovernorates")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.MaritalStatus", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedMaritalStatuses")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedMaritalStatuses")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Nationality", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedNationalities")
                        .HasForeignKey("CreatedUserId");

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedNationalities")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.News", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedNews")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedNews")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Emirates.Core.Domain.Entities.NewsType", "NewsTypesCode")
                        .WithMany("News")
                        .HasForeignKey("NewsTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");

                    b.Navigation("NewsTypesCode");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.NewsType", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedNewsType")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedNewsType")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Request", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedRequests")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedRequests")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Emirates.Core.Domain.Entities.Service", "Service")
                        .WithMany("Requests")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.Stage", "Stage")
                        .WithMany("Requests")
                        .HasForeignKey("StageId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");

                    b.Navigation("Service");

                    b.Navigation("Stage");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestAttachmentType", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedRequestAttachmentTypes")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedRequestAttachmentTypes")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Emirates.Core.Domain.Entities.Service", "Service")
                        .WithMany("RequestAttachmentTypes")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestElectronicBoard", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.Request", "Request")
                        .WithOne("RequestElectronicBoard")
                        .HasForeignKey("Emirates.Core.Domain.Entities.RequestElectronicBoard", "Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.RequestType", "RequestType")
                        .WithMany("RequestElectronicBoards")
                        .HasForeignKey("RequestTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Request");

                    b.Navigation("RequestType");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestPrisonersService", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.CaseType", "CaseType")
                        .WithMany("RequestPrisonersServices")
                        .HasForeignKey("CaseTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.Request", "Request")
                        .WithOne("RequestPrisonersService")
                        .HasForeignKey("Emirates.Core.Domain.Entities.RequestPrisonersService", "Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.RequestType", "RequestType")
                        .WithMany("RequestPrisonersServices")
                        .HasForeignKey("RequestTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CaseType");

                    b.Navigation("Request");

                    b.Navigation("RequestType");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestPrisonerTempRelease", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.CaseType", "CaseType")
                        .WithMany("RequestPrisonerTempReleases")
                        .HasForeignKey("CaseTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.Request", "Request")
                        .WithOne("RequestPrisonerTempRelease")
                        .HasForeignKey("Emirates.Core.Domain.Entities.RequestPrisonerTempRelease", "Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.RequestType", "RequestType")
                        .WithMany("RequestPrisonerTempReleases")
                        .HasForeignKey("RequestTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CaseType");

                    b.Navigation("Request");

                    b.Navigation("RequestType");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestStageLog", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedRequestStageLogs")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedRequestStageLogs")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Emirates.Core.Domain.Entities.Request", "Request")
                        .WithMany("RequestStageLogs")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.Stage", "Stage")
                        .WithMany("RequestStageLogs")
                        .HasForeignKey("StageId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");

                    b.Navigation("Request");

                    b.Navigation("Stage");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestType", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedRequestTypes")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedRequestTypes")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Emirates.Core.Domain.Entities.Service", "Service")
                        .WithMany("RequestTypes")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Role", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedRoles")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedRoles")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Service", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedServices")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedServices")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.ServiceRate", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedServiceRates")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedUser");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.ServiceStage", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedServiceStages")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedServiceStages")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Emirates.Core.Domain.Entities.Service", "Service")
                        .WithMany("ServiceStages")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.Stage", "Stage")
                        .WithMany("ServiceStages")
                        .HasForeignKey("StageId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");

                    b.Navigation("Service");

                    b.Navigation("Stage");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Stage", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedStages")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedStages")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.UploadedFile", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.User", "CreatedUser")
                        .WithMany("CreatedUploadedFiles")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Emirates.Core.Domain.Entities.User", "ModifiedUser")
                        .WithMany("ModifiedUploadedFiles")
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.User", b =>
                {
                    b.HasOne("Emirates.Core.Domain.Entities.Governorate", "Governorate")
                        .WithMany("Users")
                        .HasForeignKey("GovernorateId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Emirates.Core.Domain.Entities.MaritalStatus", "MaritalStatus")
                        .WithMany("Users")
                        .HasForeignKey("MaritalStatusId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Emirates.Core.Domain.Entities.Nationality", "Nationality")
                        .WithMany("Users")
                        .HasForeignKey("NationalityId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Governorate");

                    b.Navigation("MaritalStatus");

                    b.Navigation("Nationality");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.CaseType", b =>
                {
                    b.Navigation("RequestPrisonerTempReleases");

                    b.Navigation("RequestPrisonersServices");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Governorate", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.MaritalStatus", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Nationality", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.NewsType", b =>
                {
                    b.Navigation("News");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Request", b =>
                {
                    b.Navigation("RequestElectronicBoard");

                    b.Navigation("RequestPrisonerTempRelease");

                    b.Navigation("RequestPrisonersService");

                    b.Navigation("RequestStageLogs");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.RequestType", b =>
                {
                    b.Navigation("RequestElectronicBoards");

                    b.Navigation("RequestPrisonerTempReleases");

                    b.Navigation("RequestPrisonersServices");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Service", b =>
                {
                    b.Navigation("RequestAttachmentTypes");

                    b.Navigation("RequestTypes");

                    b.Navigation("Requests");

                    b.Navigation("ServiceStages");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.Stage", b =>
                {
                    b.Navigation("RequestStageLogs");

                    b.Navigation("Requests");

                    b.Navigation("ServiceStages");
                });

            modelBuilder.Entity("Emirates.Core.Domain.Entities.User", b =>
                {
                    b.Navigation("CreatedCaseTypes");

                    b.Navigation("CreatedGovernorates");

                    b.Navigation("CreatedMaritalStatuses");

                    b.Navigation("CreatedNationalities");

                    b.Navigation("CreatedNews");

                    b.Navigation("CreatedNewsType");

                    b.Navigation("CreatedRequestAttachmentTypes");

                    b.Navigation("CreatedRequestStageLogs");

                    b.Navigation("CreatedRequestTypes");

                    b.Navigation("CreatedRequests");

                    b.Navigation("CreatedRoles");

                    b.Navigation("CreatedServiceRates");

                    b.Navigation("CreatedServiceStages");

                    b.Navigation("CreatedServices");

                    b.Navigation("CreatedStages");

                    b.Navigation("CreatedUploadedFiles");

                    b.Navigation("ModifiedCaseTypes");

                    b.Navigation("ModifiedGovernorates");

                    b.Navigation("ModifiedMaritalStatuses");

                    b.Navigation("ModifiedNationalities");

                    b.Navigation("ModifiedNews");

                    b.Navigation("ModifiedNewsType");

                    b.Navigation("ModifiedRequestAttachmentTypes");

                    b.Navigation("ModifiedRequestStageLogs");

                    b.Navigation("ModifiedRequestTypes");

                    b.Navigation("ModifiedRequests");

                    b.Navigation("ModifiedRoles");

                    b.Navigation("ModifiedServiceStages");

                    b.Navigation("ModifiedServices");

                    b.Navigation("ModifiedStages");

                    b.Navigation("ModifiedUploadedFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
